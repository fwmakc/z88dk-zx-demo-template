1     0000              MODULE zx_crt_asm_m4
2     0000              LINE 0, "D:\cpp\demo_zx\tools\z88dk\lib\config\..\..\\libsrc\_DEVELOPMENT\target\zx\zx_crt.asm.m4"
0     0000              
1     0000              
2     0000              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
3     0000              ; SELECT CRT0 FROM -STARTUP=N COMMANDLINE OPTION ;;;;;;;;;;;;;;
4     0000              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
5     0000              
6     0000              
7     0000              IF !DEFINED_startup
8     0000              	defc	DEFINED_startup = 1
9     0000              	defc startup = 31
10    0000              	IFNDEF startup
11    0000              	ENDIF
12    0000              ENDIF
13    0000              
14    0000              
15    0000              IF !DEFINED_REGISTER_SP
16    0000              	defc	DEFINED_REGISTER_SP  = 1
17    0000              	defc REGISTER_SP  = 0xd000
18    0000              	IFNDEF REGISTER_SP
19    0000              	ENDIF
20    0000              ENDIF
21    0000              
22    0000              
23    0000              IF !DEFINED_CRT_ENABLE_RESTART
24    0000              	defc	DEFINED_CRT_ENABLE_RESTART  = 1
25    0000              	defc CRT_ENABLE_RESTART  = 0x1
26    0000              	IFNDEF CRT_ENABLE_RESTART
27    0000              	ENDIF
28    0000              ENDIF
29    0000              
30    0000              
31    0000              IF !DEFINED_CRT_ENABLE_CLOSE
32    0000              	defc	DEFINED_CRT_ENABLE_CLOSE  = 1
33    0000              	defc CRT_ENABLE_CLOSE  = 0
34    0000              	IFNDEF CRT_ENABLE_CLOSE
35    0000              	ENDIF
36    0000              ENDIF
37    0000              
38    0000              
39    0000              IF !DEFINED_CLIB_EXIT_STACK_SIZE
40    0000              	defc	DEFINED_CLIB_EXIT_STACK_SIZE  = 1
41    0000              	defc CLIB_EXIT_STACK_SIZE  = 0
42    0000              	IFNDEF CLIB_EXIT_STACK_SIZE
43    0000              	ENDIF
44    0000              ENDIF
45    0000              
46    0000              
47    0000              IF !DEFINED_CLIB_MALLOC_HEAP_SIZE
48    0000              	defc	DEFINED_CLIB_MALLOC_HEAP_SIZE  = 1
49    0000              	defc CLIB_MALLOC_HEAP_SIZE  = 0x1388
50    0000              	IFNDEF CLIB_MALLOC_HEAP_SIZE
51    0000              	ENDIF
52    0000              ENDIF
53    0000              
54    0000              
55    0000              IF !DEFINED_CLIB_STDIO_HEAP_SIZE
56    0000              	defc	DEFINED_CLIB_STDIO_HEAP_SIZE  = 1
57    0000              	defc CLIB_STDIO_HEAP_SIZE  = 0
58    0000              	IFNDEF CLIB_STDIO_HEAP_SIZE
59    0000              	ENDIF
60    0000              ENDIF
61    0000              
62    0000              
63    0000              IF !DEFINED_CLIB_FOPEN_MAX
64    0000              	defc	DEFINED_CLIB_FOPEN_MAX  = 1
65    0000              	defc CLIB_FOPEN_MAX  = 0xffffffff
66    0000              	IFNDEF CLIB_FOPEN_MAX
67    0000              	ENDIF
68    0000              ENDIF
69    0000              
70    0000              
71    0000              IF !DEFINED_CLIB_OPEN_MAX
72    0000              	defc	DEFINED_CLIB_OPEN_MAX  = 1
73    0000              	defc CLIB_OPEN_MAX  = 0
74    0000              	IFNDEF CLIB_OPEN_MAX
75    0000              	ENDIF
76    0000              ENDIF
77    0000              
78    0000              
79    0000              IF !DEFINED_REGISTER_SP
80    0000              	defc	DEFINED_REGISTER_SP  = 1
81    0000              	defc REGISTER_SP  = 0xd000
82    0000              	IFNDEF REGISTER_SP
83    0000              	ENDIF
84    0000              ENDIF
85    0000              
86    0000              
87    0000              IF !DEFINED_CRT_ENABLE_RESTART
88    0000              	defc	DEFINED_CRT_ENABLE_RESTART  = 1
89    0000              	defc CRT_ENABLE_RESTART  = 0x1
90    0000              	IFNDEF CRT_ENABLE_RESTART
91    0000              	ENDIF
92    0000              ENDIF
93    0000              
94    0000              
95    0000              IF !DEFINED_CRT_ENABLE_CLOSE
96    0000              	defc	DEFINED_CRT_ENABLE_CLOSE  = 1
97    0000              	defc CRT_ENABLE_CLOSE  = 0
98    0000              	IFNDEF CRT_ENABLE_CLOSE
99    0000              	ENDIF
100   0000              ENDIF
101   0000              
102   0000              
103   0000              IF !DEFINED_CLIB_EXIT_STACK_SIZE
104   0000              	defc	DEFINED_CLIB_EXIT_STACK_SIZE  = 1
105   0000              	defc CLIB_EXIT_STACK_SIZE  = 0
106   0000              	IFNDEF CLIB_EXIT_STACK_SIZE
107   0000              	ENDIF
108   0000              ENDIF
109   0000              
110   0000              
111   0000              IF !DEFINED_CLIB_MALLOC_HEAP_SIZE
112   0000              	defc	DEFINED_CLIB_MALLOC_HEAP_SIZE  = 1
113   0000              	defc CLIB_MALLOC_HEAP_SIZE  = 0x1388
114   0000              	IFNDEF CLIB_MALLOC_HEAP_SIZE
115   0000              	ENDIF
116   0000              ENDIF
117   0000              
118   0000              
119   0000              IF !DEFINED_CLIB_STDIO_HEAP_SIZE
120   0000              	defc	DEFINED_CLIB_STDIO_HEAP_SIZE  = 1
121   0000              	defc CLIB_STDIO_HEAP_SIZE  = 0
122   0000              	IFNDEF CLIB_STDIO_HEAP_SIZE
123   0000              	ENDIF
124   0000              ENDIF
125   0000              
126   0000              
127   0000              IF !DEFINED_CLIB_FOPEN_MAX
128   0000              	defc	DEFINED_CLIB_FOPEN_MAX  = 1
129   0000              	defc CLIB_FOPEN_MAX  = 0xffffffff
130   0000              	IFNDEF CLIB_FOPEN_MAX
131   0000              	ENDIF
132   0000              ENDIF
133   0000              
134   0000              
135   0000              IF !DEFINED_CLIB_OPEN_MAX
136   0000              	defc	DEFINED_CLIB_OPEN_MAX  = 1
137   0000              	defc CLIB_OPEN_MAX  = 0
138   0000              	IFNDEF CLIB_OPEN_MAX
139   0000              	ENDIF
140   0000              ENDIF
141   0000              
142   0000              
143   0000              IF !DEFINED_REGISTER_SP
144   0000              	defc	DEFINED_REGISTER_SP  = 1
145   0000              	defc REGISTER_SP  = 0xd000
146   0000              	IFNDEF REGISTER_SP
147   0000              	ENDIF
148   0000              ENDIF
149   0000              
150   0000              
151   0000              IF !DEFINED_CRT_ENABLE_RESTART
152   0000              	defc	DEFINED_CRT_ENABLE_RESTART  = 1
153   0000              	defc CRT_ENABLE_RESTART  = 0x1
154   0000              	IFNDEF CRT_ENABLE_RESTART
155   0000              	ENDIF
156   0000              ENDIF
157   0000              
158   0000              
159   0000              IF !DEFINED_CRT_ENABLE_CLOSE
160   0000              	defc	DEFINED_CRT_ENABLE_CLOSE  = 1
161   0000              	defc CRT_ENABLE_CLOSE  = 0
162   0000              	IFNDEF CRT_ENABLE_CLOSE
163   0000              	ENDIF
164   0000              ENDIF
165   0000              
166   0000              
167   0000              IF !DEFINED_CLIB_EXIT_STACK_SIZE
168   0000              	defc	DEFINED_CLIB_EXIT_STACK_SIZE  = 1
169   0000              	defc CLIB_EXIT_STACK_SIZE  = 0
170   0000              	IFNDEF CLIB_EXIT_STACK_SIZE
171   0000              	ENDIF
172   0000              ENDIF
173   0000              
174   0000              
175   0000              IF !DEFINED_CLIB_MALLOC_HEAP_SIZE
176   0000              	defc	DEFINED_CLIB_MALLOC_HEAP_SIZE  = 1
177   0000              	defc CLIB_MALLOC_HEAP_SIZE  = 0x1388
178   0000              	IFNDEF CLIB_MALLOC_HEAP_SIZE
179   0000              	ENDIF
180   0000              ENDIF
181   0000              
182   0000              
183   0000              IF !DEFINED_CLIB_STDIO_HEAP_SIZE
184   0000              	defc	DEFINED_CLIB_STDIO_HEAP_SIZE  = 1
185   0000              	defc CLIB_STDIO_HEAP_SIZE  = 0
186   0000              	IFNDEF CLIB_STDIO_HEAP_SIZE
187   0000              	ENDIF
188   0000              ENDIF
189   0000              
190   0000              
191   0000              IF !DEFINED_CLIB_FOPEN_MAX
192   0000              	defc	DEFINED_CLIB_FOPEN_MAX  = 1
193   0000              	defc CLIB_FOPEN_MAX  = 0xffffffff
194   0000              	IFNDEF CLIB_FOPEN_MAX
195   0000              	ENDIF
196   0000              ENDIF
197   0000              
198   0000              
199   0000              IF !DEFINED_CLIB_OPEN_MAX
200   0000              	defc	DEFINED_CLIB_OPEN_MAX  = 1
201   0000              	defc CLIB_OPEN_MAX  = 0
202   0000              	IFNDEF CLIB_OPEN_MAX
203   0000              	ENDIF
204   0000              ENDIF
205   0000              
206   0000              
207   0000              
208   0000              
209   0000              
210   0000              
211   0000              IFNDEF startup
212   0000              
213   0000                 ; startup undefined so select a default
214   0000              
215   0000                 defc startup = 31
216   0000              
217   0000              ENDIF
218   0000              
219   0000              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
220   0000              ;; user supplied crt ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
221   0000              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
222   0000              
223   0000              
224   0000              
225   0000              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
226   0000              ;; zx48 ram model ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
227   0000              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
228   0000              
229   0000              
230   0000              
231   0000              
232   0000              
233   0000              
234   0000              
235   0000              
236   0000              
237   0000              
238   0000              
239   0000              
240   0000              
241   0000              
242   0000              
243   0000              
244   0000                 ; no instantiated FILEs
245   0000              
246   0000                 IFNDEF __CRTCFG
247   0000              
248   0000                    defc __CRTCFG = 0
249   0000              
250   0000                 ENDIF
251   0000              
252   0000                 IFNDEF __MMAP
253   0000              
254   0000                    defc __MMAP = 0
255   0000              
256   0000                 ENDIF
257   0000              
258   0000              
259   0000              
260   0000              
261   0000              
262   0000              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
263   0000              ;;                 zx spectrum ram model                     ;;
264   0000              ;;      generated by target/zx/startup/zx_crt_31.m4          ;;
265   0000              ;;                                                           ;;
266   0000              ;;      48k memory model  (flat 64k address space)           ;;
267   0000              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
268   0000              
269   0000              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
270   0000              ;; GLOBAL SYMBOLS ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
271   0000              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
272   0000              
273   0000              include "config_zx_public.inc"
1     0000              
2     0000              
3     0000              
4     0000              
5     0000              IFNDEF __CONFIG_Z88DK_INC_
6     0000              defc   __CONFIG_Z88DK_INC_ = 1
7     0000              
8     0000              ; Automatically Generated at Library Build Time
9     0000              
10    0000              
11    0000              
12    0000              
13    0000              
14    0000              
15    0000              
16    0000              
17    0000              
18    0000              
19    0000              PUBLIC __Z88DK
20    0000              
21    0000              
22    0000              
23    0000              
24    0000              defc __Z88DK = 2000
25    0000              
26    0000              
27    0000              
28    0000              
29    0000              
30    0000              
31    0000              
32    0000              
33    0000              
34    0000              PUBLIC __SPECTRUM
35    0000              
36    0000              PUBLIC __SPECTRUM_48
37    0000              PUBLIC __SPECTRUM_128
38    0000              PUBLIC __SPECTRUM_128_P2
39    0000              PUBLIC __SPECTRUM_128_P2A
40    0000              PUBLIC __SPECTRUM_128_P3
41    0000              PUBLIC __SPECTRUM_PENTAGON
42    0000              
43    0000              PUBLIC __USE_SPECTRUM_128_SECOND_DFILE
44    0000              
45    0000              
46    0000              
47    0000              
48    0000              defc __SPECTRUM          = 1
49    0000              
50    0000              defc __SPECTRUM_48       = 1
51    0000              defc __SPECTRUM_128      = 2
52    0000              defc __SPECTRUM_128_P2   = 4
53    0000              defc __SPECTRUM_128_P2A  = 8
54    0000              defc __SPECTRUM_128_P3   = 16
55    0000              defc __SPECTRUM_PENTAGON = 32
56    0000              
57    0000              defc __USE_SPECTRUM_128_SECOND_DFILE = 0
58    0000              
59    0000              
60    0000              
61    0000              
62    0000              
63    0000              
64    0000              
65    0000              
66    0000              
67    0000              PUBLIC __Z80
68    0000              
69    0000              PUBLIC __Z80_NMOS
70    0000              PUBLIC __Z80_CMOS
71    0000              
72    0000              PUBLIC __CPU_CLOCK
73    0000              
74    0000              PUBLIC __CPU_INFO
75    0000              
76    0000              PUBLIC __CPU_INFO_ENABLE_SLL
77    0000              
78    0000              
79    0000              
80    0000              
81    0000              defc __Z80 = 0x01
82    0000              
83    0000              defc __Z80_NMOS = 0x01
84    0000              defc __Z80_CMOS = 0x02
85    0000              
86    0000              defc __CPU_CLOCK = 3500000
87    0000              
88    0000              defc __CPU_INFO = 0x00
89    0000              
90    0000              defc __CPU_INFO_ENABLE_SLL = 0x01
91    0000              
92    0000              
93    0000              
94    0000              
95    0000              
96    0000              
97    0000              
98    0000              
99    0000              
100   0000              PUBLIC __CLIB_OPT_MULTITHREAD
101   0000              
102   0000              PUBLIC __CLIB_OPT_MULTITHREAD_LOCK_HEAPS
103   0000              PUBLIC __CLIB_OPT_MULTITHREAD_LOCK_FILES
104   0000              PUBLIC __CLIB_OPT_MULTITHREAD_LOCK_FLIST
105   0000              PUBLIC __CLIB_OPT_MULTITHREAD_LOCK_FDTBL
106   0000              PUBLIC __CLIB_OPT_MULTITHREAD_LOCK_FDSTR
107   0000              
108   0000              PUBLIC __CLIB_OPT_IMATH
109   0000              
110   0000              PUBLIC __CLIB_OPT_IMATH_FAST
111   0000              
112   0000              PUBLIC __CLIB_OPT_IMATH_FAST_DIV_UNROLL
113   0000              PUBLIC __CLIB_OPT_IMATH_FAST_DIV_LZEROS
114   0000              PUBLIC __CLIB_OPT_IMATH_FAST_MUL_UNROLL
115   0000              PUBLIC __CLIB_OPT_IMATH_FAST_MUL_LZEROS
116   0000              PUBLIC __CLIB_OPT_IMATH_FAST_LIA
117   0000              
118   0000              PUBLIC __CLIB_OPT_IMATH_SELECT
119   0000              
120   0000              PUBLIC __CLIB_OPT_IMATH_SELECT_FAST_ASR
121   0000              PUBLIC __CLIB_OPT_IMATH_SELECT_FAST_LSR
122   0000              PUBLIC __CLIB_OPT_IMATH_SELECT_FAST_LSL
123   0000              
124   0000              PUBLIC __CLIB_OPT_TXT2NUM
125   0000              
126   0000              PUBLIC __CLIB_OPT_TXT2NUM_INT_BIN
127   0000              PUBLIC __CLIB_OPT_TXT2NUM_INT_OCT
128   0000              PUBLIC __CLIB_OPT_TXT2NUM_INT_DEC
129   0000              PUBLIC __CLIB_OPT_TXT2NUM_INT_HEX
130   0000              
131   0000              PUBLIC __CLIB_OPT_TXT2NUM_LONG_BIN
132   0000              PUBLIC __CLIB_OPT_TXT2NUM_LONG_OCT
133   0000              PUBLIC __CLIB_OPT_TXT2NUM_LONG_DEC
134   0000              PUBLIC __CLIB_OPT_TXT2NUM_LONG_HEX
135   0000              
136   0000              PUBLIC __CLIB_OPT_TXT2NUM_SELECT
137   0000              
138   0000              PUBLIC __CLIB_OPT_TXT2NUM_SELECT_FAST_BIN
139   0000              PUBLIC __CLIB_OPT_TXT2NUM_SELECT_FAST_OCT
140   0000              PUBLIC __CLIB_OPT_TXT2NUM_SELECT_FAST_DEC
141   0000              PUBLIC __CLIB_OPT_TXT2NUM_SELECT_FAST_HEX
142   0000              
143   0000              PUBLIC __CLIB_OPT_NUM2TXT
144   0000              
145   0000              PUBLIC __CLIB_OPT_NUM2TXT_INT_BIN
146   0000              PUBLIC __CLIB_OPT_NUM2TXT_INT_OCT
147   0000              PUBLIC __CLIB_OPT_NUM2TXT_INT_DEC
148   0000              PUBLIC __CLIB_OPT_NUM2TXT_INT_HEX
149   0000              
150   0000              PUBLIC __CLIB_OPT_NUM2TXT_LONG_BIN
151   0000              PUBLIC __CLIB_OPT_NUM2TXT_LONG_OCT
152   0000              PUBLIC __CLIB_OPT_NUM2TXT_LONG_DEC
153   0000              PUBLIC __CLIB_OPT_NUM2TXT_LONG_HEX
154   0000              
155   0000              PUBLIC __CLIB_OPT_NUM2TXT_SELECT
156   0000              
157   0000              PUBLIC __CLIB_OPT_NUM2TXT_SELECT_FAST_BIN
158   0000              PUBLIC __CLIB_OPT_NUM2TXT_SELECT_FAST_OCT
159   0000              PUBLIC __CLIB_OPT_NUM2TXT_SELECT_FAST_DEC
160   0000              PUBLIC __CLIB_OPT_NUM2TXT_SELECT_FAST_HEX
161   0000              
162   0000              PUBLIC __CLIB_OPT_STDIO
163   0000              
164   0000              PUBLIC __CLIB_OPT_STDIO_VALID
165   0000              
166   0000              PUBLIC CHAR_CR
167   0000              PUBLIC CHAR_LF
168   0000              PUBLIC CHAR_BS
169   0000              PUBLIC CHAR_ESC
170   0000              PUBLIC CHAR_CAPS
171   0000              PUBLIC CHAR_BELL
172   0000              PUBLIC CHAR_CTRL_C
173   0000              PUBLIC CHAR_CTRL_D
174   0000              PUBLIC CHAR_CTRL_Z
175   0000              PUBLIC CHAR_CURSOR_UC
176   0000              PUBLIC CHAR_CURSOR_LC
177   0000              PUBLIC CHAR_PASSWORD
178   0000              
179   0000              PUBLIC __CLIB_OPT_PRINTF
180   0000              
181   0000              PUBLIC __CLIB_OPT_PRINTF_d
182   0000              PUBLIC __CLIB_OPT_PRINTF_u
183   0000              PUBLIC __CLIB_OPT_PRINTF_x
184   0000              PUBLIC __CLIB_OPT_PRINTF_X
185   0000              PUBLIC __CLIB_OPT_PRINTF_o
186   0000              PUBLIC __CLIB_OPT_PRINTF_n
187   0000              PUBLIC __CLIB_OPT_PRINTF_i
188   0000              PUBLIC __CLIB_OPT_PRINTF_p
189   0000              PUBLIC __CLIB_OPT_PRINTF_B
190   0000              PUBLIC __CLIB_OPT_PRINTF_s
191   0000              PUBLIC __CLIB_OPT_PRINTF_c
192   0000              PUBLIC __CLIB_OPT_PRINTF_I
193   0000              PUBLIC __CLIB_OPT_PRINTF_ld
194   0000              PUBLIC __CLIB_OPT_PRINTF_lu
195   0000              PUBLIC __CLIB_OPT_PRINTF_lx
196   0000              PUBLIC __CLIB_OPT_PRINTF_lX
197   0000              PUBLIC __CLIB_OPT_PRINTF_lo
198   0000              PUBLIC __CLIB_OPT_PRINTF_ln
199   0000              PUBLIC __CLIB_OPT_PRINTF_li
200   0000              PUBLIC __CLIB_OPT_PRINTF_lp
201   0000              PUBLIC __CLIB_OPT_PRINTF_lB
202   0000              PUBLIC __CLIB_OPT_PRINTF_a
203   0000              PUBLIC __CLIB_OPT_PRINTF_A
204   0000              PUBLIC __CLIB_OPT_PRINTF_e
205   0000              PUBLIC __CLIB_OPT_PRINTF_E
206   0000              PUBLIC __CLIB_OPT_PRINTF_f
207   0000              PUBLIC __CLIB_OPT_PRINTF_F
208   0000              PUBLIC __CLIB_OPT_PRINTF_g
209   0000              PUBLIC __CLIB_OPT_PRINTF_G
210   0000              
211   0000              PUBLIC __CLIB_OPT_PRINTF_2
212   0000              
213   0000              PUBLIC __CLIB_OPT_PRINTF_2_lld
214   0000              PUBLIC __CLIB_OPT_PRINTF_2_llu
215   0000              PUBLIC __CLIB_OPT_PRINTF_2_llx
216   0000              PUBLIC __CLIB_OPT_PRINTF_2_llX
217   0000              PUBLIC __CLIB_OPT_PRINTF_2_llo
218   0000              PUBLIC __CLIB_OPT_PRINTF_2_lli
219   0000              
220   0000              PUBLIC __CLIB_OPT_SCANF
221   0000              
222   0000              PUBLIC __CLIB_OPT_SCANF_d
223   0000              PUBLIC __CLIB_OPT_SCANF_u
224   0000              PUBLIC __CLIB_OPT_SCANF_x
225   0000              PUBLIC __CLIB_OPT_SCANF_X
226   0000              PUBLIC __CLIB_OPT_SCANF_o
227   0000              PUBLIC __CLIB_OPT_SCANF_n
228   0000              PUBLIC __CLIB_OPT_SCANF_i
229   0000              PUBLIC __CLIB_OPT_SCANF_p
230   0000              PUBLIC __CLIB_OPT_SCANF_B
231   0000              PUBLIC __CLIB_OPT_SCANF_s
232   0000              PUBLIC __CLIB_OPT_SCANF_c
233   0000              PUBLIC __CLIB_OPT_SCANF_I
234   0000              PUBLIC __CLIB_OPT_SCANF_ld
235   0000              PUBLIC __CLIB_OPT_SCANF_lu
236   0000              PUBLIC __CLIB_OPT_SCANF_lx
237   0000              PUBLIC __CLIB_OPT_SCANF_lX
238   0000              PUBLIC __CLIB_OPT_SCANF_lo
239   0000              PUBLIC __CLIB_OPT_SCANF_ln
240   0000              PUBLIC __CLIB_OPT_SCANF_li
241   0000              PUBLIC __CLIB_OPT_SCANF_lp
242   0000              PUBLIC __CLIB_OPT_SCANF_lB
243   0000              PUBLIC __CLIB_OPT_SCANF_BRACKET
244   0000              PUBLIC __CLIB_OPT_SCANF_a
245   0000              PUBLIC __CLIB_OPT_SCANF_A
246   0000              PUBLIC __CLIB_OPT_SCANF_e
247   0000              PUBLIC __CLIB_OPT_SCANF_E
248   0000              PUBLIC __CLIB_OPT_SCANF_f
249   0000              PUBLIC __CLIB_OPT_SCANF_F
250   0000              PUBLIC __CLIB_OPT_SCANF_g
251   0000              PUBLIC __CLIB_OPT_SCANF_G
252   0000              
253   0000              PUBLIC __CLIB_OPT_SCANF_2
254   0000              
255   0000              PUBLIC __CLIB_OPT_SCANF_2_lld
256   0000              PUBLIC __CLIB_OPT_SCANF_2_llu
257   0000              PUBLIC __CLIB_OPT_SCANF_2_llx
258   0000              PUBLIC __CLIB_OPT_SCANF_2_llX
259   0000              PUBLIC __CLIB_OPT_SCANF_2_llo
260   0000              PUBLIC __CLIB_OPT_SCANF_2_lli
261   0000              
262   0000              PUBLIC __CLIB_OPT_UNROLL
263   0000              
264   0000              PUBLIC __CLIB_OPT_UNROLL_MEMCPY
265   0000              PUBLIC __CLIB_OPT_UNROLL_MEMSET
266   0000              PUBLIC __CLIB_OPT_UNROLL_OTIR
267   0000              PUBLIC __CLIB_OPT_UNROLL_LDIR
268   0000              PUBLIC __CLIB_OPT_UNROLL_USER_SMC
269   0000              PUBLIC __CLIB_OPT_UNROLL_LIB_SMC
270   0000              
271   0000              PUBLIC __CLIB_OPT_STRTOD
272   0000              
273   0000              PUBLIC __CLIB_OPT_STRTOD_NAN
274   0000              PUBLIC __CLIB_OPT_STRTOD_INF
275   0000              PUBLIC __CLIB_OPT_STRTOD_HEX
276   0000              
277   0000              PUBLIC __CLIB_OPT_SORT
278   0000              
279   0000              PUBLIC __CLIB_OPT_SORT_INSERTION
280   0000              PUBLIC __CLIB_OPT_SORT_SHELL
281   0000              PUBLIC __CLIB_OPT_SORT_QUICK
282   0000              
283   0000              PUBLIC __CLIB_OPT_SORT_QSORT
284   0000              
285   0000              PUBLIC __CLIB_OPT_SORT_QSORT_PIVOT
286   0000              PUBLIC __CLIB_OPT_SORT_QSORT_PIVOT_MID
287   0000              PUBLIC __CLIB_OPT_SORT_QSORT_PIVOT_RAN
288   0000              PUBLIC __CLIB_OPT_SORT_QSORT_ENABLE_INSERTION
289   0000              PUBLIC __CLIB_OPT_SORT_QSORT_ENABLE_EQUAL
290   0000              
291   0000              PUBLIC __CLIB_OPT_ERROR
292   0000              
293   0000              PUBLIC __CLIB_OPT_ERROR_ENABLED
294   0000              PUBLIC __CLIB_OPT_ERROR_VERBOSE
295   0000              
296   0000              
297   0000              
298   0000              
299   0000              defc __CLIB_OPT_MULTITHREAD = 0x00
300   0000              
301   0000              defc __CLIB_OPT_MULTITHREAD_LOCK_HEAPS = 0x01
302   0000              defc __CLIB_OPT_MULTITHREAD_LOCK_FILES = 0x02
303   0000              defc __CLIB_OPT_MULTITHREAD_LOCK_FLIST = 0x04
304   0000              defc __CLIB_OPT_MULTITHREAD_LOCK_FDTBL = 0x08
305   0000              defc __CLIB_OPT_MULTITHREAD_LOCK_FDSTR = 0x10
306   0000              
307   0000              defc __CLIB_OPT_IMATH = 0
308   0000              
309   0000              defc __CLIB_OPT_IMATH_FAST = 0x0f
310   0000              
311   0000              defc __CLIB_OPT_IMATH_FAST_DIV_UNROLL = 0x01
312   0000              defc __CLIB_OPT_IMATH_FAST_DIV_LZEROS = 0x02
313   0000              defc __CLIB_OPT_IMATH_FAST_MUL_UNROLL = 0x04
314   0000              defc __CLIB_OPT_IMATH_FAST_MUL_LZEROS = 0x08
315   0000              defc __CLIB_OPT_IMATH_FAST_LIA = 0x80
316   0000              
317   0000              defc __CLIB_OPT_IMATH_SELECT = 0x00
318   0000              
319   0000              defc __CLIB_OPT_IMATH_SELECT_FAST_ASR = 0x01
320   0000              defc __CLIB_OPT_IMATH_SELECT_FAST_LSR = 0x02
321   0000              defc __CLIB_OPT_IMATH_SELECT_FAST_LSL = 0x04
322   0000              
323   0000              defc __CLIB_OPT_TXT2NUM = 0x04
324   0000              
325   0000              defc __CLIB_OPT_TXT2NUM_INT_BIN = 0x01
326   0000              defc __CLIB_OPT_TXT2NUM_INT_OCT = 0x02
327   0000              defc __CLIB_OPT_TXT2NUM_INT_DEC = 0x04
328   0000              defc __CLIB_OPT_TXT2NUM_INT_HEX = 0x08
329   0000              
330   0000              defc __CLIB_OPT_TXT2NUM_LONG_BIN = 0x10
331   0000              defc __CLIB_OPT_TXT2NUM_LONG_OCT = 0x20
332   0000              defc __CLIB_OPT_TXT2NUM_LONG_DEC = 0x40
333   0000              defc __CLIB_OPT_TXT2NUM_LONG_HEX = 0x80
334   0000              
335   0000              defc __CLIB_OPT_TXT2NUM_SELECT = 0x00
336   0000              
337   0000              defc __CLIB_OPT_TXT2NUM_SELECT_FAST_BIN = 0x01
338   0000              defc __CLIB_OPT_TXT2NUM_SELECT_FAST_OCT = 0x02
339   0000              defc __CLIB_OPT_TXT2NUM_SELECT_FAST_DEC = 0x04
340   0000              defc __CLIB_OPT_TXT2NUM_SELECT_FAST_HEX = 0x08
341   0000              
342   0000              defc __CLIB_OPT_NUM2TXT = 0x00
343   0000              
344   0000              defc __CLIB_OPT_NUM2TXT_INT_BIN = 0x01
345   0000              defc __CLIB_OPT_NUM2TXT_INT_OCT = 0x02
346   0000              defc __CLIB_OPT_NUM2TXT_INT_DEC = 0x04
347   0000              defc __CLIB_OPT_NUM2TXT_INT_HEX = 0x08
348   0000              
349   0000              defc __CLIB_OPT_NUM2TXT_LONG_BIN = 0x10
350   0000              defc __CLIB_OPT_NUM2TXT_LONG_OCT = 0x20
351   0000              defc __CLIB_OPT_NUM2TXT_LONG_DEC = 0x40
352   0000              defc __CLIB_OPT_NUM2TXT_LONG_HEX = 0x80
353   0000              
354   0000              defc __CLIB_OPT_NUM2TXT_SELECT = 0x00
355   0000              
356   0000              defc __CLIB_OPT_NUM2TXT_SELECT_FAST_BIN = 0x01
357   0000              defc __CLIB_OPT_NUM2TXT_SELECT_FAST_OCT = 0x02
358   0000              defc __CLIB_OPT_NUM2TXT_SELECT_FAST_DEC = 0x04
359   0000              defc __CLIB_OPT_NUM2TXT_SELECT_FAST_HEX = 0x08
360   0000              
361   0000              defc __CLIB_OPT_STDIO = 0x00
362   0000              
363   0000              defc __CLIB_OPT_STDIO_VALID = 0x01
364   0000              
365   0000              defc CHAR_CR = 13
366   0000              defc CHAR_LF = 10
367   0000              defc CHAR_BS = 12
368   0000              defc CHAR_ESC = 27
369   0000              defc CHAR_CAPS = 6
370   0000              defc CHAR_BELL = 7
371   0000              defc CHAR_CTRL_C = 3
372   0000              defc CHAR_CTRL_D = 4
373   0000              defc CHAR_CTRL_Z = 26
374   0000              defc CHAR_CURSOR_UC = 45
375   0000              defc CHAR_CURSOR_LC = 95
376   0000              defc CHAR_PASSWORD = 42
377   0000              
378   0000              defc __CLIB_OPT_PRINTF = 0x002ff6ff
379   0000              
380   0000              defc __CLIB_OPT_PRINTF_d = 0x00000001
381   0000              defc __CLIB_OPT_PRINTF_u = 0x00000002
382   0000              defc __CLIB_OPT_PRINTF_x = 0x00000004
383   0000              defc __CLIB_OPT_PRINTF_X = 0x00000008
384   0000              defc __CLIB_OPT_PRINTF_o = 0x00000010
385   0000              defc __CLIB_OPT_PRINTF_n = 0x00000020
386   0000              defc __CLIB_OPT_PRINTF_i = 0x00000040
387   0000              defc __CLIB_OPT_PRINTF_p = 0x00000080
388   0000              defc __CLIB_OPT_PRINTF_B = 0x00000100
389   0000              defc __CLIB_OPT_PRINTF_s = 0x00000200
390   0000              defc __CLIB_OPT_PRINTF_c = 0x00000400
391   0000              defc __CLIB_OPT_PRINTF_I = 0x00000800
392   0000              defc __CLIB_OPT_PRINTF_ld = 0x00001000
393   0000              defc __CLIB_OPT_PRINTF_lu = 0x00002000
394   0000              defc __CLIB_OPT_PRINTF_lx = 0x00004000
395   0000              defc __CLIB_OPT_PRINTF_lX = 0x00008000
396   0000              defc __CLIB_OPT_PRINTF_lo = 0x00010000
397   0000              defc __CLIB_OPT_PRINTF_ln = 0x00020000
398   0000              defc __CLIB_OPT_PRINTF_li = 0x00040000
399   0000              defc __CLIB_OPT_PRINTF_lp = 0x00080000
400   0000              defc __CLIB_OPT_PRINTF_lB = 0x00100000
401   0000              defc __CLIB_OPT_PRINTF_a = 0x00400000
402   0000              defc __CLIB_OPT_PRINTF_A = 0x00800000
403   0000              defc __CLIB_OPT_PRINTF_e = 0x01000000
404   0000              defc __CLIB_OPT_PRINTF_E = 0x02000000
405   0000              defc __CLIB_OPT_PRINTF_f = 0x04000000
406   0000              defc __CLIB_OPT_PRINTF_F = 0x08000000
407   0000              defc __CLIB_OPT_PRINTF_g = 0x10000000
408   0000              defc __CLIB_OPT_PRINTF_G = 0x20000000
409   0000              
410   0000              defc __CLIB_OPT_PRINTF_2 = 0x00
411   0000              
412   0000              defc __CLIB_OPT_PRINTF_2_lld = 0x01
413   0000              defc __CLIB_OPT_PRINTF_2_llu = 0x02
414   0000              defc __CLIB_OPT_PRINTF_2_llx = 0x04
415   0000              defc __CLIB_OPT_PRINTF_2_llX = 0x08
416   0000              defc __CLIB_OPT_PRINTF_2_llo = 0x10
417   0000              defc __CLIB_OPT_PRINTF_2_lli = 0x40
418   0000              
419   0000              defc __CLIB_OPT_SCANF = 0x002ff6ff
420   0000              
421   0000              defc __CLIB_OPT_SCANF_d = 0x00000001
422   0000              defc __CLIB_OPT_SCANF_u = 0x00000002
423   0000              defc __CLIB_OPT_SCANF_x = 0x00000004
424   0000              defc __CLIB_OPT_SCANF_X = 0x00000008
425   0000              defc __CLIB_OPT_SCANF_o = 0x00000010
426   0000              defc __CLIB_OPT_SCANF_n = 0x00000020
427   0000              defc __CLIB_OPT_SCANF_i = 0x00000040
428   0000              defc __CLIB_OPT_SCANF_p = 0x00000080
429   0000              defc __CLIB_OPT_SCANF_B = 0x00000100
430   0000              defc __CLIB_OPT_SCANF_s = 0x00000200
431   0000              defc __CLIB_OPT_SCANF_c = 0x00000400
432   0000              defc __CLIB_OPT_SCANF_I = 0x00000800
433   0000              defc __CLIB_OPT_SCANF_ld = 0x00001000
434   0000              defc __CLIB_OPT_SCANF_lu = 0x00002000
435   0000              defc __CLIB_OPT_SCANF_lx = 0x00004000
436   0000              defc __CLIB_OPT_SCANF_lX = 0x00008000
437   0000              defc __CLIB_OPT_SCANF_lo = 0x00010000
438   0000              defc __CLIB_OPT_SCANF_ln = 0x00020000
439   0000              defc __CLIB_OPT_SCANF_li = 0x00040000
440   0000              defc __CLIB_OPT_SCANF_lp = 0x00080000
441   0000              defc __CLIB_OPT_SCANF_lB = 0x00100000
442   0000              defc __CLIB_OPT_SCANF_BRACKET = 0x00200000
443   0000              defc __CLIB_OPT_SCANF_a = 0x00400000
444   0000              defc __CLIB_OPT_SCANF_A = 0x00800000
445   0000              defc __CLIB_OPT_SCANF_e = 0x01000000
446   0000              defc __CLIB_OPT_SCANF_E = 0x02000000
447   0000              defc __CLIB_OPT_SCANF_f = 0x04000000
448   0000              defc __CLIB_OPT_SCANF_F = 0x08000000
449   0000              defc __CLIB_OPT_SCANF_g = 0x10000000
450   0000              defc __CLIB_OPT_SCANF_G = 0x20000000
451   0000              
452   0000              defc __CLIB_OPT_SCANF_2 = 0x00
453   0000              
454   0000              defc __CLIB_OPT_SCANF_2_lld = 0x01
455   0000              defc __CLIB_OPT_SCANF_2_llu = 0x02
456   0000              defc __CLIB_OPT_SCANF_2_llx = 0x04
457   0000              defc __CLIB_OPT_SCANF_2_llX = 0x08
458   0000              defc __CLIB_OPT_SCANF_2_llo = 0x10
459   0000              defc __CLIB_OPT_SCANF_2_lli = 0x40
460   0000              
461   0000              defc __CLIB_OPT_UNROLL = 0x00
462   0000              
463   0000              defc __CLIB_OPT_UNROLL_MEMCPY = 0x01
464   0000              defc __CLIB_OPT_UNROLL_MEMSET = 0x02
465   0000              defc __CLIB_OPT_UNROLL_OTIR = 0x10
466   0000              defc __CLIB_OPT_UNROLL_LDIR = 0x20
467   0000              defc __CLIB_OPT_UNROLL_USER_SMC = 0x40
468   0000              defc __CLIB_OPT_UNROLL_LIB_SMC = 0x80
469   0000              
470   0000              defc __CLIB_OPT_STRTOD = 0x00
471   0000              
472   0000              defc __CLIB_OPT_STRTOD_NAN = 0x01
473   0000              defc __CLIB_OPT_STRTOD_INF = 0x01
474   0000              defc __CLIB_OPT_STRTOD_HEX = 0x02
475   0000              
476   0000              defc __CLIB_OPT_SORT = 1
477   0000              
478   0000              defc __CLIB_OPT_SORT_INSERTION = 0
479   0000              defc __CLIB_OPT_SORT_SHELL = 1
480   0000              defc __CLIB_OPT_SORT_QUICK = 2
481   0000              
482   0000              defc __CLIB_OPT_SORT_QSORT = 0x0c
483   0000              
484   0000              defc __CLIB_OPT_SORT_QSORT_PIVOT = 0x3
485   0000              defc __CLIB_OPT_SORT_QSORT_PIVOT_MID = 0x0
486   0000              defc __CLIB_OPT_SORT_QSORT_PIVOT_RAN = 0x1
487   0000              defc __CLIB_OPT_SORT_QSORT_ENABLE_INSERTION = 0x04
488   0000              defc __CLIB_OPT_SORT_QSORT_ENABLE_EQUAL = 0x08
489   0000              
490   0000              defc __CLIB_OPT_ERROR = 0x00
491   0000              
492   0000              defc __CLIB_OPT_ERROR_ENABLED = 0x01
493   0000              defc __CLIB_OPT_ERROR_VERBOSE = 0x02
494   0000              
495   0000              
496   0000              
497   0000              
498   0000              
499   0000              
500   0000              
501   0000              
502   0000              
503   0000              
504   0000              
505   0000              
506   0000              
507   0000              PUBLIC __EOK
508   0000              PUBLIC __EACCES
509   0000              PUBLIC __EBADF
510   0000              PUBLIC __EBDFD
511   0000              PUBLIC __EDOM
512   0000              PUBLIC __EFBIG
513   0000              PUBLIC __EINVAL
514   0000              PUBLIC __EIO
515   0000              PUBLIC __EMFILE
516   0000              PUBLIC __ENFILE
517   0000              PUBLIC __ENOLCK
518   0000              PUBLIC __ENOMEM
519   0000              PUBLIC __ENOTSUP
520   0000              PUBLIC __EOVERFLOW
521   0000              PUBLIC __ERANGE
522   0000              PUBLIC __ESTAT
523   0000              PUBLIC __EAGAIN
524   0000              PUBLIC __EWOULDBLOCK
525   0000              
526   0000              PUBLIC __ERROR_NEXT
527   0000              
528   0000              PUBLIC STDIO_SEEK_SET
529   0000              PUBLIC STDIO_SEEK_CUR
530   0000              PUBLIC STDIO_SEEK_END
531   0000              
532   0000              PUBLIC STDIO_MSG_PUTC
533   0000              PUBLIC STDIO_MSG_WRIT
534   0000              PUBLIC STDIO_MSG_GETC
535   0000              PUBLIC STDIO_MSG_EATC
536   0000              PUBLIC STDIO_MSG_READ
537   0000              PUBLIC STDIO_MSG_SEEK
538   0000              PUBLIC STDIO_MSG_ICTL
539   0000              PUBLIC STDIO_MSG_FLSH
540   0000              PUBLIC STDIO_MSG_CLOS
541   0000              
542   0000              PUBLIC ITERM_MSG_GETC
543   0000              PUBLIC ITERM_MSG_REJECT
544   0000              PUBLIC ITERM_MSG_INTERRUPT
545   0000              PUBLIC ITERM_MSG_PUTC
546   0000              PUBLIC ITERM_MSG_PRINT_CURSOR
547   0000              PUBLIC ITERM_MSG_ERASE_CURSOR
548   0000              PUBLIC ITERM_MSG_ERASE_CURSOR_PWD
549   0000              PUBLIC ITERM_MSG_BS
550   0000              PUBLIC ITERM_MSG_BS_PWD
551   0000              PUBLIC ITERM_MSG_READLINE_BEGIN
552   0000              PUBLIC ITERM_MSG_READLINE_END
553   0000              PUBLIC ITERM_MSG_READLINE_SCROLL_LIMIT
554   0000              PUBLIC ITERM_MSG_BELL
555   0000              
556   0000              PUBLIC __MESSAGE_ITERM_NEXT__
557   0000              
558   0000              PUBLIC OTERM_MSG_PUTC
559   0000              PUBLIC OTERM_MSG_TTY
560   0000              PUBLIC OTERM_MSG_FZX_PUTC
561   0000              PUBLIC OTERM_MSG_PRINTC
562   0000              PUBLIC OTERM_MSG_SCROLL
563   0000              PUBLIC OTERM_MSG_SCROLL_LIMIT
564   0000              PUBLIC OTERM_MSG_CLS
565   0000              PUBLIC OTERM_MSG_PAUSE
566   0000              PUBLIC OTERM_MSG_BELL
567   0000              PUBLIC OTERM_MSG_PSCROLL
568   0000              PUBLIC OTERM_MSG_FZX_GET_XOR_DRAW
569   0000              
570   0000              PUBLIC __MESSAGE_OTERM_NEXT__
571   0000              
572   0000              PUBLIC ICHAR_MSG_GETC
573   0000              PUBLIC OCHAR_MSG_PUTC_BIN
574   0000              PUBLIC OCHAR_MSG_PUTC
575   0000              
576   0000              PUBLIC __MESSAGE_NEXT__
577   0000              
578   0000              PUBLIC mtx_plain
579   0000              PUBLIC mtx_recursive
580   0000              PUBLIC mtx_timed
581   0000              
582   0000              PUBLIC thrd_success
583   0000              PUBLIC thrd_error
584   0000              PUBLIC thrd_nomem
585   0000              PUBLIC thrd_busy
586   0000              PUBLIC thrd_timedout
587   0000              
588   0000              PUBLIC IOCTL_RESET
589   0000              
590   0000              PUBLIC IOCTL_ITERM_ECHO
591   0000              PUBLIC IOCTL_ITERM_PASS
592   0000              PUBLIC IOCTL_ITERM_LINE
593   0000              PUBLIC IOCTL_ITERM_COOK
594   0000              PUBLIC IOCTL_ITERM_CAPS
595   0000              PUBLIC IOCTL_ITERM_CRLF
596   0000              PUBLIC IOCTL_ITERM_CURS
597   0000              
598   0000              PUBLIC IOCTL_ITERM_TIE
599   0000              PUBLIC IOCTL_ITERM_GET_EDITBUF
600   0000              PUBLIC IOCTL_ITERM_SET_EDITBUF
601   0000              
602   0000              PUBLIC IOCTL_OTERM_PAGE
603   0000              PUBLIC IOCTL_OTERM_PAUSE
604   0000              PUBLIC IOCTL_OTERM_COOK
605   0000              PUBLIC IOCTL_OTERM_CRLF
606   0000              PUBLIC IOCTL_OTERM_CLEAR
607   0000              PUBLIC IOCTL_OTERM_SIGNAL
608   0000              PUBLIC IOCTL_OTERM_BELL
609   0000              
610   0000              PUBLIC IOCTL_OTERM_CLS
611   0000              PUBLIC IOCTL_OTERM_RESET_SCROLL
612   0000              PUBLIC IOCTL_OTERM_GET_WINDOW_COORD
613   0000              PUBLIC IOCTL_OTERM_SET_WINDOW_COORD
614   0000              PUBLIC IOCTL_OTERM_GET_WINDOW_RECT
615   0000              PUBLIC IOCTL_OTERM_SET_WINDOW_RECT
616   0000              PUBLIC IOCTL_OTERM_GET_CURSOR_COORD
617   0000              PUBLIC IOCTL_OTERM_SET_CURSOR_COORD
618   0000              PUBLIC IOCTL_OTERM_GET_OTERM
619   0000              PUBLIC IOCTL_OTERM_SCROLL
620   0000              PUBLIC IOCTL_OTERM_FONT
621   0000              PUBLIC IOCTL_OTERM_SCROLL_LIMIT
622   0000              
623   0000              PUBLIC IOCTL_OTERM_FZX_GET_PAPER_COORD
624   0000              PUBLIC IOCTL_OTERM_FZX_SET_PAPER_COORD
625   0000              PUBLIC IOCTL_OTERM_FZX_GET_PAPER_RECT
626   0000              PUBLIC IOCTL_OTERM_FZX_SET_PAPER_RECT
627   0000              PUBLIC IOCTL_OTERM_FZX_LEFT_MARGIN
628   0000              PUBLIC IOCTL_OTERM_FZX_LINE_SPACING
629   0000              PUBLIC IOCTL_OTERM_FZX_SPACE_EXPAND
630   0000              PUBLIC IOCTL_OTERM_FZX_GET_FZX_STATE
631   0000              PUBLIC IOCTL_OTERM_FZX_SET_FZX_STATE
632   0000              
633   0000              PUBLIC IOCTL_ICHAR_CRLF
634   0000              
635   0000              PUBLIC IOCTL_OCHAR_CRLF
636   0000              
637   0000              
638   0000              
639   0000              
640   0000              defc __EOK = 0
641   0000              defc __EACCES = 1
642   0000              defc __EBADF = 2
643   0000              defc __EBDFD = 3
644   0000              defc __EDOM = 4
645   0000              defc __EFBIG = 5
646   0000              defc __EINVAL = 6
647   0000              defc __EIO = 7
648   0000              defc __EMFILE = 8
649   0000              defc __ENFILE = 9
650   0000              defc __ENOLCK = 10
651   0000              defc __ENOMEM = 11
652   0000              defc __ENOTSUP = 12
653   0000              defc __EOVERFLOW = 13
654   0000              defc __ERANGE = 14
655   0000              defc __ESTAT = 15
656   0000              defc __EAGAIN = 16
657   0000              defc __EWOULDBLOCK = 16
658   0000              
659   0000              defc __ERROR_NEXT = 50
660   0000              
661   0000              defc STDIO_SEEK_SET = 0
662   0000              defc STDIO_SEEK_CUR = 1
663   0000              defc STDIO_SEEK_END = 2
664   0000              
665   0000              defc STDIO_MSG_PUTC = 1
666   0000              defc STDIO_MSG_WRIT = 2
667   0000              defc STDIO_MSG_GETC = 3
668   0000              defc STDIO_MSG_EATC = 4
669   0000              defc STDIO_MSG_READ = 5
670   0000              defc STDIO_MSG_SEEK = 6
671   0000              defc STDIO_MSG_ICTL = 7
672   0000              defc STDIO_MSG_FLSH = 8
673   0000              defc STDIO_MSG_CLOS = 9
674   0000              
675   0000              defc ITERM_MSG_GETC = 15
676   0000              defc ITERM_MSG_REJECT = 16
677   0000              defc ITERM_MSG_INTERRUPT = 17
678   0000              defc ITERM_MSG_PUTC = 18
679   0000              defc ITERM_MSG_PRINT_CURSOR = 19
680   0000              defc ITERM_MSG_ERASE_CURSOR = 20
681   0000              defc ITERM_MSG_ERASE_CURSOR_PWD = 21
682   0000              defc ITERM_MSG_BS = 22
683   0000              defc ITERM_MSG_BS_PWD = 23
684   0000              defc ITERM_MSG_READLINE_BEGIN = 24
685   0000              defc ITERM_MSG_READLINE_END = 25
686   0000              defc ITERM_MSG_READLINE_SCROLL_LIMIT = 26
687   0000              defc ITERM_MSG_BELL = 27
688   0000              
689   0000              defc __MESSAGE_ITERM_NEXT__ = 28
690   0000              
691   0000              defc OTERM_MSG_PUTC = 30
692   0000              defc OTERM_MSG_TTY = 31
693   0000              defc OTERM_MSG_FZX_PUTC = 32
694   0000              defc OTERM_MSG_PRINTC = 33
695   0000              defc OTERM_MSG_SCROLL = 34
696   0000              defc OTERM_MSG_SCROLL_LIMIT = 35
697   0000              defc OTERM_MSG_CLS = 36
698   0000              defc OTERM_MSG_PAUSE = 37
699   0000              defc OTERM_MSG_BELL = 38
700   0000              defc OTERM_MSG_PSCROLL = 39
701   0000              defc OTERM_MSG_FZX_GET_XOR_DRAW = 40
702   0000              
703   0000              defc __MESSAGE_OTERM_NEXT__ = 41
704   0000              
705   0000              defc ICHAR_MSG_GETC = 15
706   0000              defc OCHAR_MSG_PUTC_BIN = 30
707   0000              defc OCHAR_MSG_PUTC = 33
708   0000              
709   0000              defc __MESSAGE_NEXT__ = 45
710   0000              
711   0000              defc mtx_plain = 0x01
712   0000              defc mtx_recursive = 0x02
713   0000              defc mtx_timed = 0x04
714   0000              
715   0000              defc thrd_success = 0x00
716   0000              defc thrd_error = 0x01
717   0000              defc thrd_nomem = 0x02
718   0000              defc thrd_busy = 0x04
719   0000              defc thrd_timedout = 0x08
720   0000              
721   0000              defc IOCTL_RESET = 0x0000
722   0000              
723   0000              defc IOCTL_ITERM_ECHO = 0xc081
724   0000              defc IOCTL_ITERM_PASS = 0xc041
725   0000              defc IOCTL_ITERM_LINE = 0xc021
726   0000              defc IOCTL_ITERM_COOK = 0xc011
727   0000              defc IOCTL_ITERM_CAPS = 0xc009
728   0000              defc IOCTL_ITERM_CRLF = 0xc101
729   0000              defc IOCTL_ITERM_CURS = 0xc201
730   0000              
731   0000              defc IOCTL_ITERM_TIE = 0x0201
732   0000              defc IOCTL_ITERM_GET_EDITBUF = 0x0381
733   0000              defc IOCTL_ITERM_SET_EDITBUF = 0x0301
734   0000              
735   0000              defc IOCTL_OTERM_PAGE = 0xc082
736   0000              defc IOCTL_OTERM_PAUSE = 0xc042
737   0000              defc IOCTL_OTERM_COOK = 0xc022
738   0000              defc IOCTL_OTERM_CRLF = 0xc012
739   0000              defc IOCTL_OTERM_CLEAR = 0xe002
740   0000              defc IOCTL_OTERM_SIGNAL = 0xc202
741   0000              defc IOCTL_OTERM_BELL = 0xc102
742   0000              
743   0000              defc IOCTL_OTERM_CLS = 0x0102
744   0000              defc IOCTL_OTERM_RESET_SCROLL = 0x0202
745   0000              defc IOCTL_OTERM_GET_WINDOW_COORD = 0x0382
746   0000              defc IOCTL_OTERM_SET_WINDOW_COORD = 0x0302
747   0000              defc IOCTL_OTERM_GET_WINDOW_RECT = 0x0482
748   0000              defc IOCTL_OTERM_SET_WINDOW_RECT = 0x0402
749   0000              defc IOCTL_OTERM_GET_CURSOR_COORD = 0x0582
750   0000              defc IOCTL_OTERM_SET_CURSOR_COORD = 0x0502
751   0000              defc IOCTL_OTERM_GET_OTERM = 0x0602
752   0000              defc IOCTL_OTERM_SCROLL = 0x0702
753   0000              defc IOCTL_OTERM_FONT = 0x0802
754   0000              defc IOCTL_OTERM_SCROLL_LIMIT = 0x0902
755   0000              
756   0000              defc IOCTL_OTERM_FZX_GET_PAPER_COORD = 0x0a82
757   0000              defc IOCTL_OTERM_FZX_SET_PAPER_COORD = 0x0a02
758   0000              defc IOCTL_OTERM_FZX_GET_PAPER_RECT = 0x0b82
759   0000              defc IOCTL_OTERM_FZX_SET_PAPER_RECT = 0x0b02
760   0000              defc IOCTL_OTERM_FZX_LEFT_MARGIN = 0x0c02
761   0000              defc IOCTL_OTERM_FZX_LINE_SPACING = 0x0d02
762   0000              defc IOCTL_OTERM_FZX_SPACE_EXPAND = 0x0e02
763   0000              defc IOCTL_OTERM_FZX_GET_FZX_STATE = 0x0f82
764   0000              defc IOCTL_OTERM_FZX_SET_FZX_STATE = 0x0f02
765   0000              
766   0000              defc IOCTL_ICHAR_CRLF = 0xc103
767   0000              
768   0000              defc IOCTL_OCHAR_CRLF = 0xc014
769   0000              
770   0000              
771   0000              
772   0000              
773   0000              
774   0000              
775   0000              
776   0000              
777   0000              
778   0000              
779   0000              
780   0000              PUBLIC IOCTL_ITERM_GET_DELAY
781   0000              PUBLIC IOCTL_ITERM_SET_DELAY
782   0000              
783   0000              PUBLIC IOCTL_ITERM_LASTK
784   0000              
785   0000              PUBLIC IOCTL_OTERM_FCOLOR
786   0000              PUBLIC IOCTL_OTERM_FMASK
787   0000              PUBLIC IOCTL_OTERM_BCOLOR
788   0000              
789   0000              
790   0000              
791   0000              
792   0000              defc IOCTL_ITERM_GET_DELAY = 0x1081
793   0000              defc IOCTL_ITERM_SET_DELAY = 0x1001
794   0000              
795   0000              defc IOCTL_ITERM_LASTK     = 0x1101
796   0000              
797   0000              defc IOCTL_OTERM_FCOLOR    = 0x1002
798   0000              defc IOCTL_OTERM_FMASK     = 0x1102
799   0000              defc IOCTL_OTERM_BCOLOR    = 0x1202
800   0000              
801   0000              
802   0000              
803   0000              
804   0000              
805   0000              
806   0000              
807   0000              
808   0000              
809   0000              
810   0000              
811   0000              
812   0000              PUBLIC __BIFROST2_ANIM_GROUP
813   0000              PUBLIC __BIFROST2_STATIC_MIN
814   0000              PUBLIC __BIFROST2_STATIC_OVERLAP
815   0000              PUBLIC __BIFROST2_TILE_IMAGES
816   0000              PUBLIC __BIFROST2_TILE_ORDER
817   0000              PUBLIC __BIFROST2_TILE_MAP
818   0000              PUBLIC __BIFROST2_TOTAL_ROWS
819   0000              PUBLIC __BIFROST2_HOLE
820   0000              PUBLIC _BIFROST2_HOLE
821   0000              PUBLIC __BIFROST2_HOLE_SIZE
822   0000              
823   0000              
824   0000              
825   0000              
826   0000              defc __BIFROST2_ANIM_GROUP     = 4
827   0000              defc __BIFROST2_STATIC_MIN     = 128
828   0000              defc __BIFROST2_STATIC_OVERLAP = 128
829   0000              defc __BIFROST2_TILE_IMAGES    = 49000
830   0000              defc __BIFROST2_TILE_ORDER     = 7
831   0000              defc __BIFROST2_TILE_MAP       = 65281
832   0000              defc __BIFROST2_TOTAL_ROWS     = 22
833   0000              defc __BIFROST2_HOLE           = 64839
834   0000              defc _BIFROST2_HOLE            = 64839
835   0000              defc __BIFROST2_HOLE_SIZE      = 0
836   0000              
837   0000              ; define(`__BIFROST2_TOTAL_ROWS', 22)
838   0000              
839   0000              
840   0000              
841   0000              
842   0000              
843   0000              
844   0000              
845   0000              
846   0000              
847   0000              PUBLIC __BIFROSTH_ANIM_SPEED
848   0000              PUBLIC __BIFROSTH_ANIM_GROUP
849   0000              PUBLIC __BIFROSTH_STATIC_MIN
850   0000              PUBLIC __BIFROSTH_STATIC_OVERLAP
851   0000              PUBLIC __BIFROSTH_TILE_IMAGES
852   0000              PUBLIC __BIFROSTH_TILE_MAP
853   0000              PUBLIC __BIFROSTH_TILE_ORDER
854   0000              PUBLIC __BIFROSTH_SHIFT_COLUMNS
855   0000              PUBLIC __BIFROSTH_SPRITE_MODE
856   0000              
857   0000              
858   0000              
859   0000              
860   0000              defc __BIFROSTH_ANIM_SPEED     = 4
861   0000              defc __BIFROSTH_ANIM_GROUP     = 4
862   0000              defc __BIFROSTH_STATIC_MIN     = 128
863   0000              defc __BIFROSTH_STATIC_OVERLAP = 128
864   0000              defc __BIFROSTH_TILE_IMAGES    = 48500
865   0000              defc __BIFROSTH_TILE_MAP       = 65281
866   0000              defc __BIFROSTH_TILE_ORDER     = 7
867   0000              defc __BIFROSTH_SHIFT_COLUMNS  = 0
868   0000              defc __BIFROSTH_SPRITE_MODE    = 0
869   0000              
870   0000              
871   0000              
872   0000              
873   0000              
874   0000              
875   0000              
876   0000              
877   0000              
878   0000              PUBLIC __BIFROSTL_ANIM_SPEED
879   0000              PUBLIC __BIFROSTL_ANIM_GROUP
880   0000              PUBLIC __BIFROSTL_STATIC_MIN
881   0000              PUBLIC __BIFROSTL_STATIC_OVERLAP
882   0000              PUBLIC __BIFROSTL_TILE_IMAGES
883   0000              PUBLIC __BIFROSTL_TILE_MAP
884   0000              PUBLIC __BIFROSTL_TILE_ORDER
885   0000              
886   0000              
887   0000              
888   0000              
889   0000              defc __BIFROSTL_ANIM_SPEED     = 4
890   0000              defc __BIFROSTL_ANIM_GROUP     = 4
891   0000              defc __BIFROSTL_STATIC_MIN     = 128
892   0000              defc __BIFROSTL_STATIC_OVERLAP = 128
893   0000              defc __BIFROSTL_TILE_IMAGES    = 48500
894   0000              defc __BIFROSTL_TILE_MAP       = 65281
895   0000              defc __BIFROSTL_TILE_ORDER     = 7
896   0000              
897   0000              
898   0000              
899   0000              
900   0000              
901   0000              
902   0000              
903   0000              
904   0000              
905   0000              PUBLIC __ESXDOS_BASE_HOOK
906   0000              PUBLIC __ESXDOS_BASE_MISC
907   0000              PUBLIC __ESXDOS_BASE_FSYS
908   0000              
909   0000              PUBLIC __ESXDOS_SYSCALL
910   0000              PUBLIC __ESXDOS_ROMCALL
911   0000              PUBLIC __ESXDOS_AUXCALL
912   0000              
913   0000              PUBLIC __ESXDOS_SYS_DISK_STATUS
914   0000              PUBLIC __ESXDOS_SYS_DISK_READ
915   0000              PUBLIC __ESXDOS_SYS_DISK_WRITE
916   0000              PUBLIC __ESXDOS_SYS_DISK_IOCTL
917   0000              PUBLIC __ESXDOS_SYS_DISK_INFO
918   0000              
919   0000              PUBLIC __ESXDOS_SYS_M_DOSVERSION
920   0000              PUBLIC __ESXDOS_SYS_M_GETSETDRV
921   0000              PUBLIC __ESXDOS_SYS_M_DRIVEINFO
922   0000              PUBLIC __ESXDOS_SYS_M_TAPEIN
923   0000              PUBLIC __ESXDOS_SYS_M_TAPEOUT
924   0000              PUBLIC __ESXDOS_SYS_M_GETHANDLE
925   0000              PUBLIC __ESXDOS_SYS_M_GETDATE
926   0000              
927   0000              PUBLIC __ESXDOS_SYS_F_MOUNT
928   0000              PUBLIC __ESXDOS_SYS_F_UMOUNT
929   0000              PUBLIC __ESXDOS_SYS_F_OPEN
930   0000              PUBLIC __ESXDOS_SYS_F_CLOSE
931   0000              PUBLIC __ESXDOS_SYS_F_SYNC
932   0000              PUBLIC __ESXDOS_SYS_F_READ
933   0000              PUBLIC __ESXDOS_SYS_F_WRITE
934   0000              PUBLIC __ESXDOS_SYS_F_SEEK
935   0000              PUBLIC __ESXDOS_SYS_F_FGETPOS
936   0000              PUBLIC __ESXDOS_SYS_F_FSTAT
937   0000              PUBLIC __ESXDOS_SYS_F_FTRUNCATE
938   0000              PUBLIC __ESXDOS_SYS_F_OPENDIR
939   0000              PUBLIC __ESXDOS_SYS_F_READDIR
940   0000              PUBLIC __ESXDOS_SYS_F_TELLDIR
941   0000              PUBLIC __ESXDOS_SYS_F_SEEKDIR
942   0000              PUBLIC __ESXDOS_SYS_F_REWINDDIR
943   0000              PUBLIC __ESXDOS_SYS_F_GETCWD
944   0000              PUBLIC __ESXDOS_SYS_F_CHDIR
945   0000              PUBLIC __ESXDOS_SYS_F_MKDIR
946   0000              PUBLIC __ESXDOS_SYS_F_RMDIR
947   0000              PUBLIC __ESXDOS_SYS_F_STAT
948   0000              PUBLIC __ESXDOS_SYS_F_UNLINK
949   0000              PUBLIC __ESXDOS_SYS_F_TRUNCATE
950   0000              PUBLIC __ESXDOS_SYS_F_CHMOD
951   0000              PUBLIC __ESXDOS_SYS_F_RENAME
952   0000              PUBLIC __ESXDOS_SYS_F_GETFREE
953   0000              
954   0000              PUBLIC __ESXDOS_PATH_MAX
955   0000              PUBLIC __ESXDOS_NAME_MAX
956   0000              
957   0000              PUBLIC __ESXDOS_MODE_READ
958   0000              PUBLIC __ESXDOS_MODE_WRITE
959   0000              PUBLIC __ESXDOS_MODE_OPEN_EXIST
960   0000              PUBLIC __ESXDOS_MODE_OPEN_CREAT
961   0000              PUBLIC __ESXDOS_MODE_CREAT_NOEXIST
962   0000              PUBLIC __ESXDOS_MODE_CREAT_TRUNC
963   0000              PUBLIC __ESXDOS_MODE_USE_HEADER
964   0000              
965   0000              PUBLIC __ESXDOS_ATTR_READ_ONLY
966   0000              PUBLIC __ESXDOS_ATTR_HIDDEN
967   0000              PUBLIC __ESXDOS_ATTR_SYSTEM
968   0000              PUBLIC __ESXDOS_ATTR_VOLUME_LABEL
969   0000              PUBLIC __ESXDOS_ATTR_DIRECTORY
970   0000              PUBLIC __ESXDOS_ATTR_ARCHIVE
971   0000              
972   0000              PUBLIC __ESXDOS_DRIVE_CURRENT
973   0000              PUBLIC __ESXDOS_DRIVE_SYSTEM
974   0000              
975   0000              PUBLIC __ESXDOS_SEEK_SET
976   0000              PUBLIC __ESXDOS_SEEK_FWD
977   0000              PUBLIC __ESXDOS_SEEK_BWD
978   0000              
979   0000              PUBLIC __ESXDOS_OK
980   0000              PUBLIC __ESXDOS_EOK
981   0000              PUBLIC __ESXDOS_ENONSENSE
982   0000              PUBLIC __ESXDOS_ESTEND
983   0000              PUBLIC __ESXDOS_EWRTYPE
984   0000              PUBLIC __ESXDOS_ENOENT
985   0000              PUBLIC __ESXDOS_EIO
986   0000              PUBLIC __ESXDOS_EINVAL
987   0000              PUBLIC __ESXDOS_EACCES
988   0000              PUBLIC __ESXDOS_ENOSPC
989   0000              PUBLIC __ESXDOS_ENXIO
990   0000              PUBLIC __ESXDOS_ENODRV
991   0000              PUBLIC __ESXDOS_ENFILE
992   0000              PUBLIC __ESXDOS_EBADF
993   0000              PUBLIC __ESXDOS_ENODEV
994   0000              PUBLIC __ESXDOS_EOVERFLOW
995   0000              PUBLIC __ESXDOS_EISDIR
996   0000              PUBLIC __ESXDOS_ENOTDIR
997   0000              PUBLIC __ESXDOS_EEXIST
998   0000              PUBLIC __ESXDOS_EPATH
999   0000              PUBLIC __ESXDOS_ENOSYS
1000  0000              PUBLIC __ESXDOS_ENAMETOOLONG
1001  0000              PUBLIC __ESXDOS_ENOCMD
1002  0000              PUBLIC __ESXDOS_EINUSE
1003  0000              PUBLIC __ESXDOS_ERDONLY
1004  0000              PUBLIC __ESXDOS_EVERIFY
1005  0000              PUBLIC __ESXDOS_ELOADINGKO
1006  0000              PUBLIC __ESXDOS_EDIRINUSE
1007  0000              PUBLIC __ESXDOS_EMAPRAMACTIVE
1008  0000              PUBLIC __ESXDOS_EDRIVEBUSY
1009  0000              PUBLIC __ESXDOS_EFSUNKNOWN
1010  0000              PUBLIC __ESXDOS_EDEVICEBUSY
1011  0000              PUBLIC __ESXDOS_EMAXCODE
1012  0000              
1013  0000              
1014  0000              
1015  0000              
1016  0000              defc __ESXDOS_BASE_HOOK = 128
1017  0000              defc __ESXDOS_BASE_MISC = 136
1018  0000              defc __ESXDOS_BASE_FSYS = 152
1019  0000              
1020  0000              defc __ESXDOS_SYSCALL = 0x08
1021  0000              defc __ESXDOS_ROMCALL = 0x18
1022  0000              defc __ESXDOS_AUXCALL = 0x30
1023  0000              
1024  0000              defc __ESXDOS_SYS_DISK_STATUS = 128
1025  0000              defc __ESXDOS_SYS_DISK_READ = 129
1026  0000              defc __ESXDOS_SYS_DISK_WRITE = 130
1027  0000              defc __ESXDOS_SYS_DISK_IOCTL = 131
1028  0000              defc __ESXDOS_SYS_DISK_INFO = 132
1029  0000              
1030  0000              defc __ESXDOS_SYS_M_DOSVERSION = 136
1031  0000              defc __ESXDOS_SYS_M_GETSETDRV = 137
1032  0000              defc __ESXDOS_SYS_M_DRIVEINFO = 138
1033  0000              defc __ESXDOS_SYS_M_TAPEIN = 139
1034  0000              defc __ESXDOS_SYS_M_TAPEOUT = 140
1035  0000              defc __ESXDOS_SYS_M_GETHANDLE = 141
1036  0000              defc __ESXDOS_SYS_M_GETDATE = 142
1037  0000              
1038  0000              defc __ESXDOS_SYS_F_MOUNT = 152
1039  0000              defc __ESXDOS_SYS_F_UMOUNT = 153
1040  0000              defc __ESXDOS_SYS_F_OPEN = 154
1041  0000              defc __ESXDOS_SYS_F_CLOSE = 155
1042  0000              defc __ESXDOS_SYS_F_SYNC = 156
1043  0000              defc __ESXDOS_SYS_F_READ = 157
1044  0000              defc __ESXDOS_SYS_F_WRITE = 158
1045  0000              defc __ESXDOS_SYS_F_SEEK = 159
1046  0000              defc __ESXDOS_SYS_F_FGETPOS = 160
1047  0000              defc __ESXDOS_SYS_F_FSTAT = 161
1048  0000              defc __ESXDOS_SYS_F_FTRUNCATE = 162
1049  0000              defc __ESXDOS_SYS_F_OPENDIR = 163
1050  0000              defc __ESXDOS_SYS_F_READDIR = 164
1051  0000              defc __ESXDOS_SYS_F_TELLDIR = 165
1052  0000              defc __ESXDOS_SYS_F_SEEKDIR = 166
1053  0000              defc __ESXDOS_SYS_F_REWINDDIR = 167
1054  0000              defc __ESXDOS_SYS_F_GETCWD = 168
1055  0000              defc __ESXDOS_SYS_F_CHDIR = 169
1056  0000              defc __ESXDOS_SYS_F_MKDIR = 170
1057  0000              defc __ESXDOS_SYS_F_RMDIR = 171
1058  0000              defc __ESXDOS_SYS_F_STAT = 172
1059  0000              defc __ESXDOS_SYS_F_UNLINK = 173
1060  0000              defc __ESXDOS_SYS_F_TRUNCATE = 174
1061  0000              defc __ESXDOS_SYS_F_CHMOD = 175
1062  0000              defc __ESXDOS_SYS_F_RENAME = 176
1063  0000              defc __ESXDOS_SYS_F_GETFREE = 177
1064  0000              
1065  0000              defc __ESXDOS_PATH_MAX = 128
1066  0000              defc __ESXDOS_NAME_MAX = 128
1067  0000              
1068  0000              defc __ESXDOS_MODE_READ = 0x01
1069  0000              defc __ESXDOS_MODE_WRITE = 0x02
1070  0000              defc __ESXDOS_MODE_OPEN_EXIST = 0x00
1071  0000              defc __ESXDOS_MODE_OPEN_CREAT = 0x08
1072  0000              defc __ESXDOS_MODE_CREAT_NOEXIST = 0x04
1073  0000              defc __ESXDOS_MODE_CREAT_TRUNC = 0x0c
1074  0000              defc __ESXDOS_MODE_USE_HEADER = 0x40
1075  0000              
1076  0000              defc __ESXDOS_ATTR_READ_ONLY = 0x01
1077  0000              defc __ESXDOS_ATTR_HIDDEN = 0x02
1078  0000              defc __ESXDOS_ATTR_SYSTEM = 0x04
1079  0000              defc __ESXDOS_ATTR_VOLUME_LABEL = 0x08
1080  0000              defc __ESXDOS_ATTR_DIRECTORY = 0x10
1081  0000              defc __ESXDOS_ATTR_ARCHIVE = 0x20
1082  0000              
1083  0000              defc __ESXDOS_DRIVE_CURRENT = 0x2a
1084  0000              defc __ESXDOS_DRIVE_SYSTEM = 0x24
1085  0000              
1086  0000              defc __ESXDOS_SEEK_SET = 0
1087  0000              defc __ESXDOS_SEEK_FWD = 1
1088  0000              defc __ESXDOS_SEEK_BWD = 2
1089  0000              
1090  0000              defc __ESXDOS_OK = 0
1091  0000              defc __ESXDOS_EOK = 1
1092  0000              defc __ESXDOS_ENONSENSE = 2
1093  0000              defc __ESXDOS_ESTEND = 3
1094  0000              defc __ESXDOS_EWRTYPE = 4
1095  0000              defc __ESXDOS_ENOENT = 5
1096  0000              defc __ESXDOS_EIO = 6
1097  0000              defc __ESXDOS_EINVAL = 7
1098  0000              defc __ESXDOS_EACCES = 8
1099  0000              defc __ESXDOS_ENOSPC = 9
1100  0000              defc __ESXDOS_ENXIO = 10
1101  0000              defc __ESXDOS_ENODRV = 11
1102  0000              defc __ESXDOS_ENFILE = 12
1103  0000              defc __ESXDOS_EBADF = 13
1104  0000              defc __ESXDOS_ENODEV = 14
1105  0000              defc __ESXDOS_EOVERFLOW = 15
1106  0000              defc __ESXDOS_EISDIR = 16
1107  0000              defc __ESXDOS_ENOTDIR = 17
1108  0000              defc __ESXDOS_EEXIST = 18
1109  0000              defc __ESXDOS_EPATH = 19
1110  0000              defc __ESXDOS_ENOSYS = 20
1111  0000              defc __ESXDOS_ENAMETOOLONG = 21
1112  0000              defc __ESXDOS_ENOCMD = 22
1113  0000              defc __ESXDOS_EINUSE = 23
1114  0000              defc __ESXDOS_ERDONLY = 24
1115  0000              defc __ESXDOS_EVERIFY = 25
1116  0000              defc __ESXDOS_ELOADINGKO = 26
1117  0000              defc __ESXDOS_EDIRINUSE = 27
1118  0000              defc __ESXDOS_EMAPRAMACTIVE = 28
1119  0000              defc __ESXDOS_EDRIVEBUSY = 29
1120  0000              defc __ESXDOS_EFSUNKNOWN = 30
1121  0000              defc __ESXDOS_EDEVICEBUSY = 31
1122  0000              defc __ESXDOS_EMAXCODE = 31
1123  0000              
1124  0000              
1125  0000              
1126  0000              
1127  0000              
1128  0000              
1129  0000              
1130  0000              
1131  0000              
1132  0000              PUBLIC __NIRVANAM_OPTIONS
1133  0000              
1134  0000              PUBLIC __NIRVANAM_OPTIONS_WIDE_DRAW
1135  0000              PUBLIC __NIRVANAM_OPTIONS_WIDE_SPRITES
1136  0000              
1137  0000              PUBLIC __NIRVANAM_TOTAL_ROWS
1138  0000              PUBLIC __NIRVANAM_HOLE
1139  0000              PUBLIC _NIRVANAM_HOLE
1140  0000              PUBLIC __NIRVANAM_HOLE_SIZE
1141  0000              
1142  0000              PUBLIC __NIRVANAM_TILE_IMAGES
1143  0000              PUBLIC __NIRVANAM_WIDE_IMAGES
1144  0000              PUBLIC __NIRVANAM_CHAR_TABLE
1145  0000              
1146  0000              
1147  0000              
1148  0000              
1149  0000              defc __NIRVANAM_OPTIONS = 0
1150  0000              
1151  0000              defc __NIRVANAM_OPTIONS_WIDE_DRAW    = 0x01
1152  0000              defc __NIRVANAM_OPTIONS_WIDE_SPRITES = 0x02
1153  0000              
1154  0000              defc __NIRVANAM_TOTAL_ROWS  = 22
1155  0000              defc __NIRVANAM_HOLE        = 64994
1156  0000              defc _NIRVANAM_HOLE         = 64994
1157  0000              defc __NIRVANAM_HOLE_SIZE   = 0
1158  0000              
1159  0000              defc __NIRVANAM_TILE_IMAGES = 48000
1160  0000              defc __NIRVANAM_WIDE_IMAGES = 54000
1161  0000              defc __NIRVANAM_CHAR_TABLE  = 15360
1162  0000              
1163  0000              ; define(`__NIRVANAM_TOTAL_ROWS', 22)
1164  0000              
1165  0000              
1166  0000              
1167  0000              
1168  0000              
1169  0000              
1170  0000              
1171  0000              
1172  0000              
1173  0000              PUBLIC __NIRVANAP_OPTIONS
1174  0000              
1175  0000              PUBLIC __NIRVANAP_OPTIONS_WIDE_DRAW
1176  0000              PUBLIC __NIRVANAP_OPTIONS_WIDE_SPRITES
1177  0000              
1178  0000              PUBLIC __NIRVANAP_TOTAL_ROWS
1179  0000              PUBLIC __NIRVANAP_HOLE
1180  0000              PUBLIC _NIRVANAP_HOLE
1181  0000              PUBLIC __NIRVANAP_HOLE_SIZE
1182  0000              
1183  0000              PUBLIC __NIRVANAP_TILE_IMAGES
1184  0000              PUBLIC __NIRVANAP_WIDE_IMAGES
1185  0000              PUBLIC __NIRVANAP_CHAR_TABLE
1186  0000              
1187  0000              
1188  0000              
1189  0000              
1190  0000              defc __NIRVANAP_OPTIONS = 0
1191  0000              
1192  0000              defc __NIRVANAP_OPTIONS_WIDE_DRAW    = 0x01
1193  0000              defc __NIRVANAP_OPTIONS_WIDE_SPRITES = 0x02
1194  0000              
1195  0000              defc __NIRVANAP_TOTAL_ROWS  = 23
1196  0000              defc __NIRVANAP_HOLE        = 64262
1197  0000              defc _NIRVANAP_HOLE         = 64262
1198  0000              defc __NIRVANAP_HOLE_SIZE   = 0
1199  0000              
1200  0000              defc __NIRVANAP_TILE_IMAGES = 48000
1201  0000              defc __NIRVANAP_WIDE_IMAGES = 54000
1202  0000              defc __NIRVANAP_CHAR_TABLE  = 15360
1203  0000              
1204  0000              ; define(`__NIRVANAP_TOTAL_ROWS', 23)
1205  0000              
1206  0000              
1207  0000              
1208  0000              
1209  0000              
1210  0000              
1211  0000              
1212  0000              
1213  0000              
1214  0000              PUBLIC __SOUND_BIT_METHOD
1215  0000              PUBLIC __SOUND_BIT_PORT
1216  0000              PUBLIC __SOUND_BIT_TOGGLE
1217  0000              PUBLIC __SOUND_BIT_TOGGLE_POS
1218  0000              PUBLIC __SOUND_BIT_READ_MASK
1219  0000              PUBLIC __SOUND_BIT_WRITE_MASK
1220  0000              
1221  0000              
1222  0000              
1223  0000              
1224  0000              defc __SOUND_BIT_METHOD     =  1
1225  0000              defc __SOUND_BIT_PORT       =  0xfe
1226  0000              defc __SOUND_BIT_TOGGLE     =  0x10
1227  0000              defc __SOUND_BIT_TOGGLE_POS =  4
1228  0000              defc __SOUND_BIT_READ_MASK  =  0x17
1229  0000              defc __SOUND_BIT_WRITE_MASK =  0xe8
1230  0000              
1231  0000              
1232  0000              
1233  0000              
1234  0000              
1235  0000              
1236  0000              
1237  0000              
1238  0000              
1239  0000              PUBLIC SP1V_DISPORIGX
1240  0000              PUBLIC SP1V_DISPORIGY
1241  0000              PUBLIC SP1V_DISPWIDTH
1242  0000              PUBLIC SP1V_DISPHEIGHT
1243  0000              
1244  0000              PUBLIC SP1V_PIXELBUFFER
1245  0000              PUBLIC SP1V_ATTRBUFFER
1246  0000              
1247  0000              PUBLIC SP1V_TILEARRAY
1248  0000              PUBLIC SP1V_UPDATEARRAY
1249  0000              PUBLIC SP1V_ROTTBL
1250  0000              
1251  0000              PUBLIC SP1V_UPDATELISTH
1252  0000              PUBLIC SP1V_UPDATELISTT
1253  0000              
1254  0000              
1255  0000              
1256  0000              
1257  0000              defc SP1V_DISPORIGX   = 0
1258  0000              defc SP1V_DISPORIGY   = 0
1259  0000              defc SP1V_DISPWIDTH   = 32
1260  0000              defc SP1V_DISPHEIGHT  = 24
1261  0000              
1262  0000              defc SP1V_PIXELBUFFER = 0xd1f7
1263  0000              defc SP1V_ATTRBUFFER  = 0xd1ff
1264  0000              
1265  0000              defc SP1V_TILEARRAY   = 0xf000
1266  0000              defc SP1V_UPDATEARRAY = 0xd200
1267  0000              defc SP1V_ROTTBL      = 0xf000
1268  0000              
1269  0000              defc SP1V_UPDATELISTH = 0xd1ed
1270  0000              defc SP1V_UPDATELISTT = 0xd1ef
1271  0000              
1272  0000              
1273  0000              
1274  0000              
1275  0000              
1276  0000              
1277  0000              
1278  0000              
1279  0000              
1280  0000              PUBLIC __IO_ULAP_REGISTER
1281  0000              PUBLIC __IO_ULAP_DATA
1282  0000              
1283  0000              PUBLIC __ULAP_COLOR_MONO_BLACK
1284  0000              PUBLIC __ULAP_COLOR_MONO_GREY_0
1285  0000              PUBLIC __ULAP_COLOR_MONO_GREY_1
1286  0000              PUBLIC __ULAP_COLOR_MONO_GREY_2
1287  0000              PUBLIC __ULAP_COLOR_MONO_GREY_3
1288  0000              PUBLIC __ULAP_COLOR_MONO_WHITE
1289  0000              
1290  0000              PUBLIC __ULAP_COLOR_AMBER_0
1291  0000              PUBLIC __ULAP_COLOR_AMBER_1
1292  0000              PUBLIC __ULAP_COLOR_AMBER_2
1293  0000              PUBLIC __ULAP_COLOR_AMBER_3
1294  0000              PUBLIC __ULAP_COLOR_AMBER_4
1295  0000              PUBLIC __ULAP_COLOR_AMBER_5
1296  0000              PUBLIC __ULAP_COLOR_AMBER_6
1297  0000              PUBLIC __ULAP_COLOR_AMBER_7
1298  0000              
1299  0000              PUBLIC __ULAP_COLOR_GREEN_0
1300  0000              PUBLIC __ULAP_COLOR_GREEN_1
1301  0000              PUBLIC __ULAP_COLOR_GREEN_2
1302  0000              PUBLIC __ULAP_COLOR_GREEN_3
1303  0000              PUBLIC __ULAP_COLOR_GREEN_4
1304  0000              PUBLIC __ULAP_COLOR_GREEN_5
1305  0000              PUBLIC __ULAP_COLOR_GREEN_6
1306  0000              PUBLIC __ULAP_COLOR_GREEN_7
1307  0000              
1308  0000              PUBLIC __ULAP_COLOR_RB_RED
1309  0000              PUBLIC __ULAP_COLOR_RB_ORANGE
1310  0000              PUBLIC __ULAP_COLOR_RB_YELLOW
1311  0000              PUBLIC __ULAP_COLOR_RB_GREEN
1312  0000              PUBLIC __ULAP_COLOR_RB_BLUE
1313  0000              PUBLIC __ULAP_COLOR_RB_VIOLET
1314  0000              PUBLIC __ULAP_COLOR_RB_INDIGO
1315  0000              
1316  0000              PUBLIC __ULAP_COLOR_ZX_BLACK
1317  0000              PUBLIC __ULAP_COLOR_ZX_BLUE
1318  0000              PUBLIC __ULAP_COLOR_ZX_RED
1319  0000              PUBLIC __ULAP_COLOR_ZX_MAGENTA
1320  0000              PUBLIC __ULAP_COLOR_ZX_GREEN
1321  0000              PUBLIC __ULAP_COLOR_ZX_CYAN
1322  0000              PUBLIC __ULAP_COLOR_ZX_YELLOW
1323  0000              PUBLIC __ULAP_COLOR_ZX_WHITE
1324  0000              PUBLIC __ULAP_COLOR_ZX_BRIGHT_BLACK
1325  0000              PUBLIC __ULAP_COLOR_ZX_BRIGHT_BLUE
1326  0000              PUBLIC __ULAP_COLOR_ZX_BRIGHT_RED
1327  0000              PUBLIC __ULAP_COLOR_ZX_BRIGHT_MAGENTA
1328  0000              PUBLIC __ULAP_COLOR_ZX_BRIGHT_GREEN
1329  0000              PUBLIC __ULAP_COLOR_ZX_BRIGHT_CYAN
1330  0000              PUBLIC __ULAP_COLOR_ZX_BRIGHT_YELLOW
1331  0000              PUBLIC __ULAP_COLOR_ZX_BRIGHT_WHITE
1332  0000              
1333  0000              PUBLIC __ULAP_COLOR_ZXNR_NAVY
1334  0000              PUBLIC __ULAP_COLOR_ZXNR_MAROON
1335  0000              PUBLIC __ULAP_COLOR_ZXNR_INDIGO
1336  0000              PUBLIC __ULAP_COLOR_ZXNR_RACING_GREEN
1337  0000              PUBLIC __ULAP_COLOR_ZXNR_SHERPA_BLUE
1338  0000              PUBLIC __ULAP_COLOR_ZXNR_OLIVE
1339  0000              PUBLIC __ULAP_COLOR_ZXNR_BLACK
1340  0000              PUBLIC __ULAP_COLOR_ZXNR_MIDNIGHT_BLUE
1341  0000              PUBLIC __ULAP_COLOR_ZXNR_DARK_RED
1342  0000              PUBLIC __ULAP_COLOR_ZXNR_DARK_VIOLET
1343  0000              PUBLIC __ULAP_COLOR_ZXNR_ISLAMIC_GREEN
1344  0000              PUBLIC __ULAP_COLOR_ZXNR_BONDI_BLUE
1345  0000              PUBLIC __ULAP_COLOR_ZXNR_BRIGHT_OLIVE
1346  0000              PUBLIC __ULAP_COLOR_ZXNR_GUNPOWDER_GRAY
1347  0000              PUBLIC __ULAP_COLOR_ZXNR_BLUE
1348  0000              PUBLIC __ULAP_COLOR_ZXNR_RED
1349  0000              PUBLIC __ULAP_COLOR_ZXNR_MAGENTA
1350  0000              PUBLIC __ULAP_COLOR_ZXNR_GREEN
1351  0000              PUBLIC __ULAP_COLOR_ZXNR_AQUA
1352  0000              PUBLIC __ULAP_COLOR_ZXNR_YELLOW
1353  0000              PUBLIC __ULAP_COLOR_ZXNR_MIST_GRAY
1354  0000              PUBLIC __ULAP_COLOR_ZXNR_SLATE_BLUE
1355  0000              PUBLIC __ULAP_COLOR_ZXNR_BITTERSWEET
1356  0000              PUBLIC __ULAP_COLOR_ZXNR_ULTRA_PINK
1357  0000              PUBLIC __ULAP_COLOR_ZXNR_SCREAMING_GREEN
1358  0000              PUBLIC __ULAP_COLOR_ZXNR_ELECTRIC_BLUE
1359  0000              PUBLIC __ULAP_COLOR_ZXNR_LASER_LEMON
1360  0000              PUBLIC __ULAP_COLOR_ZXNR_WHITE
1361  0000              PUBLIC __ULAP_COLOR_ZXNR_LAVENDER_BLUE
1362  0000              PUBLIC __ULAP_COLOR_ZXNR_MELON
1363  0000              PUBLIC __ULAP_COLOR_ZXNR_LAVENDER_ROSE
1364  0000              PUBLIC __ULAP_COLOR_ZXNR_MINT_GREEN
1365  0000              PUBLIC __ULAP_COLOR_ZXNR_COLUMBIA_BLUE
1366  0000              PUBLIC __ULAP_COLOR_ZXNR_CANARY
1367  0000              
1368  0000              PUBLIC __ULAP_COLOR_C64_BLACK
1369  0000              PUBLIC __ULAP_COLOR_C64_WHITE
1370  0000              PUBLIC __ULAP_COLOR_C64_RED
1371  0000              PUBLIC __ULAP_COLOR_C64_CYAN
1372  0000              PUBLIC __ULAP_COLOR_C64_VIOLET
1373  0000              PUBLIC __ULAP_COLOR_C64_GREEN
1374  0000              PUBLIC __ULAP_COLOR_C64_BLUE
1375  0000              PUBLIC __ULAP_COLOR_C64_YELLOW
1376  0000              PUBLIC __ULAP_COLOR_C64_ORANGE
1377  0000              PUBLIC __ULAP_COLOR_C64_BROWN
1378  0000              PUBLIC __ULAP_COLOR_C64_LIGHTRED
1379  0000              PUBLIC __ULAP_COLOR_C64_GREY1
1380  0000              PUBLIC __ULAP_COLOR_C64_GREY2
1381  0000              PUBLIC __ULAP_COLOR_C64_LIGHTGREEN
1382  0000              PUBLIC __ULAP_COLOR_C64_LIGHTBLUE
1383  0000              PUBLIC __ULAP_COLOR_C64_GREY3
1384  0000              
1385  0000              PUBLIC __ULAP_COLOR_G1_BLACK
1386  0000              PUBLIC __ULAP_COLOR_G1_GREY
1387  0000              PUBLIC __ULAP_COLOR_G1_SILVER
1388  0000              PUBLIC __ULAP_COLOR_G1_DARK_TEAL
1389  0000              PUBLIC __ULAP_COLOR_G1_GREEN
1390  0000              PUBLIC __ULAP_COLOR_G1_GREENYELLOW
1391  0000              PUBLIC __ULAP_COLOR_G1_MAROON
1392  0000              PUBLIC __ULAP_COLOR_G1_SIENNA
1393  0000              PUBLIC __ULAP_COLOR_G1_SANDYBROWN
1394  0000              PUBLIC __ULAP_COLOR_G1_KHAKI
1395  0000              PUBLIC __ULAP_COLOR_G1_WHITE
1396  0000              PUBLIC __ULAP_COLOR_G1_SKYBLUE
1397  0000              PUBLIC __ULAP_COLOR_G1_SLATEBLUE
1398  0000              PUBLIC __ULAP_COLOR_G1_BLUE
1399  0000              
1400  0000              PUBLIC __ULAP_COLOR_STD_DARK_BLUE
1401  0000              PUBLIC __ULAP_COLOR_STD_BRIGHT_BLUE
1402  0000              PUBLIC __ULAP_COLOR_STD_BLUE
1403  0000              PUBLIC __ULAP_COLOR_STD_CYAN
1404  0000              PUBLIC __ULAP_COLOR_STD_BRIGHT_YELLOW
1405  0000              PUBLIC __ULAP_COLOR_STD_YELLOW
1406  0000              PUBLIC __ULAP_COLOR_STD_ORANGE
1407  0000              PUBLIC __ULAP_COLOR_STD_BRIGHT_RED
1408  0000              PUBLIC __ULAP_COLOR_STD_RED
1409  0000              PUBLIC __ULAP_COLOR_STD_DARK_RED
1410  0000              PUBLIC __ULAP_COLOR_STD_MAGENTA
1411  0000              PUBLIC __ULAP_COLOR_STD_BRIGHT_GREEN
1412  0000              PUBLIC __ULAP_COLOR_STD_GREEN
1413  0000              PUBLIC __ULAP_COLOR_STD_DARK_GREEN
1414  0000              PUBLIC __ULAP_COLOR_STD_BRIGHT_GREY
1415  0000              PUBLIC __ULAP_COLOR_STD_LIGHT_GREY
1416  0000              PUBLIC __ULAP_COLOR_STD_GREY
1417  0000              PUBLIC __ULAP_COLOR_STD_WHITE
1418  0000              PUBLIC __ULAP_COLOR_STD_BLACK
1419  0000              
1420  0000              PUBLIC __ULAP_COLOR_HTML_Black
1421  0000              PUBLIC __ULAP_COLOR_HTML_Navy
1422  0000              PUBLIC __ULAP_COLOR_HTML_DarkBlue
1423  0000              PUBLIC __ULAP_COLOR_HTML_MediumBlue
1424  0000              PUBLIC __ULAP_COLOR_HTML_Blue
1425  0000              PUBLIC __ULAP_COLOR_HTML_DarkGreen
1426  0000              PUBLIC __ULAP_COLOR_HTML_Green
1427  0000              PUBLIC __ULAP_COLOR_HTML_Teal
1428  0000              PUBLIC __ULAP_COLOR_HTML_DarkCyan
1429  0000              PUBLIC __ULAP_COLOR_HTML_DeepSkyBlue
1430  0000              PUBLIC __ULAP_COLOR_HTML_DarkTurquoise
1431  0000              PUBLIC __ULAP_COLOR_HTML_MediumSpringGreen
1432  0000              PUBLIC __ULAP_COLOR_HTML_Lime
1433  0000              PUBLIC __ULAP_COLOR_HTML_SpringGreen
1434  0000              PUBLIC __ULAP_COLOR_HTML_Aqua
1435  0000              PUBLIC __ULAP_COLOR_HTML_Cyan
1436  0000              PUBLIC __ULAP_COLOR_HTML_MidnightBlue
1437  0000              PUBLIC __ULAP_COLOR_HTML_DodgerBlue
1438  0000              PUBLIC __ULAP_COLOR_HTML_LightSeaGreen
1439  0000              PUBLIC __ULAP_COLOR_HTML_ForestGreen
1440  0000              PUBLIC __ULAP_COLOR_HTML_SeaGreen
1441  0000              PUBLIC __ULAP_COLOR_HTML_DarkSlateGray
1442  0000              PUBLIC __ULAP_COLOR_HTML_DarkSlateGrey
1443  0000              PUBLIC __ULAP_COLOR_HTML_LimeGreen
1444  0000              PUBLIC __ULAP_COLOR_HTML_MediumSeaGreen
1445  0000              PUBLIC __ULAP_COLOR_HTML_Turquoise
1446  0000              PUBLIC __ULAP_COLOR_HTML_RoyalBlue
1447  0000              PUBLIC __ULAP_COLOR_HTML_SteelBlue
1448  0000              PUBLIC __ULAP_COLOR_HTML_DarkSlateBlue
1449  0000              PUBLIC __ULAP_COLOR_HTML_MediumTurquoise
1450  0000              PUBLIC __ULAP_COLOR_HTML_Indigo
1451  0000              PUBLIC __ULAP_COLOR_HTML_DarkOliveGreen
1452  0000              PUBLIC __ULAP_COLOR_HTML_CadetBlue
1453  0000              PUBLIC __ULAP_COLOR_HTML_CornflowerBlue
1454  0000              PUBLIC __ULAP_COLOR_HTML_RebeccaPurple
1455  0000              PUBLIC __ULAP_COLOR_HTML_MediumAquaMarine
1456  0000              PUBLIC __ULAP_COLOR_HTML_DimGray
1457  0000              PUBLIC __ULAP_COLOR_HTML_DimGrey
1458  0000              PUBLIC __ULAP_COLOR_HTML_SlateBlue
1459  0000              PUBLIC __ULAP_COLOR_HTML_OliveDrab
1460  0000              PUBLIC __ULAP_COLOR_HTML_SlateGray
1461  0000              PUBLIC __ULAP_COLOR_HTML_SlateGrey
1462  0000              PUBLIC __ULAP_COLOR_HTML_LightSlateGray
1463  0000              PUBLIC __ULAP_COLOR_HTML_LightSlateGrey
1464  0000              PUBLIC __ULAP_COLOR_HTML_MediumSlateBlue
1465  0000              PUBLIC __ULAP_COLOR_HTML_LawnGreen
1466  0000              PUBLIC __ULAP_COLOR_HTML_Chartreuse
1467  0000              PUBLIC __ULAP_COLOR_HTML_Aquamarine
1468  0000              PUBLIC __ULAP_COLOR_HTML_Maroon
1469  0000              PUBLIC __ULAP_COLOR_HTML_Purple
1470  0000              PUBLIC __ULAP_COLOR_HTML_Olive
1471  0000              PUBLIC __ULAP_COLOR_HTML_Gray
1472  0000              PUBLIC __ULAP_COLOR_HTML_Grey
1473  0000              PUBLIC __ULAP_COLOR_HTML_SkyBlue
1474  0000              PUBLIC __ULAP_COLOR_HTML_LightSkyBlue
1475  0000              PUBLIC __ULAP_COLOR_HTML_BlueViolet
1476  0000              PUBLIC __ULAP_COLOR_HTML_DarkRed
1477  0000              PUBLIC __ULAP_COLOR_HTML_DarkMagenta
1478  0000              PUBLIC __ULAP_COLOR_HTML_SaddleBrown
1479  0000              PUBLIC __ULAP_COLOR_HTML_DarkSeaGreen
1480  0000              PUBLIC __ULAP_COLOR_HTML_LightGreen
1481  0000              PUBLIC __ULAP_COLOR_HTML_MediumPurple
1482  0000              PUBLIC __ULAP_COLOR_HTML_DarkViolet
1483  0000              PUBLIC __ULAP_COLOR_HTML_PaleGreen
1484  0000              PUBLIC __ULAP_COLOR_HTML_DarkOrchid
1485  0000              PUBLIC __ULAP_COLOR_HTML_YellowGreen
1486  0000              PUBLIC __ULAP_COLOR_HTML_Sienna
1487  0000              PUBLIC __ULAP_COLOR_HTML_Brown
1488  0000              PUBLIC __ULAP_COLOR_HTML_DarkGray
1489  0000              PUBLIC __ULAP_COLOR_HTML_DarkGrey
1490  0000              PUBLIC __ULAP_COLOR_HTML_LightBlue
1491  0000              PUBLIC __ULAP_COLOR_HTML_GreenYellow
1492  0000              PUBLIC __ULAP_COLOR_HTML_PaleTurquoise
1493  0000              PUBLIC __ULAP_COLOR_HTML_LightSteelBlue
1494  0000              PUBLIC __ULAP_COLOR_HTML_PowderBlue
1495  0000              PUBLIC __ULAP_COLOR_HTML_FireBrick
1496  0000              PUBLIC __ULAP_COLOR_HTML_DarkGoldenRod
1497  0000              PUBLIC __ULAP_COLOR_HTML_MediumOrchid
1498  0000              PUBLIC __ULAP_COLOR_HTML_RosyBrown
1499  0000              PUBLIC __ULAP_COLOR_HTML_DarkKhaki
1500  0000              PUBLIC __ULAP_COLOR_HTML_Silver
1501  0000              PUBLIC __ULAP_COLOR_HTML_MediumVioletRed
1502  0000              PUBLIC __ULAP_COLOR_HTML_IndianRed
1503  0000              PUBLIC __ULAP_COLOR_HTML_Peru
1504  0000              PUBLIC __ULAP_COLOR_HTML_Chocolate
1505  0000              PUBLIC __ULAP_COLOR_HTML_Tan
1506  0000              PUBLIC __ULAP_COLOR_HTML_LightGray
1507  0000              PUBLIC __ULAP_COLOR_HTML_LightGrey
1508  0000              PUBLIC __ULAP_COLOR_HTML_Thistle
1509  0000              PUBLIC __ULAP_COLOR_HTML_Orchid
1510  0000              PUBLIC __ULAP_COLOR_HTML_GoldenRod
1511  0000              PUBLIC __ULAP_COLOR_HTML_PaleVioletRed
1512  0000              PUBLIC __ULAP_COLOR_HTML_Crimson
1513  0000              PUBLIC __ULAP_COLOR_HTML_Gainsboro
1514  0000              PUBLIC __ULAP_COLOR_HTML_Plum
1515  0000              PUBLIC __ULAP_COLOR_HTML_BurlyWood
1516  0000              PUBLIC __ULAP_COLOR_HTML_LightCyan
1517  0000              PUBLIC __ULAP_COLOR_HTML_Lavender
1518  0000              PUBLIC __ULAP_COLOR_HTML_DarkSalmon
1519  0000              PUBLIC __ULAP_COLOR_HTML_Violet
1520  0000              PUBLIC __ULAP_COLOR_HTML_PaleGoldenRod
1521  0000              PUBLIC __ULAP_COLOR_HTML_LightCoral
1522  0000              PUBLIC __ULAP_COLOR_HTML_Khaki
1523  0000              PUBLIC __ULAP_COLOR_HTML_AliceBlue
1524  0000              PUBLIC __ULAP_COLOR_HTML_HoneyDew
1525  0000              PUBLIC __ULAP_COLOR_HTML_Azure
1526  0000              PUBLIC __ULAP_COLOR_HTML_SandyBrown
1527  0000              PUBLIC __ULAP_COLOR_HTML_Wheat
1528  0000              PUBLIC __ULAP_COLOR_HTML_Beige
1529  0000              PUBLIC __ULAP_COLOR_HTML_WhiteSmoke
1530  0000              PUBLIC __ULAP_COLOR_HTML_MintCream
1531  0000              PUBLIC __ULAP_COLOR_HTML_GhostWhite
1532  0000              PUBLIC __ULAP_COLOR_HTML_Salmon
1533  0000              PUBLIC __ULAP_COLOR_HTML_AntiqueWhite
1534  0000              PUBLIC __ULAP_COLOR_HTML_Linen
1535  0000              PUBLIC __ULAP_COLOR_HTML_LightGoldenRodYellow
1536  0000              PUBLIC __ULAP_COLOR_HTML_OldLace
1537  0000              PUBLIC __ULAP_COLOR_HTML_Red
1538  0000              PUBLIC __ULAP_COLOR_HTML_Fuchsia
1539  0000              PUBLIC __ULAP_COLOR_HTML_Magenta
1540  0000              PUBLIC __ULAP_COLOR_HTML_DeepPink
1541  0000              PUBLIC __ULAP_COLOR_HTML_OrangeRed
1542  0000              PUBLIC __ULAP_COLOR_HTML_Tomato
1543  0000              PUBLIC __ULAP_COLOR_HTML_HotPink
1544  0000              PUBLIC __ULAP_COLOR_HTML_Coral
1545  0000              PUBLIC __ULAP_COLOR_HTML_DarkOrange
1546  0000              PUBLIC __ULAP_COLOR_HTML_LightSalmon
1547  0000              PUBLIC __ULAP_COLOR_HTML_Orange
1548  0000              PUBLIC __ULAP_COLOR_HTML_LightPink
1549  0000              PUBLIC __ULAP_COLOR_HTML_Pink
1550  0000              PUBLIC __ULAP_COLOR_HTML_Gold
1551  0000              PUBLIC __ULAP_COLOR_HTML_PeachPuff
1552  0000              PUBLIC __ULAP_COLOR_HTML_NavajoWhite
1553  0000              PUBLIC __ULAP_COLOR_HTML_Moccasin
1554  0000              PUBLIC __ULAP_COLOR_HTML_Bisque
1555  0000              PUBLIC __ULAP_COLOR_HTML_MistyRose
1556  0000              PUBLIC __ULAP_COLOR_HTML_BlanchedAlmond
1557  0000              PUBLIC __ULAP_COLOR_HTML_PapayaWhip
1558  0000              PUBLIC __ULAP_COLOR_HTML_LavenderBlush
1559  0000              PUBLIC __ULAP_COLOR_HTML_SeaShell
1560  0000              PUBLIC __ULAP_COLOR_HTML_Cornsilk
1561  0000              PUBLIC __ULAP_COLOR_HTML_LemonChiffon
1562  0000              PUBLIC __ULAP_COLOR_HTML_FloralWhite
1563  0000              PUBLIC __ULAP_COLOR_HTML_Snow
1564  0000              PUBLIC __ULAP_COLOR_HTML_Yellow
1565  0000              PUBLIC __ULAP_COLOR_HTML_LightYellow
1566  0000              PUBLIC __ULAP_COLOR_HTML_Ivory
1567  0000              PUBLIC __ULAP_COLOR_HTML_White
1568  0000              
1569  0000              
1570  0000              
1571  0000              defc __IO_ULAP_REGISTER = 0xbf3b
1572  0000              defc __IO_ULAP_DATA     = 0xff3b
1573  0000              
1574  0000              defc __ULAP_COLOR_MONO_BLACK = 0x00
1575  0000              defc __ULAP_COLOR_MONO_GREY_0 = 0x00
1576  0000              defc __ULAP_COLOR_MONO_GREY_1 = 0x49
1577  0000              defc __ULAP_COLOR_MONO_GREY_2 = 0x92
1578  0000              defc __ULAP_COLOR_MONO_GREY_3 = 0xff
1579  0000              defc __ULAP_COLOR_MONO_WHITE = 0xff
1580  0000              
1581  0000              defc __ULAP_COLOR_AMBER_0 = 0x00
1582  0000              defc __ULAP_COLOR_AMBER_1 = 0x04
1583  0000              defc __ULAP_COLOR_AMBER_2 = 0x28
1584  0000              defc __ULAP_COLOR_AMBER_3 = 0x2c
1585  0000              defc __ULAP_COLOR_AMBER_4 = 0x50
1586  0000              defc __ULAP_COLOR_AMBER_5 = 0x54
1587  0000              defc __ULAP_COLOR_AMBER_6 = 0x78
1588  0000              defc __ULAP_COLOR_AMBER_7 = 0x7c
1589  0000              
1590  0000              defc __ULAP_COLOR_GREEN_0 = 0x00
1591  0000              defc __ULAP_COLOR_GREEN_1 = 0x20
1592  0000              defc __ULAP_COLOR_GREEN_2 = 0x40
1593  0000              defc __ULAP_COLOR_GREEN_3 = 0x60
1594  0000              defc __ULAP_COLOR_GREEN_4 = 0x80
1595  0000              defc __ULAP_COLOR_GREEN_5 = 0xa0
1596  0000              defc __ULAP_COLOR_GREEN_6 = 0xc0
1597  0000              defc __ULAP_COLOR_GREEN_7 = 0xe0
1598  0000              
1599  0000              defc __ULAP_COLOR_RB_RED = 0x1c
1600  0000              defc __ULAP_COLOR_RB_ORANGE = 0x7c
1601  0000              defc __ULAP_COLOR_RB_YELLOW = 0xfc
1602  0000              defc __ULAP_COLOR_RB_GREEN = 0xe0
1603  0000              defc __ULAP_COLOR_RB_BLUE = 0x03
1604  0000              defc __ULAP_COLOR_RB_VIOLET = 0x0a
1605  0000              defc __ULAP_COLOR_RB_INDIGO = 0x13
1606  0000              
1607  0000              defc __ULAP_COLOR_ZX_BLACK = 0x00
1608  0000              defc __ULAP_COLOR_ZX_BLUE = 0x02
1609  0000              defc __ULAP_COLOR_ZX_RED = 0x18
1610  0000              defc __ULAP_COLOR_ZX_MAGENTA = 0x1b
1611  0000              defc __ULAP_COLOR_ZX_GREEN = 0xc0
1612  0000              defc __ULAP_COLOR_ZX_CYAN = 0xc3
1613  0000              defc __ULAP_COLOR_ZX_YELLOW = 0xd8
1614  0000              defc __ULAP_COLOR_ZX_WHITE = 0xdb
1615  0000              defc __ULAP_COLOR_ZX_BRIGHT_BLACK = 0x00
1616  0000              defc __ULAP_COLOR_ZX_BRIGHT_BLUE = 0x03
1617  0000              defc __ULAP_COLOR_ZX_BRIGHT_RED = 0x1c
1618  0000              defc __ULAP_COLOR_ZX_BRIGHT_MAGENTA = 0x1f
1619  0000              defc __ULAP_COLOR_ZX_BRIGHT_GREEN = 0xe0
1620  0000              defc __ULAP_COLOR_ZX_BRIGHT_CYAN = 0xe3
1621  0000              defc __ULAP_COLOR_ZX_BRIGHT_YELLOW = 0xfc
1622  0000              defc __ULAP_COLOR_ZX_BRIGHT_WHITE = 0xff
1623  0000              
1624  0000              defc __ULAP_COLOR_ZXNR_NAVY = 0x01
1625  0000              defc __ULAP_COLOR_ZXNR_MAROON = 0x08
1626  0000              defc __ULAP_COLOR_ZXNR_INDIGO = 0x09
1627  0000              defc __ULAP_COLOR_ZXNR_RACING_GREEN = 0x40
1628  0000              defc __ULAP_COLOR_ZXNR_SHERPA_BLUE = 0x41
1629  0000              defc __ULAP_COLOR_ZXNR_OLIVE = 0x48
1630  0000              defc __ULAP_COLOR_ZXNR_BLACK = 0x00
1631  0000              defc __ULAP_COLOR_ZXNR_MIDNIGHT_BLUE = 0x02
1632  0000              defc __ULAP_COLOR_ZXNR_DARK_RED = 0x10
1633  0000              defc __ULAP_COLOR_ZXNR_DARK_VIOLET = 0x12
1634  0000              defc __ULAP_COLOR_ZXNR_ISLAMIC_GREEN = 0x80
1635  0000              defc __ULAP_COLOR_ZXNR_BONDI_BLUE = 0x82
1636  0000              defc __ULAP_COLOR_ZXNR_BRIGHT_OLIVE = 0x90
1637  0000              defc __ULAP_COLOR_ZXNR_GUNPOWDER_GRAY = 0x49
1638  0000              defc __ULAP_COLOR_ZXNR_BLUE = 0x03
1639  0000              defc __ULAP_COLOR_ZXNR_RED = 0x1c
1640  0000              defc __ULAP_COLOR_ZXNR_MAGENTA = 0x3f
1641  0000              defc __ULAP_COLOR_ZXNR_GREEN = 0xe0
1642  0000              defc __ULAP_COLOR_ZXNR_AQUA = 0xe3
1643  0000              defc __ULAP_COLOR_ZXNR_YELLOW = 0xfc
1644  0000              defc __ULAP_COLOR_ZXNR_MIST_GRAY = 0xb6
1645  0000              defc __ULAP_COLOR_ZXNR_SLATE_BLUE = 0x6f
1646  0000              defc __ULAP_COLOR_ZXNR_BITTERSWEET = 0x7d
1647  0000              defc __ULAP_COLOR_ZXNR_ULTRA_PINK = 0x7f
1648  0000              defc __ULAP_COLOR_ZXNR_SCREAMING_GREEN = 0xed
1649  0000              defc __ULAP_COLOR_ZXNR_ELECTRIC_BLUE = 0xf3
1650  0000              defc __ULAP_COLOR_ZXNR_LASER_LEMON = 0xfd
1651  0000              defc __ULAP_COLOR_ZXNR_WHITE = 0xff
1652  0000              defc __ULAP_COLOR_ZXNR_LAVENDER_BLUE = 0xb7
1653  0000              defc __ULAP_COLOR_ZXNR_MELON = 0xbe
1654  0000              defc __ULAP_COLOR_ZXNR_LAVENDER_ROSE = 0xbf
1655  0000              defc __ULAP_COLOR_ZXNR_MINT_GREEN = 0xf6
1656  0000              defc __ULAP_COLOR_ZXNR_COLUMBIA_BLUE = 0xf7
1657  0000              defc __ULAP_COLOR_ZXNR_CANARY = 0xfe
1658  0000              
1659  0000              defc __ULAP_COLOR_C64_BLACK = 0x00
1660  0000              defc __ULAP_COLOR_C64_WHITE = 0xff
1661  0000              defc __ULAP_COLOR_C64_RED = 0x30
1662  0000              defc __ULAP_COLOR_C64_CYAN = 0xaf
1663  0000              defc __ULAP_COLOR_C64_VIOLET = 0x52
1664  0000              defc __ULAP_COLOR_C64_GREEN = 0xad
1665  0000              defc __ULAP_COLOR_C64_BLUE = 0x26
1666  0000              defc __ULAP_COLOR_C64_YELLOW = 0xd9
1667  0000              defc __ULAP_COLOR_C64_ORANGE = 0x50
1668  0000              defc __ULAP_COLOR_C64_BROWN = 0x48
1669  0000              defc __ULAP_COLOR_C64_LIGHTRED = 0x75
1670  0000              defc __ULAP_COLOR_C64_GREY1 = 0x49
1671  0000              defc __ULAP_COLOR_C64_GREY2 = 0x92
1672  0000              defc __ULAP_COLOR_C64_LIGHTGREEN = 0xf6
1673  0000              defc __ULAP_COLOR_C64_LIGHTBLUE = 0x6f
1674  0000              defc __ULAP_COLOR_C64_GREY3 = 0xb6
1675  0000              
1676  0000              defc __ULAP_COLOR_G1_BLACK = 0x00
1677  0000              defc __ULAP_COLOR_G1_GREY = 0x6d
1678  0000              defc __ULAP_COLOR_G1_SILVER = 0xb6
1679  0000              defc __ULAP_COLOR_G1_DARK_TEAL = 0x62
1680  0000              defc __ULAP_COLOR_G1_GREEN = 0xa0
1681  0000              defc __ULAP_COLOR_G1_GREENYELLOW = 0xf0
1682  0000              defc __ULAP_COLOR_G1_MAROON = 0x0c
1683  0000              defc __ULAP_COLOR_G1_SIENNA = 0x54
1684  0000              defc __ULAP_COLOR_G1_SANDYBROWN = 0x9c
1685  0000              defc __ULAP_COLOR_G1_KHAKI = 0xfd
1686  0000              defc __ULAP_COLOR_G1_WHITE = 0xff
1687  0000              defc __ULAP_COLOR_G1_SKYBLUE = 0xd3
1688  0000              defc __ULAP_COLOR_G1_SLATEBLUE = 0x6b
1689  0000              defc __ULAP_COLOR_G1_BLUE = 0x02
1690  0000              
1691  0000              defc __ULAP_COLOR_STD_DARK_BLUE = 0x02
1692  0000              defc __ULAP_COLOR_STD_BRIGHT_BLUE = 0xdb
1693  0000              defc __ULAP_COLOR_STD_BLUE = 0x03
1694  0000              defc __ULAP_COLOR_STD_CYAN = 0xe3
1695  0000              defc __ULAP_COLOR_STD_BRIGHT_YELLOW = 0xdd
1696  0000              defc __ULAP_COLOR_STD_YELLOW = 0xfc
1697  0000              defc __ULAP_COLOR_STD_ORANGE = 0x9d
1698  0000              defc __ULAP_COLOR_STD_BRIGHT_RED = 0x5d
1699  0000              defc __ULAP_COLOR_STD_RED = 0x1c
1700  0000              defc __ULAP_COLOR_STD_DARK_RED = 0x10
1701  0000              defc __ULAP_COLOR_STD_MAGENTA = 0x1f
1702  0000              defc __ULAP_COLOR_STD_BRIGHT_GREEN = 0xf2
1703  0000              defc __ULAP_COLOR_STD_GREEN = 0xe0
1704  0000              defc __ULAP_COLOR_STD_DARK_GREEN = 0x80
1705  0000              defc __ULAP_COLOR_STD_BRIGHT_GREY = 0x49
1706  0000              defc __ULAP_COLOR_STD_LIGHT_GREY = 0x6d
1707  0000              defc __ULAP_COLOR_STD_GREY = 0x24
1708  0000              defc __ULAP_COLOR_STD_WHITE = 0xff
1709  0000              defc __ULAP_COLOR_STD_BLACK = 0x00
1710  0000              
1711  0000              defc __ULAP_COLOR_HTML_Black = 0
1712  0000              defc __ULAP_COLOR_HTML_Navy = 2
1713  0000              defc __ULAP_COLOR_HTML_DarkBlue = 2
1714  0000              defc __ULAP_COLOR_HTML_MediumBlue = 3
1715  0000              defc __ULAP_COLOR_HTML_Blue = 3
1716  0000              defc __ULAP_COLOR_HTML_DarkGreen = 96
1717  0000              defc __ULAP_COLOR_HTML_Green = 128
1718  0000              defc __ULAP_COLOR_HTML_Teal = 130
1719  0000              defc __ULAP_COLOR_HTML_DarkCyan = 130
1720  0000              defc __ULAP_COLOR_HTML_DeepSkyBlue = 163
1721  0000              defc __ULAP_COLOR_HTML_DarkTurquoise = 195
1722  0000              defc __ULAP_COLOR_HTML_MediumSpringGreen = 226
1723  0000              defc __ULAP_COLOR_HTML_Lime = 224
1724  0000              defc __ULAP_COLOR_HTML_SpringGreen = 225
1725  0000              defc __ULAP_COLOR_HTML_Aqua = 227
1726  0000              defc __ULAP_COLOR_HTML_Cyan = 227
1727  0000              defc __ULAP_COLOR_HTML_MidnightBlue = 1
1728  0000              defc __ULAP_COLOR_HTML_DodgerBlue = 131
1729  0000              defc __ULAP_COLOR_HTML_LightSeaGreen = 166
1730  0000              defc __ULAP_COLOR_HTML_ForestGreen = 132
1731  0000              defc __ULAP_COLOR_HTML_SeaGreen = 133
1732  0000              defc __ULAP_COLOR_HTML_DarkSlateGray = 69
1733  0000              defc __ULAP_COLOR_HTML_DarkSlateGrey = 69
1734  0000              defc __ULAP_COLOR_HTML_LimeGreen = 196
1735  0000              defc __ULAP_COLOR_HTML_MediumSeaGreen = 165
1736  0000              defc __ULAP_COLOR_HTML_Turquoise = 235
1737  0000              defc __ULAP_COLOR_HTML_RoyalBlue = 107
1738  0000              defc __ULAP_COLOR_HTML_SteelBlue = 138
1739  0000              defc __ULAP_COLOR_HTML_DarkSlateBlue = 42
1740  0000              defc __ULAP_COLOR_HTML_MediumTurquoise = 203
1741  0000              defc __ULAP_COLOR_HTML_Indigo = 10
1742  0000              defc __ULAP_COLOR_HTML_DarkOliveGreen = 104
1743  0000              defc __ULAP_COLOR_HTML_CadetBlue = 138
1744  0000              defc __ULAP_COLOR_HTML_CornflowerBlue = 143
1745  0000              defc __ULAP_COLOR_HTML_RebeccaPurple = 46
1746  0000              defc __ULAP_COLOR_HTML_MediumAquaMarine = 206
1747  0000              defc __ULAP_COLOR_HTML_DimGray = 109
1748  0000              defc __ULAP_COLOR_HTML_DimGrey = 109
1749  0000              defc __ULAP_COLOR_HTML_SlateBlue = 79
1750  0000              defc __ULAP_COLOR_HTML_OliveDrab = 140
1751  0000              defc __ULAP_COLOR_HTML_SlateGray = 142
1752  0000              defc __ULAP_COLOR_HTML_SlateGrey = 142
1753  0000              defc __ULAP_COLOR_HTML_LightSlateGray = 142
1754  0000              defc __ULAP_COLOR_HTML_LightSlateGrey = 142
1755  0000              defc __ULAP_COLOR_HTML_MediumSlateBlue = 111
1756  0000              defc __ULAP_COLOR_HTML_LawnGreen = 236
1757  0000              defc __ULAP_COLOR_HTML_Chartreuse = 236
1758  0000              defc __ULAP_COLOR_HTML_Aquamarine = 239
1759  0000              defc __ULAP_COLOR_HTML_Maroon = 16
1760  0000              defc __ULAP_COLOR_HTML_Purple = 18
1761  0000              defc __ULAP_COLOR_HTML_Olive = 144
1762  0000              defc __ULAP_COLOR_HTML_Gray = 146
1763  0000              defc __ULAP_COLOR_HTML_Grey = 146
1764  0000              defc __ULAP_COLOR_HTML_SkyBlue = 211
1765  0000              defc __ULAP_COLOR_HTML_LightSkyBlue = 211
1766  0000              defc __ULAP_COLOR_HTML_BlueViolet = 51
1767  0000              defc __ULAP_COLOR_HTML_DarkRed = 16
1768  0000              defc __ULAP_COLOR_HTML_DarkMagenta = 18
1769  0000              defc __ULAP_COLOR_HTML_SaddleBrown = 80
1770  0000              defc __ULAP_COLOR_HTML_DarkSeaGreen = 178
1771  0000              defc __ULAP_COLOR_HTML_LightGreen = 242
1772  0000              defc __ULAP_COLOR_HTML_MediumPurple = 115
1773  0000              defc __ULAP_COLOR_HTML_DarkViolet = 19
1774  0000              defc __ULAP_COLOR_HTML_PaleGreen = 242
1775  0000              defc __ULAP_COLOR_HTML_DarkOrchid = 51
1776  0000              defc __ULAP_COLOR_HTML_YellowGreen = 208
1777  0000              defc __ULAP_COLOR_HTML_Sienna = 84
1778  0000              defc __ULAP_COLOR_HTML_Brown = 52
1779  0000              defc __ULAP_COLOR_HTML_DarkGray = 182
1780  0000              defc __ULAP_COLOR_HTML_DarkGrey = 182
1781  0000              defc __ULAP_COLOR_HTML_LightBlue = 215
1782  0000              defc __ULAP_COLOR_HTML_GreenYellow = 244
1783  0000              defc __ULAP_COLOR_HTML_PaleTurquoise = 247
1784  0000              defc __ULAP_COLOR_HTML_LightSteelBlue = 215
1785  0000              defc __ULAP_COLOR_HTML_PowderBlue = 247
1786  0000              defc __ULAP_COLOR_HTML_FireBrick = 52
1787  0000              defc __ULAP_COLOR_HTML_DarkGoldenRod = 148
1788  0000              defc __ULAP_COLOR_HTML_MediumOrchid = 87
1789  0000              defc __ULAP_COLOR_HTML_RosyBrown = 150
1790  0000              defc __ULAP_COLOR_HTML_DarkKhaki = 181
1791  0000              defc __ULAP_COLOR_HTML_Silver = 219
1792  0000              defc __ULAP_COLOR_HTML_MediumVioletRed = 26
1793  0000              defc __ULAP_COLOR_HTML_IndianRed = 89
1794  0000              defc __ULAP_COLOR_HTML_Peru = 152
1795  0000              defc __ULAP_COLOR_HTML_Chocolate = 120
1796  0000              defc __ULAP_COLOR_HTML_Tan = 186
1797  0000              defc __ULAP_COLOR_HTML_LightGray = 219
1798  0000              defc __ULAP_COLOR_HTML_LightGrey = 219
1799  0000              defc __ULAP_COLOR_HTML_Thistle = 187
1800  0000              defc __ULAP_COLOR_HTML_Orchid = 123
1801  0000              defc __ULAP_COLOR_HTML_GoldenRod = 184
1802  0000              defc __ULAP_COLOR_HTML_PaleVioletRed = 122
1803  0000              defc __ULAP_COLOR_HTML_Crimson = 24
1804  0000              defc __ULAP_COLOR_HTML_Gainsboro = 219
1805  0000              defc __ULAP_COLOR_HTML_Plum = 187
1806  0000              defc __ULAP_COLOR_HTML_BurlyWood = 186
1807  0000              defc __ULAP_COLOR_HTML_LightCyan = 255
1808  0000              defc __ULAP_COLOR_HTML_Lavender = 255
1809  0000              defc __ULAP_COLOR_HTML_DarkSalmon = 157
1810  0000              defc __ULAP_COLOR_HTML_Violet = 159
1811  0000              defc __ULAP_COLOR_HTML_PaleGoldenRod = 254
1812  0000              defc __ULAP_COLOR_HTML_LightCoral = 158
1813  0000              defc __ULAP_COLOR_HTML_Khaki = 254
1814  0000              defc __ULAP_COLOR_HTML_AliceBlue = 255
1815  0000              defc __ULAP_COLOR_HTML_HoneyDew = 255
1816  0000              defc __ULAP_COLOR_HTML_Azure = 255
1817  0000              defc __ULAP_COLOR_HTML_SandyBrown = 189
1818  0000              defc __ULAP_COLOR_HTML_Wheat = 222
1819  0000              defc __ULAP_COLOR_HTML_Beige = 255
1820  0000              defc __ULAP_COLOR_HTML_WhiteSmoke = 255
1821  0000              defc __ULAP_COLOR_HTML_MintCream = 255
1822  0000              defc __ULAP_COLOR_HTML_GhostWhite = 255
1823  0000              defc __ULAP_COLOR_HTML_Salmon = 157
1824  0000              defc __ULAP_COLOR_HTML_AntiqueWhite = 255
1825  0000              defc __ULAP_COLOR_HTML_Linen = 255
1826  0000              defc __ULAP_COLOR_HTML_LightGoldenRodYellow = 255
1827  0000              defc __ULAP_COLOR_HTML_OldLace = 255
1828  0000              defc __ULAP_COLOR_HTML_Red = 28
1829  0000              defc __ULAP_COLOR_HTML_Fuchsia = 31
1830  0000              defc __ULAP_COLOR_HTML_Magenta = 31
1831  0000              defc __ULAP_COLOR_HTML_DeepPink = 30
1832  0000              defc __ULAP_COLOR_HTML_OrangeRed = 92
1833  0000              defc __ULAP_COLOR_HTML_Tomato = 125
1834  0000              defc __ULAP_COLOR_HTML_HotPink = 126
1835  0000              defc __ULAP_COLOR_HTML_Coral = 125
1836  0000              defc __ULAP_COLOR_HTML_DarkOrange = 156
1837  0000              defc __ULAP_COLOR_HTML_LightSalmon = 189
1838  0000              defc __ULAP_COLOR_HTML_Orange = 188
1839  0000              defc __ULAP_COLOR_HTML_LightPink = 191
1840  0000              defc __ULAP_COLOR_HTML_Pink = 223
1841  0000              defc __ULAP_COLOR_HTML_Gold = 220
1842  0000              defc __ULAP_COLOR_HTML_PeachPuff = 222
1843  0000              defc __ULAP_COLOR_HTML_NavajoWhite = 222
1844  0000              defc __ULAP_COLOR_HTML_Moccasin = 254
1845  0000              defc __ULAP_COLOR_HTML_Bisque = 255
1846  0000              defc __ULAP_COLOR_HTML_MistyRose = 255
1847  0000              defc __ULAP_COLOR_HTML_BlanchedAlmond = 255
1848  0000              defc __ULAP_COLOR_HTML_PapayaWhip = 255
1849  0000              defc __ULAP_COLOR_HTML_LavenderBlush = 255
1850  0000              defc __ULAP_COLOR_HTML_SeaShell = 255
1851  0000              defc __ULAP_COLOR_HTML_Cornsilk = 255
1852  0000              defc __ULAP_COLOR_HTML_LemonChiffon = 255
1853  0000              defc __ULAP_COLOR_HTML_FloralWhite = 255
1854  0000              defc __ULAP_COLOR_HTML_Snow = 255
1855  0000              defc __ULAP_COLOR_HTML_Yellow = 252
1856  0000              defc __ULAP_COLOR_HTML_LightYellow = 255
1857  0000              defc __ULAP_COLOR_HTML_Ivory = 255
1858  0000              defc __ULAP_COLOR_HTML_White = 255
1859  0000              
1860  0000              
1861  0000              
1862  0000              
1863  0000              
1864  0000              
1865  0000              
1866  0000              
1867  0000              
1868  0000              PUBLIC __NEXTOS_IDE_MODE
1869  0000              
1870  0000              PUBLIC __ESX_RST_SYS
1871  0000              PUBLIC __ESX_RST_ROM
1872  0000              PUBLIC __ESX_RST_EXITDOT
1873  0000              
1874  0000              PUBLIC __ESX_PATHNAME_MAX
1875  0000              PUBLIC __ESX_FILENAME_MAX
1876  0000              PUBLIC __ESX_FILENAME_LFN_MAX
1877  0000              
1878  0000              PUBLIC __ESX_DISK_FILEMAP
1879  0000              PUBLIC __ESX_DISK_STRMSTART
1880  0000              PUBLIC __ESX_DISK_STRMEND
1881  0000              
1882  0000              PUBLIC __ESX_M_DOSVERSION
1883  0000              PUBLIC __ESX_M_GETSETDRV
1884  0000              
1885  0000              PUBLIC __ESX_M_TAPEIN
1886  0000              PUBLIC __esx_tapein_open
1887  0000              PUBLIC __esx_tapein_close
1888  0000              PUBLIC __esx_tapein_info
1889  0000              PUBLIC __esx_tapein_setpos
1890  0000              PUBLIC __esx_tapein_getpos
1891  0000              PUBLIC __esx_tapein_pause
1892  0000              PUBLIC __esx_tapein_flags
1893  0000              
1894  0000              PUBLIC __ESX_M_TAPEOUT
1895  0000              PUBLIC __esx_tapeout_open
1896  0000              PUBLIC __esx_tapeout_close
1897  0000              PUBLIC __esx_tapeout_info
1898  0000              PUBLIC __esx_tapeout_trunc
1899  0000              
1900  0000              PUBLIC __ESX_M_GETHANDLE
1901  0000              PUBLIC __ESX_M_GETDATE
1902  0000              PUBLIC __ESX_M_EXECCMD
1903  0000              
1904  0000              PUBLIC __ESX_M_SETCAPS
1905  0000              PUBLIC __esx_caps_fast_trunc
1906  0000              
1907  0000              PUBLIC __ESX_M_DRVAPI
1908  0000              PUBLIC __ESX_M_GETERR
1909  0000              PUBLIC __ESX_M_P3DOS
1910  0000              PUBLIC __ESX_M_ERRH
1911  0000              
1912  0000              PUBLIC __ESX_F_OPEN
1913  0000              PUBLIC __esx_mode_read
1914  0000              PUBLIC __esx_mode_write
1915  0000              PUBLIC __esx_mode_use_header
1916  0000              PUBLIC __esx_mode_open_exist
1917  0000              PUBLIC __esx_mode_open_creat
1918  0000              PUBLIC __esx_mode_creat_noexist
1919  0000              PUBLIC __esx_mode_creat_trunc
1920  0000              
1921  0000              PUBLIC __ESX_F_CLOSE
1922  0000              PUBLIC __ESX_F_SYNC
1923  0000              PUBLIC __ESX_F_READ
1924  0000              PUBLIC __ESX_F_WRITE
1925  0000              
1926  0000              PUBLIC __ESX_F_SEEK
1927  0000              PUBLIC __esx_seek_set
1928  0000              PUBLIC __esx_seek_fwd
1929  0000              PUBLIC __esx_seek_bwd
1930  0000              
1931  0000              PUBLIC __ESX_F_FGETPOS
1932  0000              PUBLIC __ESX_F_FSTAT
1933  0000              PUBLIC __ESX_F_FTRUNCATE
1934  0000              
1935  0000              PUBLIC __ESX_F_OPENDIR
1936  0000              PUBLIC __esx_dir_use_lfn
1937  0000              PUBLIC __esx_dir_use_header
1938  0000              
1939  0000              PUBLIC __ESX_F_READDIR
1940  0000              PUBLIC __esx_dir_a_rdo
1941  0000              PUBLIC __esx_dir_a_hid
1942  0000              PUBLIC __esx_dir_a_sys
1943  0000              PUBLIC __esx_dir_a_vol
1944  0000              PUBLIC __esx_dir_a_dir
1945  0000              PUBLIC __esx_dir_a_arch
1946  0000              PUBLIC __esx_dir_a_dev
1947  0000              PUBLIC __esx_dir_a_res
1948  0000              
1949  0000              PUBLIC __ESX_F_TELLDIR
1950  0000              PUBLIC __ESX_F_SEEKDIR
1951  0000              PUBLIC __ESX_F_REWINDDIR
1952  0000              PUBLIC __ESX_F_GETCWD
1953  0000              PUBLIC __ESX_F_CHDIR
1954  0000              PUBLIC __ESX_F_MKDIR
1955  0000              PUBLIC __ESX_F_RMDIR
1956  0000              PUBLIC __ESX_F_STAT
1957  0000              PUBLIC __ESX_F_UNLINK
1958  0000              PUBLIC __ESX_F_TRUNCATE
1959  0000              
1960  0000              PUBLIC __ESX_F_CHMOD
1961  0000              PUBLIC __esx_a_write
1962  0000              PUBLIC __esx_a_read
1963  0000              PUBLIC __esx_a_rdwr
1964  0000              PUBLIC __esx_a_hidden
1965  0000              PUBLIC __esx_a_system
1966  0000              PUBLIC __esx_a_arch
1967  0000              PUBLIC __esx_a_exec
1968  0000              PUBLIC __esx_a_all
1969  0000              
1970  0000              PUBLIC __ESX_F_RENAME
1971  0000              PUBLIC __ESX_F_GETFREE
1972  0000              
1973  0000              PUBLIC __ESX_OK
1974  0000              PUBLIC __ESX_EOK
1975  0000              PUBLIC __ESX_ENONSENSE
1976  0000              PUBLIC __ESX_ESTEND
1977  0000              PUBLIC __ESX_EWRTYPE
1978  0000              PUBLIC __ESX_ENOENT
1979  0000              PUBLIC __ESX_EIO
1980  0000              PUBLIC __ESX_EINVAL
1981  0000              PUBLIC __ESX_EACCES
1982  0000              PUBLIC __ESX_ENOSPC
1983  0000              PUBLIC __ESX_ENXIO
1984  0000              PUBLIC __ESX_ENODRV
1985  0000              PUBLIC __ESX_ENFILE
1986  0000              PUBLIC __ESX_EBADF
1987  0000              PUBLIC __ESX_ENODEV
1988  0000              PUBLIC __ESX_EOVERFLOW
1989  0000              PUBLIC __ESX_EISDIR
1990  0000              PUBLIC __ESX_ENOTDIR
1991  0000              PUBLIC __ESX_EEXIST
1992  0000              PUBLIC __ESX_EPATH
1993  0000              PUBLIC __ESX_ENOSYS
1994  0000              PUBLIC __ESX_ENAMETOOLONG
1995  0000              PUBLIC __ESX_ENOCMD
1996  0000              PUBLIC __ESX_EINUSE
1997  0000              PUBLIC __ESX_ERDONLY
1998  0000              PUBLIC __ESX_EVERIFY
1999  0000              PUBLIC __ESX_ELOADINGKO
2000  0000              PUBLIC __ESX_EDIRINUSE
2001  0000              PUBLIC __ESX_EMAPRAMACTIVE
2002  0000              PUBLIC __ESX_EDRIVEBUSY
2003  0000              PUBLIC __ESX_EFSUNKNOWN
2004  0000              PUBLIC __ESX_EDEVICEBUSY
2005  0000              
2006  0000              PUBLIC __ESX_EMAXCODE
2007  0000              
2008  0000              
2009  0000              
2010  0000              
2011  0000              defc __NEXTOS_IDE_MODE = 0x01d5
2012  0000              
2013  0000              defc __ESX_RST_SYS = 0x08
2014  0000              defc __ESX_RST_ROM = 0x18
2015  0000              defc __ESX_RST_EXITDOT = 0x20
2016  0000              
2017  0000              defc __ESX_PATHNAME_MAX = 256
2018  0000              defc __ESX_FILENAME_MAX = 12
2019  0000              defc __ESX_FILENAME_LFN_MAX = 260
2020  0000              
2021  0000              defc __ESX_DISK_FILEMAP = 0x85
2022  0000              defc __ESX_DISK_STRMSTART = 0x86
2023  0000              defc __ESX_DISK_STRMEND = 0x87
2024  0000              
2025  0000              defc __ESX_M_DOSVERSION = 0x88
2026  0000              defc __ESX_M_GETSETDRV = 0x89
2027  0000              
2028  0000              defc __ESX_M_TAPEIN = 0x8b
2029  0000              defc __esx_tapein_open = 0
2030  0000              defc __esx_tapein_close = 1
2031  0000              defc __esx_tapein_info = 2
2032  0000              defc __esx_tapein_setpos = 3
2033  0000              defc __esx_tapein_getpos = 4
2034  0000              defc __esx_tapein_pause = 5
2035  0000              defc __esx_tapein_flags = 6
2036  0000              
2037  0000              defc __ESX_M_TAPEOUT = 0x8c
2038  0000              defc __esx_tapeout_open = 0
2039  0000              defc __esx_tapeout_close = 1
2040  0000              defc __esx_tapeout_info = 2
2041  0000              defc __esx_tapeout_trunc = 3
2042  0000              
2043  0000              defc __ESX_M_GETHANDLE = 0x8d
2044  0000              defc __ESX_M_GETDATE = 0x8e
2045  0000              defc __ESX_M_EXECCMD = 0x8f
2046  0000              
2047  0000              defc __ESX_M_SETCAPS = 0x91
2048  0000              defc __esx_caps_fast_trunc = 0x80
2049  0000              
2050  0000              defc __ESX_M_DRVAPI = 0x92
2051  0000              defc __ESX_M_GETERR = 0x93
2052  0000              defc __ESX_M_P3DOS = 0x94
2053  0000              defc __ESX_M_ERRH = 0x95
2054  0000              
2055  0000              defc __ESX_F_OPEN = 0x9a
2056  0000              defc __esx_mode_read = 0x01
2057  0000              defc __esx_mode_write = 0x02
2058  0000              defc __esx_mode_use_header = 0x40
2059  0000              defc __esx_mode_open_exist = 0x00
2060  0000              defc __esx_mode_open_creat = 0x08
2061  0000              defc __esx_mode_creat_noexist = 0x04
2062  0000              defc __esx_mode_creat_trunc = 0x0c
2063  0000              
2064  0000              defc __ESX_F_CLOSE = 0x9b
2065  0000              defc __ESX_F_SYNC = 0x9c
2066  0000              defc __ESX_F_READ = 0x9d
2067  0000              defc __ESX_F_WRITE = 0x9e
2068  0000              
2069  0000              defc __ESX_F_SEEK = 0x9f
2070  0000              defc __esx_seek_set = 0x00
2071  0000              defc __esx_seek_fwd = 0x01
2072  0000              defc __esx_seek_bwd = 0x02
2073  0000              
2074  0000              defc __ESX_F_FGETPOS = 0xa0
2075  0000              defc __ESX_F_FSTAT = 0xa1
2076  0000              defc __ESX_F_FTRUNCATE = 0xa2
2077  0000              
2078  0000              defc __ESX_F_OPENDIR = 0xa3
2079  0000              defc __esx_dir_use_lfn = 0x10
2080  0000              defc __esx_dir_use_header = 0x40
2081  0000              
2082  0000              defc __ESX_F_READDIR = 0xa4
2083  0000              defc __esx_dir_a_rdo = 0x01
2084  0000              defc __esx_dir_a_hid = 0x02
2085  0000              defc __esx_dir_a_sys = 0x04
2086  0000              defc __esx_dir_a_vol = 0x08
2087  0000              defc __esx_dir_a_dir = 0x10
2088  0000              defc __esx_dir_a_arch = 0x20
2089  0000              defc __esx_dir_a_dev = 0x40
2090  0000              defc __esx_dir_a_res = 0x80
2091  0000              
2092  0000              defc __ESX_F_TELLDIR = 0xa5
2093  0000              defc __ESX_F_SEEKDIR = 0xa6
2094  0000              defc __ESX_F_REWINDDIR = 0xa7
2095  0000              defc __ESX_F_GETCWD = 0xa8
2096  0000              defc __ESX_F_CHDIR = 0xa9
2097  0000              defc __ESX_F_MKDIR = 0xaa
2098  0000              defc __ESX_F_RMDIR = 0xab
2099  0000              defc __ESX_F_STAT = 0xac
2100  0000              defc __ESX_F_UNLINK = 0xad
2101  0000              defc __ESX_F_TRUNCATE = 0xae
2102  0000              
2103  0000              defc __ESX_F_CHMOD = 0xaf
2104  0000              defc __esx_a_write = 0x01
2105  0000              defc __esx_a_read = 0x80
2106  0000              defc __esx_a_rdwr = 0x81
2107  0000              defc __esx_a_hidden = 0x02
2108  0000              defc __esx_a_system = 0x04
2109  0000              defc __esx_a_arch = 0x20
2110  0000              defc __esx_a_exec = 0x40
2111  0000              defc __esx_a_all = 0xe7
2112  0000              
2113  0000              defc __ESX_F_RENAME = 0xb0
2114  0000              defc __ESX_F_GETFREE = 0xb1
2115  0000              
2116  0000              defc __ESX_OK = 0
2117  0000              defc __ESX_EOK = 1
2118  0000              defc __ESX_ENONSENSE = 2
2119  0000              defc __ESX_ESTEND = 3
2120  0000              defc __ESX_EWRTYPE = 4
2121  0000              defc __ESX_ENOENT = 5
2122  0000              defc __ESX_EIO = 6
2123  0000              defc __ESX_EINVAL = 7
2124  0000              defc __ESX_EACCES = 8
2125  0000              defc __ESX_ENOSPC = 9
2126  0000              defc __ESX_ENXIO = 10
2127  0000              defc __ESX_ENODRV = 11
2128  0000              defc __ESX_ENFILE = 12
2129  0000              defc __ESX_EBADF = 13
2130  0000              defc __ESX_ENODEV = 14
2131  0000              defc __ESX_EOVERFLOW = 15
2132  0000              defc __ESX_EISDIR = 16
2133  0000              defc __ESX_ENOTDIR = 17
2134  0000              defc __ESX_EEXIST = 18
2135  0000              defc __ESX_EPATH = 19
2136  0000              defc __ESX_ENOSYS = 20
2137  0000              defc __ESX_ENAMETOOLONG = 21
2138  0000              defc __ESX_ENOCMD = 22
2139  0000              defc __ESX_EINUSE = 23
2140  0000              defc __ESX_ERDONLY = 24
2141  0000              defc __ESX_EVERIFY = 25
2142  0000              defc __ESX_ELOADINGKO = 26
2143  0000              defc __ESX_EDIRINUSE = 27
2144  0000              defc __ESX_EMAPRAMACTIVE = 28
2145  0000              defc __ESX_EDRIVEBUSY = 29
2146  0000              defc __ESX_EFSUNKNOWN = 30
2147  0000              defc __ESX_EDEVICEBUSY = 31
2148  0000              
2149  0000              defc __ESX_EMAXCODE = 31
2150  0000              
2151  0000              
2152  0000              
2153  0000              
2154  0000              
2155  0000              
2156  0000              
2157  0000              
2158  0000              
2159  0000              
2160  0000              ENDIF
2161  0000              
2162  0000              
274   0000              
275   0000              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
276   0000              ;; CRT AND CLIB CONFIGURATION ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
277   0000              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
278   0000              
279   0000              include "../crt_defaults.inc"
1     0000              
2     0000              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
3     0000              ;; crt defaults ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
4     0000              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
5     0000              
6     0000                 ; crt configuration
7     0000              
8     0000                 defc DEF__crt_org_code              = 0       ;; org of code section
9     0000                 defc DEF__crt_org_data              = 0       ;; org of data section (0 or -1 means follow code, -1 means generate separate binary)
10    0000                 defc DEF__crt_org_bss               = 0       ;; org of bss section (0 or -1 means follow data, -1 means generate separate binary)
11    0000              
12    0000                 defc DEF__crt_model                 = 0       ;; 0 = ram model, 1 = rom model, 2 = compressed rom model
13    0000                 defc DEF__crt_enforce_snames        = 3       ;; bit 0 set = enforce BSS name, bit 1 set = enforce DATA name
14    0000              
15    0000                 defc DEF__register_sp               = 0       ;; initial value of sp (-1 = do not modify (some targets may redefine meaning), 0 = top of memory)
16    0000                 defc DEF__crt_stack_size            = 512     ;; minimum size reserved for stack when automatically allocating memory for the malloc heap
17    0000              
18    0000                 defc DEF__crt_initialize_bss        = 0       ;; generate code to initialize bss section at startup
19    0000              
20    0000                 defc DEF__crt_include_preamble      = 0       ;; if non-zero, user supplies code in file "crt_preamble.asm" that is inserted at the start of the binary
21    0000              
22    0000                 defc DEF__crt_org_vector_table      = 0       ;; if negative and Z88DK supplies page zero code, creates a section "code_vector" aligned to a page boundary to hold int vectors
23    0000                 defc DEF__crt_io_vector_base        = 0       ;; io vector base address for z180 internal peripherals
24    0000                 defc DEF__crt_interrupt_mode        = -1      ;; if 0-2 crt inserts appropriate im x instruction
25    0000                 defc DEF__crt_interrupt_mode_exit   = -1      ;; if 0-2 crt inserts appropriate im x instruction on exit
26    0000              
27    0000                 defc DEF__crt_enable_commandline    = 2       ;; generate argc and argv from command line (targets without command line will get argc=1, argv[0]="", argv[1]=NULL)
28    0000                 defc DEF__crt_enable_commandline_ex = 0       ;; target specific bits and bits for io redirection and piping
29    0000                 defc DEF__crt_enable_restart        = 0       ;; if non-zero, restart the program on exit (correct initialization of static variables with rom models only)
30    0000                 defc DEF__crt_enable_close          = 1       ;; if non-zero, close files on exit
31    0000              
32    0000                 defc DEF__crt_enable_eidi           = 0       ;; bit flags: 0x01 = di on start, 0x02 = ei on start, 0x10 = di on exit, 0x20 = ei on exit
33    0000                 defc DEF__crt_on_exit               = 0x10001 ;; halt on exit (see documentation for other exit behaviours)
34    0000              
35    0000                 defc DEF__crt_enable_rst            = 0       ;; if non-zero and in some crts with code org = 0, set bits indicate which rst locations are implemented with user code
36    0000                 defc DEF__crt_enable_nmi            = 0       ;; if non-zero and in some crts with code org = 0, a jump to user code to service the nmi is inserted
37    0000                 defc DEF__crt_enable_trap           = 0       ;; if non-zero and in some crts with code org = 0 and Z180 target, a jump to user code to service traps is inserted
38    0000              
39    0000                 ; clib defaults
40    0000              
41    0000                 defc DEF__clib_exit_stack_size      = 32      ;; max number of functions that can be registered with atexit()
42    0000                 defc DEF__clib_quickexit_stack_size = 32      ;; max number of functions that can be registered with at_quickexit()
43    0000              
44    0000                 defc DEF__clib_malloc_heap_size     = -1      ;; size of malloc heap (0 = do not create a heap, -1 = automatically place heap between end of bss section and bottom of stack)
45    0000                 defc DEF__clib_stdio_heap_size      = 256     ;; size of stdio heap (0 = do not allocate bytes for opening of files)
46    0000              
47    0000                 defc DEF__clib_balloc_table_size    = 0       ;; number of queues created for balloc block memory allocator
48    0000              
49    0000                 defc DEF__clib_fopen_max            = 8       ;; max number of FILE*
50    0000                 defc DEF__clib_open_max             = 8       ;; max number of open files
51    0000              
52    0000              ;; end crt defaults ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
53    0000              
280   0000              include "crt_config.inc"
1     0000              
2     0000              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
3     0000              ;; crt target defaults ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
4     0000              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
5     0000              
6     0000              IF __CRTCFG = -1
7     0000              
8     0000                 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
9     0000                 ;; user supplied crt defaults ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
10    0000                 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
11    0000              
12    0000                 INCLUDE "crt_cfg.inc"
13    0000              
14    0000              ENDIF
15    0000              
16    0000              IF __CRTCFG = 0
17    0000              
18    0000                 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
19    0000                 ;; zx48 ram model ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
20    0000                 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
21    0000              
22    0000                 defc TAR__crt_org_code              = 32768
23    0000                 defc TAR__crt_org_data              = 0
24    0000                 defc TAR__crt_org_bss               = 0
25    0000              
26    0000                 defc TAR__crt_model                 = 0
27    0000              
28    0000                 defc TAR__register_sp               = 65368    ;; under UDGs
29    0000                 defc TAR__crt_stack_size            = 512
30    0000              
31    0000                 defc TAR__crt_initialize_bss        = 0
32    0000              
33    0000                 defc TAR__crt_include_preamble      = 0
34    0000              
35    0000                 defc TAR__crt_org_vector_table      = 0
36    0000              
37    0000                 defc TAR__crt_interrupt_mode        = -1
38    0000                 defc TAR__crt_interrupt_mode_exit   = 1
39    0000              
40    0000                 defc TAR__crt_enable_commandline    = 0
41    0000                 defc TAR__crt_enable_commandline_ex = 0
42    0000                 defc TAR__crt_enable_restart        = 0
43    0000                 defc TAR__crt_enable_close          = 1
44    0000              
45    0000                 defc TAR__crt_enable_eidi           = 0x01     ;; disable interrupts at start
46    0000                 defc TAR__crt_on_exit               = 0x30002  ;; return to basic
47    0000              
48    0000                 defc TAR__crt_enable_rst            = 0
49    0000                 defc TAR__crt_enable_nmi            = 0
50    0000              
51    0000                 ; clib defaults
52    0000              
53    0000                 defc TAR__clib_exit_stack_size      = 0
54    0000                 defc TAR__clib_quickexit_stack_size = 0
55    0000              
56    0000                 defc TAR__clib_malloc_heap_size     = -1
57    0000                 defc TAR__clib_stdio_heap_size      = 256
58    0000              
59    0000                 defc TAR__clib_balloc_table_size    = 0
60    0000              
61    0000                 defc TAR__clib_fopen_max            = 0
62    0000                 defc TAR__clib_open_max             = 0
63    0000              
64    0000              ENDIF
65    0000              
66    0000              IF __CRTCFG = 1
67    0000              
68    0000                 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
69    0000                 ;; if2 cartridge ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
70    0000                 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
71    0000              
72    0000                 defc TAR__crt_org_code              = 0
73    0000                 defc TAR__crt_org_data              = 32768
74    0000                 defc TAR__crt_org_bss               = -1
75    0000              
76    0000                 defc TAR__crt_model                 = 2
77    0000              
78    0000                 defc TAR__register_sp               = 0
79    0000                 defc TAR__crt_stack_size            = 512
80    0000              
81    0000                 defc TAR__crt_initialize_bss        = 0
82    0000              
83    0000                 defc TAR__crt_include_preamble      = 0
84    0000              
85    0000                 defc TAR__crt_org_vector_table      = 0
86    0000              
87    0000                 defc TAR__crt_interrupt_mode        = -1
88    0000                 defc TAR__crt_interrupt_mode_exit   = -1
89    0000              
90    0000                 defc TAR__crt_enable_commandline    = 0
91    0000                 defc TAR__crt_enable_commandline_ex = 0
92    0000                 defc TAR__crt_enable_restart        = 1
93    0000                 defc TAR__crt_enable_close          = 1
94    0000              
95    0000                 defc TAR__crt_enable_eidi           = 0x11
96    0000                 defc TAR__crt_on_exit               = 0x10001
97    0000              
98    0000                 defc TAR__crt_enable_rst            = 0
99    0000                 defc TAR__crt_enable_nmi            = 0
100   0000              
101   0000                 ; clib defaults
102   0000              
103   0000                 defc TAR__clib_exit_stack_size      = 0
104   0000                 defc TAR__clib_quickexit_stack_size = 0
105   0000              
106   0000                 defc TAR__clib_malloc_heap_size     = -1
107   0000                 defc TAR__clib_stdio_heap_size      = 256
108   0000              
109   0000                 defc TAR__clib_balloc_table_size    = 0
110   0000              
111   0000                 defc TAR__clib_fopen_max            = 0
112   0000                 defc TAR__clib_open_max             = 0
113   0000              
114   0000              ENDIF
115   0000              
116   0000              IF __CRTCFG = 2
117   0000              
118   0000                 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
119   0000                 ;; esxdos dot command ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
120   0000                 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
121   0000              
122   0000                 defc TAR__crt_org_code              = 0x2000
123   0000                 defc TAR__crt_org_data              = 0
124   0000                 defc TAR__crt_org_bss               = 0
125   0000              
126   0000                 defc TAR__crt_model                 = 0
127   0000              
128   0000                 defc TAR__register_sp               = -1
129   0000                 defc TAR__crt_stack_size            = 512
130   0000              
131   0000                 defc TAR__crt_initialize_bss        = 0
132   0000              
133   0000                 defc TAR__crt_include_preamble      = 0
134   0000              
135   0000                 defc TAR__crt_org_vector_table      = 0
136   0000              
137   0000                 defc TAR__crt_interrupt_mode        = -1
138   0000                 defc TAR__crt_interrupt_mode_exit   = -1
139   0000              
140   0000                 defc TAR__crt_enable_commandline    = 3
141   0000                 defc TAR__crt_enable_commandline_ex = 0
142   0000                 defc TAR__crt_enable_restart        = 0
143   0000                 defc TAR__crt_enable_close          = 1
144   0000              
145   0000                 defc TAR__crt_enable_eidi           = 0        ;; no changes to interrupts
146   0000                 defc TAR__crt_on_exit               = 0x30002  ;; return to basic
147   0000              
148   0000                 defc TAR__crt_enable_rst            = 0
149   0000                 defc TAR__crt_enable_nmi            = 0
150   0000              
151   0000                 ; clib defaults
152   0000              
153   0000                 defc TAR__clib_exit_stack_size      = 0
154   0000                 defc TAR__clib_quickexit_stack_size = 0
155   0000              
156   0000                 defc TAR__clib_malloc_heap_size     = 0
157   0000                 defc TAR__clib_stdio_heap_size      = 0
158   0000              
159   0000                 defc TAR__clib_balloc_table_size    = 0
160   0000              
161   0000                 defc TAR__clib_fopen_max            = 0
162   0000                 defc TAR__clib_open_max             = 0
163   0000              
164   0000              ENDIF
165   0000              
166   0000              ;; end crt target defaults ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
167   0000              
281   0000              
282   0000              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
283   0000              ;; crt rules ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
284   0000              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
285   0000              
286   0000              
287   0000                 IFDEF CRT_ORG_CODE
288   0000              
289   0000                    defc __crt_org_code = CRT_ORG_CODE
290   0000              
291   0000                 ELSE
292   0000              
293   0000                    IFDEF TAR__crt_org_code
294   0000              
295   0000                       defc __crt_org_code = TAR__crt_org_code
296   0000              
297   0000                    ELSE
298   0000              
299   0000                       defc __crt_org_code = DEF__crt_org_code
300   0000              
301   0000                    ENDIF
302   0000              
303   0000                 ENDIF
304   0000              
305   0000                 IFDEF REGISTER_SP
306   0000              
307   0000                    defc __register_sp = REGISTER_SP
308   0000              
309   0000                 ELSE
310   0000              
311   0000                    IFDEF STACKPTR
312   0000              
313   0000                       defc __register_sp = STACKPTR
314   0000              
315   0000                    ELSE
316   0000              
317   0000                       IFDEF TAR__register_sp
318   0000              
319   0000                          defc __register_sp = TAR__register_sp
320   0000              
321   0000                       ELSE
322   0000              
323   0000                          defc __register_sp = DEF__register_sp
324   0000              
325   0000                       ENDIF
326   0000              
327   0000                    ENDIF
328   0000              
329   0000                 ENDIF
330   0000              
331   0000              
332   0000                 IFDEF CRT_STACK_SIZE
333   0000              
334   0000                    defc __crt_stack_size = CRT_STACK_SIZE
335   0000              
336   0000                 ELSE
337   0000              
338   0000                    IFDEF TAR__crt_stack_size
339   0000              
340   0000                       defc __crt_stack_size = TAR__crt_stack_size
341   0000              
342   0000                    ELSE
343   0000              
344   0000                       defc __crt_stack_size = DEF__crt_stack_size
345   0000              
346   0000                    ENDIF
347   0000              
348   0000                 ENDIF
349   0000              
350   0000              
351   0000                 IFDEF CRT_ORG_DATA
352   0000              
353   0000                    defc __crt_org_data = CRT_ORG_DATA
354   0000              
355   0000                 ELSE
356   0000              
357   0000                    IFDEF TAR__crt_org_data
358   0000              
359   0000                       defc __crt_org_data = TAR__crt_org_data
360   0000              
361   0000                    ELSE
362   0000              
363   0000                       defc __crt_org_data = DEF__crt_org_data
364   0000              
365   0000                    ENDIF
366   0000              
367   0000                 ENDIF
368   0000              
369   0000              
370   0000                 IFDEF CRT_ORG_BSS
371   0000              
372   0000                    defc __crt_org_bss = CRT_ORG_BSS
373   0000              
374   0000                 ELSE
375   0000              
376   0000                    IFDEF TAR__crt_org_bss
377   0000              
378   0000                       defc __crt_org_bss = TAR__crt_org_bss
379   0000              
380   0000                    ELSE
381   0000              
382   0000                       defc __crt_org_bss = DEF__crt_org_bss
383   0000              
384   0000                    ENDIF
385   0000              
386   0000                 ENDIF
387   0000              
388   0000              
389   0000                 IFDEF CRT_MODEL
390   0000              
391   0000                    defc __crt_model = CRT_MODEL
392   0000              
393   0000                 ELSE
394   0000              
395   0000                    IFDEF TAR__crt_model
396   0000              
397   0000                       defc __crt_model = TAR__crt_model
398   0000              
399   0000                    ELSE
400   0000              
401   0000                       defc __crt_model = DEF__crt_model
402   0000              
403   0000                    ENDIF
404   0000              
405   0000                 ENDIF
406   0000              
407   0000                 IFDEF CRT_INITIALIZE_BSS
408   0000              
409   0000                    defc __crt_initialize_bss = CRT_INITIALIZE_BSS
410   0000              
411   0000                 ELSE
412   0000              
413   0000                    IFDEF TAR__crt_initialize_bss
414   0000              
415   0000                       defc __crt_initialize_bss = TAR__crt_initialize_bss
416   0000              
417   0000                    ELSE
418   0000              
419   0000                       defc __crt_initialize_bss = DEF__crt_initialize_bss
420   0000              
421   0000                    ENDIF
422   0000              
423   0000                 ENDIF
424   0000              
425   0000              
426   0000                 IFDEF CRT_INCLUDE_PREAMBLE
427   0000              
428   0000                    defc __crt_include_preamble = CRT_INCLUDE_PREAMBLE
429   0000              
430   0000                 ELSE
431   0000              
432   0000                    IFDEF TAR__crt_include_preamble
433   0000              
434   0000                       defc __crt_include_preamble = TAR__crt_include_preamble
435   0000              
436   0000                    ELSE
437   0000              
438   0000                       defc __crt_include_preamble = DEF__crt_include_preamble
439   0000              
440   0000                    ENDIF
441   0000              
442   0000                 ENDIF
443   0000              
444   0000                 IFDEF CRT_ORG_VECTOR_TABLE
445   0000              
446   0000                    defc __crt_org_vector_table = CRT_ORG_VECTOR_TABLE
447   0000              
448   0000                 ELSE
449   0000              
450   0000                    IFDEF TAR__crt_org_vector_table
451   0000              
452   0000                       defc __crt_org_vector_table = TAR__crt_org_vector_table
453   0000              
454   0000                    ELSE
455   0000              
456   0000                       defc __crt_org_vector_table = DEF__crt_org_vector_table
457   0000              
458   0000                    ENDIF
459   0000              
460   0000                 ENDIF
461   0000              
462   0000              IF __Z180
463   0000              
464   0000                 IFDEF CRT_IO_VECTOR_BASE
465   0000              
466   0000                    defc __crt_io_vector_base = CRT_IO_VECTOR_BASE
467   0000              
468   0000                 ELSE
469   0000              
470   0000                    IFDEF TAR__crt_io_vector_base
471   0000              
472   0000                       defc __crt_io_vector_base = TAR__crt_io_vector_base
473   0000              
474   0000                    ELSE
475   0000              
476   0000                       defc __crt_io_vector_base = DEF__crt_io_vector_base
477   0000              
478   0000                    ENDIF
479   0000              
480   0000                 ENDIF
481   0000              
482   0000              ENDIF
483   0000              
484   0000                 IFDEF CRT_INTERRUPT_MODE
485   0000              
486   0000                    defc __crt_interrupt_mode = CRT_INTERRUPT_MODE
487   0000              
488   0000                 ELSE
489   0000              
490   0000                    IFDEF TAR__crt_interrupt_mode
491   0000              
492   0000                       defc __crt_interrupt_mode = TAR__crt_interrupt_mode
493   0000              
494   0000                    ELSE
495   0000              
496   0000                       defc __crt_interrupt_mode = DEF__crt_interrupt_mode
497   0000              
498   0000                    ENDIF
499   0000              
500   0000                 ENDIF
501   0000              
502   0000              
503   0000                 IFDEF CRT_INTERRUPT_MODE_EXIT
504   0000              
505   0000                    defc __crt_interrupt_mode_exit = CRT_INTERRUPT_MODE_EXIT
506   0000              
507   0000                 ELSE
508   0000              
509   0000                    IFDEF TAR__crt_interrupt_mode_exit
510   0000              
511   0000                       defc __crt_interrupt_mode_exit = TAR__crt_interrupt_mode_exit
512   0000              
513   0000                    ELSE
514   0000              
515   0000                       defc __crt_interrupt_mode_exit = DEF__crt_interrupt_mode_exit
516   0000              
517   0000                    ENDIF
518   0000              
519   0000                 ENDIF
520   0000              
521   0000              
522   0000                 IFDEF CRT_ENABLE_COMMANDLINE
523   0000              
524   0000                    defc __crt_enable_commandline = CRT_ENABLE_COMMANDLINE
525   0000              
526   0000                 ELSE
527   0000              
528   0000                    IFDEF TAR__crt_enable_commandline
529   0000              
530   0000                       defc __crt_enable_commandline = TAR__crt_enable_commandline
531   0000              
532   0000                    ELSE
533   0000              
534   0000                       defc __crt_enable_commandline = DEF__crt_enable_commandline
535   0000              
536   0000                    ENDIF
537   0000              
538   0000                 ENDIF
539   0000              
540   0000              
541   0000                 IFDEF CRT_ENABLE_COMMANDLINE_EX
542   0000              
543   0000                    defc __crt_enable_commandline_ex = CRT_ENABLE_COMMANDLINE_EX
544   0000              
545   0000                 ELSE
546   0000              
547   0000                    IFDEF TAR__crt_enable_commandline_ex
548   0000              
549   0000                       defc __crt_enable_commandline_ex = TAR__crt_enable_commandline_ex
550   0000              
551   0000                    ELSE
552   0000              
553   0000                       defc __crt_enable_commandline_ex = DEF__crt_enable_commandline_ex
554   0000              
555   0000                    ENDIF
556   0000              
557   0000                 ENDIF
558   0000              
559   0000              
560   0000                 IFDEF CRT_ENABLE_RESTART
561   0000              
562   0000                    defc __crt_enable_restart = CRT_ENABLE_RESTART
563   0000              
564   0000                 ELSE
565   0000              
566   0000                    IFDEF TAR__crt_enable_restart
567   0000              
568   0000                       defc __crt_enable_restart = TAR__crt_enable_restart
569   0000              
570   0000                    ELSE
571   0000              
572   0000                       defc __crt_enable_restart = DEF__crt_enable_restart
573   0000              
574   0000                    ENDIF
575   0000              
576   0000                 ENDIF
577   0000              
578   0000              
579   0000                 IFDEF CRT_ENABLE_CLOSE
580   0000              
581   0000                    defc __crt_enable_close = CRT_ENABLE_CLOSE
582   0000              
583   0000                 ELSE
584   0000              
585   0000                    IFDEF TAR__crt_enable_close
586   0000              
587   0000                       defc __crt_enable_close = TAR__crt_enable_close
588   0000              
589   0000                    ELSE
590   0000              
591   0000                       defc __crt_enable_close = DEF__crt_enable_close
592   0000              
593   0000                    ENDIF
594   0000              
595   0000                 ENDIF
596   0000              
597   0000              
598   0000                 IFDEF CRT_ENABLE_EIDI
599   0000              
600   0000                    defc __crt_enable_eidi = CRT_ENABLE_EIDI
601   0000              
602   0000                 ELSE
603   0000              
604   0000                    IFDEF TAR__crt_enable_eidi
605   0000              
606   0000                       defc __crt_enable_eidi = TAR__crt_enable_eidi
607   0000              
608   0000                    ELSE
609   0000              
610   0000                       defc __crt_enable_eidi = DEF__crt_enable_eidi
611   0000              
612   0000                    ENDIF
613   0000              
614   0000                 ENDIF
615   0000              
616   0000              
617   0000                 IF __crt_enable_restart
618   0000              
619   0000                    defc __crt_on_exit = 0x10008
620   0000              
621   0000                 ELSE
622   0000              
623   0000                    IFDEF CRT_ON_EXIT
624   0000              
625   0000                       defc __crt_on_exit = CRT_ON_EXIT
626   0000              
627   0000                    ELSE
628   0000              
629   0000                       IFDEF TAR__crt_on_exit
630   0000              
631   0000                          defc __crt_on_exit = TAR__crt_on_exit
632   0000              
633   0000                       ELSE
634   0000              
635   0000                          defc __crt_on_exit = DEF__crt_on_exit
636   0000              
637   0000                       ENDIF
638   0000              
639   0000                    ENDIF
640   0000              
641   0000                 ENDIF
642   0000              
643   0000              
644   0000                 IFDEF CLIB_EXIT_STACK_SIZE
645   0000              
646   0000                    defc __clib_exit_stack_size = CLIB_EXIT_STACK_SIZE
647   0000              
648   0000                 ELSE
649   0000              
650   0000                    IFDEF TAR__clib_exit_stack_size
651   0000              
652   0000                       defc __clib_exit_stack_size = TAR__clib_exit_stack_size
653   0000              
654   0000                    ELSE
655   0000              
656   0000                       defc __clib_exit_stack_size = DEF__clib_exit_stack_size
657   0000              
658   0000                    ENDIF
659   0000              
660   0000                 ENDIF
661   0000              
662   0000              
663   0000                 IFDEF CLIB_QUICKEXIT_STACK_SIZE
664   0000              
665   0000                    defc __clib_quickexit_stack_size = CLIB_QUICKEXIT_STACK_SIZE
666   0000              
667   0000                 ELSE
668   0000              
669   0000                    IFDEF TAR__clib_quickexit_stack_size
670   0000              
671   0000                       defc __clib_quickexit_stack_size = TAR__clib_quickexit_stack_size
672   0000              
673   0000                    ELSE
674   0000              
675   0000                       defc __clib_quickexit_stack_size = DEF__clib_quickexit_stack_size
676   0000              
677   0000                    ENDIF
678   0000              
679   0000                 ENDIF
680   0000              
681   0000              
682   0000                 IFDEF CLIB_MALLOC_HEAP_SIZE
683   0000              
684   0000                    defc __clib_malloc_heap_size = CLIB_MALLOC_HEAP_SIZE
685   0000              
686   0000                 ELSE
687   0000              
688   0000                    IFDEF TAR__clib_malloc_heap_size
689   0000              
690   0000                       defc __clib_malloc_heap_size = TAR__clib_malloc_heap_size
691   0000              
692   0000                    ELSE
693   0000              
694   0000                       defc __clib_malloc_heap_size = DEF__clib_malloc_heap_size
695   0000              
696   0000                    ENDIF
697   0000              
698   0000                 ENDIF
699   0000              
700   0000              
701   0000                 IFDEF CLIB_STDIO_HEAP_SIZE
702   0000              
703   0000                    defc __clib_stdio_heap_size = CLIB_STDIO_HEAP_SIZE
704   0000              
705   0000                 ELSE
706   0000              
707   0000                    IFDEF TAR__clib_stdio_heap_size
708   0000              
709   0000                       defc __clib_stdio_heap_size = TAR__clib_stdio_heap_size
710   0000              
711   0000                    ELSE
712   0000              
713   0000                       defc __clib_stdio_heap_size = DEF__clib_stdio_heap_size
714   0000              
715   0000                    ENDIF
716   0000              
717   0000                 ENDIF
718   0000              
719   0000              
720   0000                 IFDEF CLIB_BALLOC_TABLE_SIZE
721   0000              
722   0000                    defc __clib_balloc_table_size = CLIB_BALLOC_TABLE_SIZE
723   0000              
724   0000                 ELSE
725   0000              
726   0000                    IFDEF TAR__clib_balloc_table_size
727   0000              
728   0000                       defc __clib_balloc_table_size = TAR__clib_balloc_table_size
729   0000              
730   0000                    ELSE
731   0000              
732   0000                       defc __clib_balloc_table_size = DEF__clib_balloc_table_size
733   0000              
734   0000                    ENDIF
735   0000              
736   0000                 ENDIF
737   0000              
738   0000              
739   0000                 IFDEF CLIB_FOPEN_MAX
740   0000              
741   0000                    defc __clib_fopen_max = CLIB_FOPEN_MAX
742   0000              
743   0000                 ELSE
744   0000              
745   0000                    IFDEF TAR__clib_fopen_max
746   0000              
747   0000                       defc __clib_fopen_max = TAR__clib_fopen_max
748   0000              
749   0000                    ELSE
750   0000              
751   0000                       defc __clib_fopen_max = DEF__clib_fopen_max
752   0000              
753   0000                    ENDIF
754   0000              
755   0000                 ENDIF
756   0000              
757   0000              
758   0000                 IFDEF CLIB_OPEN_MAX
759   0000              
760   0000                    defc __clib_open_max = CLIB_OPEN_MAX
761   0000              
762   0000                 ELSE
763   0000              
764   0000                    IFDEF TAR__clib_open_max
765   0000              
766   0000                       defc __clib_open_max = TAR__clib_open_max
767   0000              
768   0000                    ELSE
769   0000              
770   0000                       defc __clib_open_max = DEF__clib_open_max
771   0000              
772   0000                    ENDIF
773   0000              
774   0000                 ENDIF
775   0000              
776   0000              
777   0000                 IFDEF CRT_ENABLE_RST
778   0000              
779   0000                    defc __crt_enable_rst = CRT_ENABLE_RST
780   0000              
781   0000                 ELSE
782   0000              
783   0000                    IFDEF TAR__crt_enable_rst
784   0000              
785   0000                       defc __crt_enable_rst = TAR__crt_enable_rst
786   0000              
787   0000                    ELSE
788   0000              
789   0000                       defc __crt_enable_rst = DEF__crt_enable_rst
790   0000              
791   0000                    ENDIF
792   0000              
793   0000                 ENDIF
794   0000              
795   0000              
796   0000                 IFDEF CRT_ENABLE_NMI
797   0000              
798   0000                    defc __crt_enable_nmi = CRT_ENABLE_NMI
799   0000              
800   0000                 ELSE
801   0000              
802   0000                    IFDEF TAR__crt_enable_nmi
803   0000              
804   0000                       defc __crt_enable_nmi = TAR__crt_enable_nmi
805   0000              
806   0000                    ELSE
807   0000              
808   0000                       defc __crt_enable_nmi = DEF__crt_enable_nmi
809   0000              
810   0000                    ENDIF
811   0000              
812   0000                 ENDIF
813   0000              
814   0000                 IFDEF CRT_ENABLE_TRAP
815   0000              
816   0000                    defc __crt_enable_trap = CRT_ENABLE_TRAP
817   0000              
818   0000                 ELSE
819   0000              
820   0000                    IFDEF TAR__crt_enable_trap
821   0000              
822   0000                       defc __crt_enable_trap = TAR__crt_enable_trap
823   0000              
824   0000                    ELSE
825   0000              
826   0000                       defc __crt_enable_trap = DEF__crt_enable_trap
827   0000              
828   0000                    ENDIF
829   0000              
830   0000                 ENDIF
831   0000              
832   0000                 ;; rules that must be processed by m4
833   0000              
834   0000              
835   0000              
836   0000                 IFNDEF __crt_include_driver_instantiation
837   0000                    defc __crt_include_driver_instantiation = 0
838   0000                 ENDIF
839   0000              
840   0000                 ;; public definitions
841   0000              
842   0000                 PUBLIC __clib_fopen_max
843   0000                 PUBLIC __clib_open_max
844   0000              
845   0000                 PUBLIC __exit_stack_size
846   0000                 PUBLIC __quickexit_stack_size
847   0000              
848   0000                 defc __exit_stack_size = __clib_exit_stack_size
849   0000                 defc __quickexit_stack_size = __clib_quickexit_stack_size
850   0000              
851   0000                 IF __Z180
852   0000              
853   0000                    PUBLIC __IO_VECTOR_BASE
854   0000              
855   0000                    IF __crt_io_vector_base < 0
856   0000              
857   0000                       IF (__crt_org_vector_table < 0)
858   0000              
859   0000                          IF (-__crt_org_vector_table) & 0x1f
860   0000              
861   0000                             "Cannot place __IO_VECTOR_BASE at start of interrupt vector table"
862   0000              
863   0000                          ELSE
864   0000              
865   0000                             defc __IO_VECTOR_BASE = (-__crt_org_vector_table) & 0xe0
866   0000              
867   0000                          ENDIF
868   0000              
869   0000                       ELSE
870   0000              
871   0000                          IF __crt_org_vector_table & 0x1f
872   0000              
873   0000                             "Cannot place __IO_VECTOR_BASE at start of interrupt vector table"
874   0000              
875   0000                          ELSE
876   0000              
877   0000                             defc __IO_VECTOR_BASE = __crt_org_vector_table & 0xe0
878   0000              
879   0000                          ENDIF
880   0000              
881   0000                       ENDIF
882   0000              
883   0000                    ELSE
884   0000              
885   0000                       IF __crt_io_vector_base & 0x1f
886   0000              
887   0000                          "Illegal __IO_VECTOR_BASE"
888   0000              
889   0000                       ELSE
890   0000              
891   0000                          defc __IO_VECTOR_BASE = __crt_io_vector_base & 0xe0
892   0000              
893   0000                       ENDIF
894   0000              
895   0000                    ENDIF
896   0000              
897   0000                 ENDIF
898   0000              
899   0000              ;; end crt rules ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
900   0000              
901   0000              
902   0000              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
903   0000              ;; crt rules for zx ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
904   0000              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
905   0000              
906   0000                 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
907   0000                 ; Define Memory Banks
908   0000                 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
909   0000              
910   0000              
911   0000                 IFNDEF CRT_ORG_BANK_0
912   0000                    defc CRT_ORG_BANK_0 = 0xc000
913   0000                 ENDIF
914   0000              
915   0000                 IFNDEF CRT_ORG_BANK_1
916   0000                    defc CRT_ORG_BANK_1 = 0xc000
917   0000                 ENDIF
918   0000              
919   0000                 IFNDEF CRT_ORG_BANK_2
920   0000                    defc CRT_ORG_BANK_2 = 0xc000
921   0000                 ENDIF
922   0000              
923   0000                 IFNDEF CRT_ORG_BANK_3
924   0000                    defc CRT_ORG_BANK_3 = 0xc000
925   0000                 ENDIF
926   0000              
927   0000                 IFNDEF CRT_ORG_BANK_4
928   0000                    defc CRT_ORG_BANK_4 = 0xc000
929   0000                 ENDIF
930   0000              
931   0000                 IFNDEF CRT_ORG_BANK_5
932   0000                    defc CRT_ORG_BANK_5 = 0xc000
933   0000                 ENDIF
934   0000              
935   0000                 IFNDEF CRT_ORG_BANK_6
936   0000                    defc CRT_ORG_BANK_6 = 0xc000
937   0000                 ENDIF
938   0000              
939   0000                 IFNDEF CRT_ORG_BANK_7
940   0000                    defc CRT_ORG_BANK_7 = 0xc000
941   0000                 ENDIF
942   0000              
943   0000              
944   0000              
945   0000                 IFNDEF CRT_ORG_DIV_0
946   0000                    defc CRT_ORG_DIV_0 = 0x2000
947   0000                 ENDIF
948   0000              
949   0000                 IFNDEF CRT_ORG_DIV_1
950   0000                    defc CRT_ORG_DIV_1 = 0x2000
951   0000                 ENDIF
952   0000              
953   0000                 IFNDEF CRT_ORG_DIV_2
954   0000                    defc CRT_ORG_DIV_2 = 0x2000
955   0000                 ENDIF
956   0000              
957   0000                 IFNDEF CRT_ORG_DIV_3
958   0000                    defc CRT_ORG_DIV_3 = 0x2000
959   0000                 ENDIF
960   0000              
961   0000                 IFNDEF CRT_ORG_DIV_4
962   0000                    defc CRT_ORG_DIV_4 = 0x2000
963   0000                 ENDIF
964   0000              
965   0000                 IFNDEF CRT_ORG_DIV_5
966   0000                    defc CRT_ORG_DIV_5 = 0x2000
967   0000                 ENDIF
968   0000              
969   0000                 IFNDEF CRT_ORG_DIV_6
970   0000                    defc CRT_ORG_DIV_6 = 0x2000
971   0000                 ENDIF
972   0000              
973   0000                 IFNDEF CRT_ORG_DIV_7
974   0000                    defc CRT_ORG_DIV_7 = 0x2000
975   0000                 ENDIF
976   0000              
977   0000                 IFNDEF CRT_ORG_DIV_8
978   0000                    defc CRT_ORG_DIV_8 = 0x2000
979   0000                 ENDIF
980   0000              
981   0000                 IFNDEF CRT_ORG_DIV_9
982   0000                    defc CRT_ORG_DIV_9 = 0x2000
983   0000                 ENDIF
984   0000              
985   0000                 IFNDEF CRT_ORG_DIV_10
986   0000                    defc CRT_ORG_DIV_10 = 0x2000
987   0000                 ENDIF
988   0000              
989   0000                 IFNDEF CRT_ORG_DIV_11
990   0000                    defc CRT_ORG_DIV_11 = 0x2000
991   0000                 ENDIF
992   0000              
993   0000                 IFNDEF CRT_ORG_DIV_12
994   0000                    defc CRT_ORG_DIV_12 = 0x2000
995   0000                 ENDIF
996   0000              
997   0000                 IFNDEF CRT_ORG_DIV_13
998   0000                    defc CRT_ORG_DIV_13 = 0x2000
999   0000                 ENDIF
1000  0000              
1001  0000                 IFNDEF CRT_ORG_DIV_14
1002  0000                    defc CRT_ORG_DIV_14 = 0x2000
1003  0000                 ENDIF
1004  0000              
1005  0000                 IFNDEF CRT_ORG_DIV_15
1006  0000                    defc CRT_ORG_DIV_15 = 0x2000
1007  0000                 ENDIF
1008  0000              
1009  0000                 IFNDEF CRT_ORG_DIV_16
1010  0000                    defc CRT_ORG_DIV_16 = 0x2000
1011  0000                 ENDIF
1012  0000              
1013  0000                 IFNDEF CRT_ORG_DIV_17
1014  0000                    defc CRT_ORG_DIV_17 = 0x2000
1015  0000                 ENDIF
1016  0000              
1017  0000                 IFNDEF CRT_ORG_DIV_18
1018  0000                    defc CRT_ORG_DIV_18 = 0x2000
1019  0000                 ENDIF
1020  0000              
1021  0000                 IFNDEF CRT_ORG_DIV_19
1022  0000                    defc CRT_ORG_DIV_19 = 0x2000
1023  0000                 ENDIF
1024  0000              
1025  0000                 IFNDEF CRT_ORG_DIV_20
1026  0000                    defc CRT_ORG_DIV_20 = 0x2000
1027  0000                 ENDIF
1028  0000              
1029  0000                 IFNDEF CRT_ORG_DIV_21
1030  0000                    defc CRT_ORG_DIV_21 = 0x2000
1031  0000                 ENDIF
1032  0000              
1033  0000                 IFNDEF CRT_ORG_DIV_22
1034  0000                    defc CRT_ORG_DIV_22 = 0x2000
1035  0000                 ENDIF
1036  0000              
1037  0000                 IFNDEF CRT_ORG_DIV_23
1038  0000                    defc CRT_ORG_DIV_23 = 0x2000
1039  0000                 ENDIF
1040  0000              
1041  0000                 IFNDEF CRT_ORG_DIV_24
1042  0000                    defc CRT_ORG_DIV_24 = 0x2000
1043  0000                 ENDIF
1044  0000              
1045  0000                 IFNDEF CRT_ORG_DIV_25
1046  0000                    defc CRT_ORG_DIV_25 = 0x2000
1047  0000                 ENDIF
1048  0000              
1049  0000                 IFNDEF CRT_ORG_DIV_26
1050  0000                    defc CRT_ORG_DIV_26 = 0x2000
1051  0000                 ENDIF
1052  0000              
1053  0000                 IFNDEF CRT_ORG_DIV_27
1054  0000                    defc CRT_ORG_DIV_27 = 0x2000
1055  0000                 ENDIF
1056  0000              
1057  0000                 IFNDEF CRT_ORG_DIV_28
1058  0000                    defc CRT_ORG_DIV_28 = 0x2000
1059  0000                 ENDIF
1060  0000              
1061  0000                 IFNDEF CRT_ORG_DIV_29
1062  0000                    defc CRT_ORG_DIV_29 = 0x2000
1063  0000                 ENDIF
1064  0000              
1065  0000                 IFNDEF CRT_ORG_DIV_30
1066  0000                    defc CRT_ORG_DIV_30 = 0x2000
1067  0000                 ENDIF
1068  0000              
1069  0000                 IFNDEF CRT_ORG_DIV_31
1070  0000                    defc CRT_ORG_DIV_31 = 0x2000
1071  0000                 ENDIF
1072  0000              
1073  0000                 IFNDEF CRT_ORG_DIV_32
1074  0000                    defc CRT_ORG_DIV_32 = 0x2000
1075  0000                 ENDIF
1076  0000              
1077  0000                 IFNDEF CRT_ORG_DIV_33
1078  0000                    defc CRT_ORG_DIV_33 = 0x2000
1079  0000                 ENDIF
1080  0000              
1081  0000                 IFNDEF CRT_ORG_DIV_34
1082  0000                    defc CRT_ORG_DIV_34 = 0x2000
1083  0000                 ENDIF
1084  0000              
1085  0000                 IFNDEF CRT_ORG_DIV_35
1086  0000                    defc CRT_ORG_DIV_35 = 0x2000
1087  0000                 ENDIF
1088  0000              
1089  0000                 IFNDEF CRT_ORG_DIV_36
1090  0000                    defc CRT_ORG_DIV_36 = 0x2000
1091  0000                 ENDIF
1092  0000              
1093  0000                 IFNDEF CRT_ORG_DIV_37
1094  0000                    defc CRT_ORG_DIV_37 = 0x2000
1095  0000                 ENDIF
1096  0000              
1097  0000                 IFNDEF CRT_ORG_DIV_38
1098  0000                    defc CRT_ORG_DIV_38 = 0x2000
1099  0000                 ENDIF
1100  0000              
1101  0000                 IFNDEF CRT_ORG_DIV_39
1102  0000                    defc CRT_ORG_DIV_39 = 0x2000
1103  0000                 ENDIF
1104  0000              
1105  0000                 IFNDEF CRT_ORG_DIV_40
1106  0000                    defc CRT_ORG_DIV_40 = 0x2000
1107  0000                 ENDIF
1108  0000              
1109  0000                 IFNDEF CRT_ORG_DIV_41
1110  0000                    defc CRT_ORG_DIV_41 = 0x2000
1111  0000                 ENDIF
1112  0000              
1113  0000                 IFNDEF CRT_ORG_DIV_42
1114  0000                    defc CRT_ORG_DIV_42 = 0x2000
1115  0000                 ENDIF
1116  0000              
1117  0000                 IFNDEF CRT_ORG_DIV_43
1118  0000                    defc CRT_ORG_DIV_43 = 0x2000
1119  0000                 ENDIF
1120  0000              
1121  0000                 IFNDEF CRT_ORG_DIV_44
1122  0000                    defc CRT_ORG_DIV_44 = 0x2000
1123  0000                 ENDIF
1124  0000              
1125  0000                 IFNDEF CRT_ORG_DIV_45
1126  0000                    defc CRT_ORG_DIV_45 = 0x2000
1127  0000                 ENDIF
1128  0000              
1129  0000                 IFNDEF CRT_ORG_DIV_46
1130  0000                    defc CRT_ORG_DIV_46 = 0x2000
1131  0000                 ENDIF
1132  0000              
1133  0000                 IFNDEF CRT_ORG_DIV_47
1134  0000                    defc CRT_ORG_DIV_47 = 0x2000
1135  0000                 ENDIF
1136  0000              
1137  0000                 IFNDEF CRT_ORG_DIV_48
1138  0000                    defc CRT_ORG_DIV_48 = 0x2000
1139  0000                 ENDIF
1140  0000              
1141  0000                 IFNDEF CRT_ORG_DIV_49
1142  0000                    defc CRT_ORG_DIV_49 = 0x2000
1143  0000                 ENDIF
1144  0000              
1145  0000                 IFNDEF CRT_ORG_DIV_50
1146  0000                    defc CRT_ORG_DIV_50 = 0x2000
1147  0000                 ENDIF
1148  0000              
1149  0000                 IFNDEF CRT_ORG_DIV_51
1150  0000                    defc CRT_ORG_DIV_51 = 0x2000
1151  0000                 ENDIF
1152  0000              
1153  0000                 IFNDEF CRT_ORG_DIV_52
1154  0000                    defc CRT_ORG_DIV_52 = 0x2000
1155  0000                 ENDIF
1156  0000              
1157  0000                 IFNDEF CRT_ORG_DIV_53
1158  0000                    defc CRT_ORG_DIV_53 = 0x2000
1159  0000                 ENDIF
1160  0000              
1161  0000                 IFNDEF CRT_ORG_DIV_54
1162  0000                    defc CRT_ORG_DIV_54 = 0x2000
1163  0000                 ENDIF
1164  0000              
1165  0000                 IFNDEF CRT_ORG_DIV_55
1166  0000                    defc CRT_ORG_DIV_55 = 0x2000
1167  0000                 ENDIF
1168  0000              
1169  0000                 IFNDEF CRT_ORG_DIV_56
1170  0000                    defc CRT_ORG_DIV_56 = 0x2000
1171  0000                 ENDIF
1172  0000              
1173  0000                 IFNDEF CRT_ORG_DIV_57
1174  0000                    defc CRT_ORG_DIV_57 = 0x2000
1175  0000                 ENDIF
1176  0000              
1177  0000                 IFNDEF CRT_ORG_DIV_58
1178  0000                    defc CRT_ORG_DIV_58 = 0x2000
1179  0000                 ENDIF
1180  0000              
1181  0000                 IFNDEF CRT_ORG_DIV_59
1182  0000                    defc CRT_ORG_DIV_59 = 0x2000
1183  0000                 ENDIF
1184  0000              
1185  0000                 IFNDEF CRT_ORG_DIV_60
1186  0000                    defc CRT_ORG_DIV_60 = 0x2000
1187  0000                 ENDIF
1188  0000              
1189  0000                 IFNDEF CRT_ORG_DIV_61
1190  0000                    defc CRT_ORG_DIV_61 = 0x2000
1191  0000                 ENDIF
1192  0000              
1193  0000                 IFNDEF CRT_ORG_DIV_62
1194  0000                    defc CRT_ORG_DIV_62 = 0x2000
1195  0000                 ENDIF
1196  0000              
1197  0000                 IFNDEF CRT_ORG_DIV_63
1198  0000                    defc CRT_ORG_DIV_63 = 0x2000
1199  0000                 ENDIF
1200  0000              
1201  0000              
1202  0000                 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1203  0000                 ; ESXDOS dotx commands
1204  0000                 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1205  0000              
1206  0000                 IFNDEF CRT_ORG_MAIN
1207  0000                    defc CRT_ORG_MAIN = 0x8000
1208  0000                 ENDIF
1209  0000              
1210  0000                 ; DOTX_RAMTOP can be set to alter ramtop check
1211  0000              
1212  0000                 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1213  0000                 ; Input Terminal Settings
1214  0000                 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1215  0000              
1216  0000                 IFNDEF CRT_ITERM_TERMINAL_FLAGS
1217  0000                    defc CRT_ITERM_TERMINAL_FLAGS = 0x03b0
1218  0000                 ENDIF
1219  0000              
1220  0000                 ; buffer size must be available to m4 (requires special case in zcc)
1221  0000              
1222  0000              
1223  0000              
1224  0000                 IFNDEF CRT_ITERM_EDIT_BUFFER_SIZE
1225  0000                    defc CRT_ITERM_EDIT_BUFFER_SIZE = 64
1226  0000                 ENDIF
1227  0000              
1228  0000                 ;
1229  0000                 ; LASTK Input Terminal Only
1230  0000                 ;
1231  0000              
1232  0000                 IFNDEF CRT_ITERM_LASTK_ADDRESS
1233  0000                    defc CRT_ITERM_LASTK_ADDRESS = 23560
1234  0000                 ENDIF
1235  0000              
1236  0000                 ;
1237  0000                 ; INKEY Input Terminal Only (used by supplied CRTs)
1238  0000                 ;
1239  0000              
1240  0000                 IFNDEF CRT_ITERM_INKEY_DEBOUNCE
1241  0000                    defc CRT_ITERM_INKEY_DEBOUNCE = 1
1242  0000                 ENDIF
1243  0000              
1244  0000                 IFNDEF CRT_ITERM_INKEY_REPEAT_START
1245  0000                    defc CRT_ITERM_INKEY_REPEAT_START = 500
1246  0000                 ENDIF
1247  0000              
1248  0000                 IFNDEF CRT_ITERM_INKEY_REPEAT_RATE
1249  0000                    defc CRT_ITERM_INKEY_REPEAT_RATE = 15
1250  0000                 ENDIF
1251  0000              
1252  0000                 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1253  0000                 ; Output Terminal Settings
1254  0000                 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1255  0000              
1256  0000                 IFNDEF CRT_OTERM_TERMINAL_FLAGS
1257  0000                    defc CRT_OTERM_TERMINAL_FLAGS = 0x2370
1258  0000                 ENDIF
1259  0000              
1260  0000                 ;
1261  0000                 ; Terminal Window Dimensions in Characters
1262  0000                 ;
1263  0000              
1264  0000                 IFNDEF CRT_OTERM_WINDOW_X
1265  0000                    defc CRT_OTERM_WINDOW_X = 0           ; multiplied by two in 64 col terminals
1266  0000                 ENDIF
1267  0000              
1268  0000                 IFNDEF CRT_OTERM_WINDOW_WIDTH
1269  0000                    defc CRT_OTERM_WINDOW_WIDTH = 32      ; multiplied by two in 64 col terminals
1270  0000                 ENDIF
1271  0000              
1272  0000                 IFNDEF CRT_OTERM_WINDOW_Y
1273  0000                    defc CRT_OTERM_WINDOW_Y = 0
1274  0000                 ENDIF
1275  0000              
1276  0000                 IFNDEF CRT_OTERM_WINDOW_HEIGHT
1277  0000                    defc CRT_OTERM_WINDOW_HEIGHT = 24
1278  0000                 ENDIF
1279  0000              
1280  0000                 ;
1281  0000                 ; Terminal Text Colour
1282  0000                 ;
1283  0000              
1284  0000                 IFNDEF CRT_OTERM_TEXT_COLOR
1285  0000                    defc CRT_OTERM_TEXT_COLOR = 0x38
1286  0000                 ENDIF
1287  0000              
1288  0000                 IFNDEF CRT_OTERM_TEXT_COLOR_MASK
1289  0000                    defc CRT_OTERM_TEXT_COLOR_MASK = 0x00
1290  0000                 ENDIF
1291  0000              
1292  0000                 IFNDEF CRT_OTERM_BACKGROUND_COLOR
1293  0000                    defc CRT_OTERM_BACKGROUND_COLOR = 0x38
1294  0000                 ENDIF
1295  0000              
1296  0000                 ;
1297  0000                 ; FZX Proportional Font Output Terminals
1298  0000                 ;
1299  0000              
1300  0000                 ; The terminal window contains the paper into
1301  0000                 ; which fzx characters are drawn
1302  0000              
1303  0000                 IFNDEF CRT_OTERM_FZX_PAPER_X
1304  0000                    defc CRT_OTERM_FZX_PAPER_X = 0
1305  0000                 ENDIF
1306  0000              
1307  0000                 IFNDEF CRT_OTERM_FZX_PAPER_WIDTH
1308  0000                    defc CRT_OTERM_FZX_PAPER_WIDTH = 256
1309  0000                 ENDIF
1310  0000              
1311  0000                 IFNDEF CRT_OTERM_FZX_PAPER_Y
1312  0000                    defc CRT_OTERM_FZX_PAPER_Y = 0
1313  0000                 ENDIF
1314  0000              
1315  0000                 IFNDEF CRT_OTERM_FZX_PAPER_HEIGHT
1316  0000                    defc CRT_OTERM_FZX_PAPER_HEIGHT = 192
1317  0000                 ENDIF
1318  0000              
1319  0000                 ; draw mode must be available to m4 (requires special case in zcc)
1320  0000                 ; 0 = OR, 1 = XOR, 2 = CLEAR
1321  0000              
1322  0000              
1323  0000              
1324  0000                 IFNDEF CRT_OTERM_FZX_DRAW_MODE
1325  0000                    defc CRT_OTERM_FZX_DRAW_MODE = 1
1326  0000                 ENDIF
1327  0000              
1328  0000                 ; 0 = single, 1 = 1.5, 2 = double
1329  0000              
1330  0000                 IFNDEF CRT_OTERM_FZX_LINE_SPACING
1331  0000                    defc CRT_OTERM_FZX_LINE_SPACING = 0
1332  0000                 ENDIF
1333  0000              
1334  0000                 ; left margin in pixels to allow kerning
1335  0000              
1336  0000                 IFNDEF CRT_OTERM_FZX_LEFT_MARGIN
1337  0000                    defc CRT_OTERM_FZX_LEFT_MARGIN = 3
1338  0000                 ENDIF
1339  0000              
1340  0000                 ; space character width expansion in pixels
1341  0000              
1342  0000                 IFNDEF CRT_OTERM_FZX_SPACE_EXPAND
1343  0000                    defc CRT_OTERM_FZX_SPACE_EXPAND = 0
1344  0000                 ENDIF
1345  0000              
1346  0000                 ;
1347  0000                 ; FONT SELECTION
1348  0000                 ; use pragam redirect to change font
1349  0000                 ;
1350  0000                 ; #pragam redirect CRT_OTERM_FONT_8X8 = _font_8x8_rom        ; 32-col font definition in rom
1351  0000                 ; #pragma redirect CRT_OTERM_FONT_8X8 = _font_8x8_zx_system  ; 32-col font
1352  0000                 ; #pragma redirect CRT_OTERM_FONT_4X8 = _font_4x8_default    ; 64-col font
1353  0000                 ; #pragma redirect CRT_OTERM_FONT_FZX = _ff_ind_Termino      ; fzx proportional font
1354  0000              
1355  0000              ;; end crt rules ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1356  0000              
1357  0000              
1358  0000              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1359  0000              ;; SET UP MEMORY MODEL ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1360  0000              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1361  0000              
1362  0000              
1363  0000              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1364  0000              ;; memory map ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1365  0000              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1366  0000              
1367  0000              IF __MMAP = -1
1368  0000              
1369  0000                 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1370  0000                 ;; user supplied memory map ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1371  0000                 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1372  0000              
1373  0000              
1374  0000              
1375  0000                 SECTION UNASSIGNED
1376  0000                 org 0
1377  0000              
1378  0000              ENDIF
1379  0000              
1380  0000              IF __MMAP = 0
1381  0000              
1382  0000                 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1383  0000                 ;; standard CODE/DATA/BSS memory map ;;;;;;;;;;;;;;;;;;;;;;;
1384  0000                 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1385  0000              
1386  0000                 INCLUDE "../crt_memory_model_z80.inc"
1     0000              
2     0000              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
3     0000              ;; memory model ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
4     0000              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
5     0000              
6     0000              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
7     0000              
8     0000              SECTION CODE
9     0000              
10    0000              org __crt_org_code
11    0000              
12    0000              IF (__crt_org_vector_table = -0x80) || (__crt_org_vector_table = -0x100)
13    0000              
14    0000              section interrupt_vectors
15    0000              section code_crt_start
16    0000              
17    0000              ENDIF
18    0000              
19    0000              section code_crt_init
20    0000              section code_crt_main
21    0000              section code_crt_exit
22    0000              section code_crt_return
23    0000              section code_crt_common
24    0000              
25    0000              IF (__crt_org_vector_table) && (__crt_org_vector_table != -0x80) && (__crt_org_vector_table != -0x100)
26    0000              
27    0000              section interrupt_vectors
28    0000              
29    0000              ENDIF
30    0000              
31    0000              section code_driver
32    0000              section code_font
33    0000              section code_clib
34    0000                include "../../clib_code.inc"
1     0000              
2     0000              ;; clib code segments ;;;;;;;;;
3     0000              
4     0000              section code_adt_b_array
5     0000              section code_adt_b_vector
6     0000              section code_adt_ba_priority_queue
7     0000              section code_adt_ba_stack
8     0000              section code_adt_bv_priority_queue
9     0000              section code_adt_bv_stack
10    0000              section code_adt_p_forward_list
11    0000              section code_adt_p_forward_list_alt
12    0000              section code_adt_p_list
13    0000              section code_adt_p_queue
14    0000              section code_adt_p_stack
15    0000              section code_adt_w_array
16    0000              section code_adt_w_vector
17    0000              section code_adt_wa_priority_queue
18    0000              section code_adt_wa_stack
19    0000              section code_adt_wv_priority_queue
20    0000              section code_adt_wv_stack
21    0000              section code_alloc_balloc
22    0000              section code_alloc_malloc
23    0000              section code_alloc_obstack
24    0000              section code_arch
25    0000              section code_bifrost_h
26    0000              section code_bifrost_l
27    0000              section code_bifrost2
28    0000              section code_compress_aplib
29    0000              section code_compress_zx7
30    0000              section code_ctype
31    0000              section code_driver_general
32    0000              section code_driver_character_input
33    0000              section code_driver_character_output
34    0000              section code_driver_memstream
35    0000              section code_driver_terminal_input
36    0000              section code_driver_terminal_output
37    0000              section code_driver_tty
38    0000              section code_env
39    0000              section code_error
40    0000              section code_esxdos
41    0000              section code_fcntl
42    0000              section code_font_fzx
43    0000              section code_fp_am9511
44    0000              section code_fp_genmath
45    0000              section code_fp_math48
46    0000              section code_fp_math32
47    0000              section code_fp_math16
48    0000              section code_im2
49    0000              section code_input
50    0000              section code_inttypes
51    0000              section code_l
52    0000              section code_l_sccz80
53    0000              section code_l_sdcc
54    0000              section code_locale
55    0000              section code_math
56    0000              section code_network
57    0000              section code_nirvanam
58    0000              section code_nirvanap
59    0000              section code_PSGlib
60    0000              section code_setjmp
61    0000              section code_SMSlib
62    0000              section code_sound_bit
63    0000              section code_sound_ay
64    0000              section code_stdio
65    0000              section code_stdlib
66    0000              section code_string
67    0000              section code_temp_sp1
68    0000              section code_threads
69    0000              section code_threads_mutex
70    0000              section code_time
71    0000              section code_z180
72    0000              section code_z80
73    0000              
74    0000              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
75    0000              
35    0000              section code_lib
36    0000              section code_compiler
37    0000              section code_user
38    0000              
39    0000              section rodata_align_256
40    0000              align 256
41    0000              
42    0000              section rodata_align_128
43    0000              align 128
44    0000              
45    0000              section rodata_align_64
46    0000              align 64
47    0000              
48    0000              section rodata_align_32
49    0000              align 32
50    0000              
51    0000              section rodata_align_16
52    0000              align 16
53    0000              
54    0000              section rodata_align_8
55    0000              align 8
56    0000              
57    0000              section rodata_align_4
58    0000              align 4
59    0000              
60    0000              section rodata_align_2
61    0000              align 2
62    0000              
63    0000              section rodata_driver
64    0000              section rodata_font
65    0000              section rodata_clib
66    0000                include "../../clib_rodata.inc"
1     0000              
2     0000              ;; clib rodata segments ;;;;;;;
3     0000              
4     0000              section rodata_align_256
5     0000              section rodata_align_128
6     0000              section rodata_align_64
7     0000              section rodata_align_32
8     0000              section rodata_align_16
9     0000              section rodata_align_8
10    0000              section rodata_align_4
11    0000              section rodata_align_2
12    0000              section rodata_arch
13    0000              section rodata_env
14    0000              section rodata_error_strings
15    0000              section rodata_error_string_end
16    0000  00          defb 0
17    0001              section rodata_fcntl
18    0000              section rodata_font_4x8
19    0000              section rodata_font_8x8
20    0000              section rodata_font_fzx
21    0000              section rodata_fp_math32
22    0000              section rodata_fp_math16
23    0000              section rodata_input
24    0000              section rodata_SMSlib
25    0000              section rodata_sound_ay
26    0000              section rodata_sound_bit
27    0000              section rodata_stdio
28    0000              section rodata_stdlib
29    0000              
30    0000              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
31    0000              
67    0000                ;;section rodata_error_strings
68    0000                ;;section rodata_error_string_end
69    0000                ;;defb 0
70    0000              section rodata_lib
71    0000              section rodata_compiler
72    0000              section rodata_user
73    0000              
74    0000              SECTION CODE_END
75    0000              
76    0000              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
77    0000              
78    0000              SECTION DATA
79    0000              
80    0000              IF __crt_org_data
81    0000              
82    0000                 org __crt_org_data
83    0000              
84    0000              ELSE
85    0000              
86    0000                 IF __crt_model
87    0000              
88    0000                    "DATA section address must be specified for rom models"
89    0000              
90    0000                 ENDIF
91    0000              
92    0000              ENDIF
93    0000              
94    0000              section data_align_256
95    0000              align 256
96    0000              
97    0000              section data_align_128
98    0000              align 128
99    0000              
100   0000              section data_align_64
101   0000              align 64
102   0000              
103   0000              section data_align_32
104   0000              align 32
105   0000              
106   0000              section data_align_16
107   0000              align 16
108   0000              
109   0000              section data_align_8
110   0000              align 8
111   0000              
112   0000              section data_align_4
113   0000              align 4
114   0000              
115   0000              section data_align_2
116   0000              align 2
117   0000              
118   0000              section smc_jump_vectors
119   0000              section smc_driver
120   0000              section smc_font
121   0000              section smc_clib
122   0000                include "../../clib_smc.inc"
1     0000              
2     0000              ;; clib self-modifying code ;;;
3     0000              
4     0000              section smc_fcntl
5     0000              section smc_l
6     0000              section smc_sound_bit
7     0000              section smc_sound_ay
8     0000              
9     0000              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
10    0000              
123   0000              section smc_lib
124   0000              section smc_compiler
125   0000              section smc_user
126   0000              
127   0000              section data_driver
128   0000              section data_font
129   0000              section data_clib
130   0000                include "../../clib_data.inc"
1     0000              
2     0000              ;; clib data segments ;;;;;;;;;
3     0000              
4     0000              section data_alloc_balloc
5     0000              section data_alloc_malloc
6     0000              section data_arch
7     0000              section data_fcntl
8     0000              section data_fcntl_stdio_heap_head
9     0000              section data_fcntl_stdio_heap_body
10    0000              section data_fcntl_stdio_heap_tail
11    0000              section data_fcntl_fdtable_body
12    0000              section data_PSGlib
13    0000              section data_SMSlib
14    0000              section data_sound_bit
15    0000              section data_sound_ay
16    0000              section data_stdio
17    0000              section data_stdlib
18    0000              section data_threads
19    0000              
20    0000              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
21    0000              
131   0000                ;;section data_fcntl_stdio_heap_head
132   0000                ;;section data_fcntl_stdio_heap_body
133   0000                ;;section data_fcntl_stdio_heap_tail
134   0000                ;;section data_fcntl_fdtable_body
135   0000              section data_lib
136   0000              section data_compiler
137   0000              section data_user
138   0000              
139   0000              SECTION DATA_END
140   0000              
141   0000              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
142   0000              
143   0000              SECTION BSS
144   0000              
145   0000              IF __crt_org_bss
146   0000              
147   0000                 org __crt_org_bss
148   0000              
149   0000              ELSE
150   0000              
151   0000                 IF __crt_model
152   0000              
153   0000                    org -1
154   0000              
155   0000                 ENDIF
156   0000              
157   0000              ENDIF
158   0000              
159   0000              section bss_align_256
160   0000              align 256
161   0000              
162   0000              section bss_align_128
163   0000              align 128
164   0000              
165   0000              section bss_align_64
166   0000              align 64
167   0000              
168   0000              section bss_align_32
169   0000              align 32
170   0000              
171   0000              section bss_align_16
172   0000              align 16
173   0000              
174   0000              section bss_align_8
175   0000              align 8
176   0000              
177   0000              section bss_align_4
178   0000              align 4
179   0000              
180   0000              section bss_align_2
181   0000              align 2
182   0000              
183   0000              section bss_driver
184   0000              section bss_font
185   0000              section bss_clib
186   0000                include "../../clib_bss.inc"
1     0000              
2     0000              ;; clib bss segments ;;;;;;;;;;
3     0000              
4     0000              section bss_arch
5     0000              section bss_alloc_balloc
6     0000              section bss_alloc_malloc
7     0000              section bss_compress_aplib
8     0000              section bss_error
9     0000              section bss_env
10    0000              section bss_esxdos
11    0000              section bss_fcntl
12    0000              section bss_input
13    0000              section bss_PSGlib
14    0000              section bss_SMSlib
15    0000              section bss_sound_bit
16    0000              section bss_sound_ay
17    0000              section bss_stdio
18    0000              section bss_stdlib
19    0000              section bss_string
20    0000              
21    0000              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
22    0000              
187   0000              section bss_lib
188   0000              section bss_compiler
189   0000              section bss_user
190   0000              
191   0000              section BSS_UNINITIALIZED
192   0000              SECTION BSS_END
193   0000              
194   0000              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
195   0000              
196   0000              IF (__crt_org_vector_table = 0)
197   0000              
198   0000              section interrupt_vectors
199   0000              org 0
200   0000              
201   0000              ENDIF
202   0000              
203   0000              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
204   0000              
1387  0000              
1388  0000              
1389  0000                 SECTION BANK_0
1390  0000                 org CRT_ORG_BANK_0
1391  0000              
1392  0000                 SECTION BANK_1
1393  0000                 org CRT_ORG_BANK_1
1394  0000              
1395  0000                 SECTION BANK_2
1396  0000                 org CRT_ORG_BANK_2
1397  0000              
1398  0000                 SECTION BANK_3
1399  0000                 org CRT_ORG_BANK_3
1400  0000              
1401  0000                 SECTION BANK_4
1402  0000                 org CRT_ORG_BANK_4
1403  0000              
1404  0000                 SECTION BANK_5
1405  0000                 org CRT_ORG_BANK_5
1406  0000              
1407  0000                 SECTION BANK_6
1408  0000                 org CRT_ORG_BANK_6
1409  0000              
1410  0000                 SECTION BANK_7
1411  0000                 org CRT_ORG_BANK_7
1412  0000              
1413  0000              
1414  0000              
1415  0000                 SECTION DIV_0
1416  0000                 org CRT_ORG_DIV_0
1417  0000              
1418  0000                 SECTION DIV_1
1419  0000                 org CRT_ORG_DIV_1
1420  0000              
1421  0000                 SECTION DIV_2
1422  0000                 org CRT_ORG_DIV_2
1423  0000              
1424  0000                 SECTION DIV_3
1425  0000                 org CRT_ORG_DIV_3
1426  0000              
1427  0000                 SECTION DIV_4
1428  0000                 org CRT_ORG_DIV_4
1429  0000              
1430  0000                 SECTION DIV_5
1431  0000                 org CRT_ORG_DIV_5
1432  0000              
1433  0000                 SECTION DIV_6
1434  0000                 org CRT_ORG_DIV_6
1435  0000              
1436  0000                 SECTION DIV_7
1437  0000                 org CRT_ORG_DIV_7
1438  0000              
1439  0000                 SECTION DIV_8
1440  0000                 org CRT_ORG_DIV_8
1441  0000              
1442  0000                 SECTION DIV_9
1443  0000                 org CRT_ORG_DIV_9
1444  0000              
1445  0000                 SECTION DIV_10
1446  0000                 org CRT_ORG_DIV_10
1447  0000              
1448  0000                 SECTION DIV_11
1449  0000                 org CRT_ORG_DIV_11
1450  0000              
1451  0000                 SECTION DIV_12
1452  0000                 org CRT_ORG_DIV_12
1453  0000              
1454  0000                 SECTION DIV_13
1455  0000                 org CRT_ORG_DIV_13
1456  0000              
1457  0000                 SECTION DIV_14
1458  0000                 org CRT_ORG_DIV_14
1459  0000              
1460  0000                 SECTION DIV_15
1461  0000                 org CRT_ORG_DIV_15
1462  0000              
1463  0000                 SECTION DIV_16
1464  0000                 org CRT_ORG_DIV_16
1465  0000              
1466  0000                 SECTION DIV_17
1467  0000                 org CRT_ORG_DIV_17
1468  0000              
1469  0000                 SECTION DIV_18
1470  0000                 org CRT_ORG_DIV_18
1471  0000              
1472  0000                 SECTION DIV_19
1473  0000                 org CRT_ORG_DIV_19
1474  0000              
1475  0000                 SECTION DIV_20
1476  0000                 org CRT_ORG_DIV_20
1477  0000              
1478  0000                 SECTION DIV_21
1479  0000                 org CRT_ORG_DIV_21
1480  0000              
1481  0000                 SECTION DIV_22
1482  0000                 org CRT_ORG_DIV_22
1483  0000              
1484  0000                 SECTION DIV_23
1485  0000                 org CRT_ORG_DIV_23
1486  0000              
1487  0000                 SECTION DIV_24
1488  0000                 org CRT_ORG_DIV_24
1489  0000              
1490  0000                 SECTION DIV_25
1491  0000                 org CRT_ORG_DIV_25
1492  0000              
1493  0000                 SECTION DIV_26
1494  0000                 org CRT_ORG_DIV_26
1495  0000              
1496  0000                 SECTION DIV_27
1497  0000                 org CRT_ORG_DIV_27
1498  0000              
1499  0000                 SECTION DIV_28
1500  0000                 org CRT_ORG_DIV_28
1501  0000              
1502  0000                 SECTION DIV_29
1503  0000                 org CRT_ORG_DIV_29
1504  0000              
1505  0000                 SECTION DIV_30
1506  0000                 org CRT_ORG_DIV_30
1507  0000              
1508  0000                 SECTION DIV_31
1509  0000                 org CRT_ORG_DIV_31
1510  0000              
1511  0000                 SECTION DIV_32
1512  0000                 org CRT_ORG_DIV_32
1513  0000              
1514  0000                 SECTION DIV_33
1515  0000                 org CRT_ORG_DIV_33
1516  0000              
1517  0000                 SECTION DIV_34
1518  0000                 org CRT_ORG_DIV_34
1519  0000              
1520  0000                 SECTION DIV_35
1521  0000                 org CRT_ORG_DIV_35
1522  0000              
1523  0000                 SECTION DIV_36
1524  0000                 org CRT_ORG_DIV_36
1525  0000              
1526  0000                 SECTION DIV_37
1527  0000                 org CRT_ORG_DIV_37
1528  0000              
1529  0000                 SECTION DIV_38
1530  0000                 org CRT_ORG_DIV_38
1531  0000              
1532  0000                 SECTION DIV_39
1533  0000                 org CRT_ORG_DIV_39
1534  0000              
1535  0000                 SECTION DIV_40
1536  0000                 org CRT_ORG_DIV_40
1537  0000              
1538  0000                 SECTION DIV_41
1539  0000                 org CRT_ORG_DIV_41
1540  0000              
1541  0000                 SECTION DIV_42
1542  0000                 org CRT_ORG_DIV_42
1543  0000              
1544  0000                 SECTION DIV_43
1545  0000                 org CRT_ORG_DIV_43
1546  0000              
1547  0000                 SECTION DIV_44
1548  0000                 org CRT_ORG_DIV_44
1549  0000              
1550  0000                 SECTION DIV_45
1551  0000                 org CRT_ORG_DIV_45
1552  0000              
1553  0000                 SECTION DIV_46
1554  0000                 org CRT_ORG_DIV_46
1555  0000              
1556  0000                 SECTION DIV_47
1557  0000                 org CRT_ORG_DIV_47
1558  0000              
1559  0000                 SECTION DIV_48
1560  0000                 org CRT_ORG_DIV_48
1561  0000              
1562  0000                 SECTION DIV_49
1563  0000                 org CRT_ORG_DIV_49
1564  0000              
1565  0000                 SECTION DIV_50
1566  0000                 org CRT_ORG_DIV_50
1567  0000              
1568  0000                 SECTION DIV_51
1569  0000                 org CRT_ORG_DIV_51
1570  0000              
1571  0000                 SECTION DIV_52
1572  0000                 org CRT_ORG_DIV_52
1573  0000              
1574  0000                 SECTION DIV_53
1575  0000                 org CRT_ORG_DIV_53
1576  0000              
1577  0000                 SECTION DIV_54
1578  0000                 org CRT_ORG_DIV_54
1579  0000              
1580  0000                 SECTION DIV_55
1581  0000                 org CRT_ORG_DIV_55
1582  0000              
1583  0000                 SECTION DIV_56
1584  0000                 org CRT_ORG_DIV_56
1585  0000              
1586  0000                 SECTION DIV_57
1587  0000                 org CRT_ORG_DIV_57
1588  0000              
1589  0000                 SECTION DIV_58
1590  0000                 org CRT_ORG_DIV_58
1591  0000              
1592  0000                 SECTION DIV_59
1593  0000                 org CRT_ORG_DIV_59
1594  0000              
1595  0000                 SECTION DIV_60
1596  0000                 org CRT_ORG_DIV_60
1597  0000              
1598  0000                 SECTION DIV_61
1599  0000                 org CRT_ORG_DIV_61
1600  0000              
1601  0000                 SECTION DIV_62
1602  0000                 org CRT_ORG_DIV_62
1603  0000              
1604  0000                 SECTION DIV_63
1605  0000                 org CRT_ORG_DIV_63
1606  0000              
1607  0000              
1608  0000              
1609  0000              
1610  0000                 SECTION UNASSIGNED
1611  0000                 org 0
1612  0000              
1613  0000                 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1614  0000              
1615  0000              ENDIF
1616  0000              
1617  0000              IF __MMAP = 1
1618  0000              
1619  0000                 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1620  0000                 ;; esxdos extended dot command ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1621  0000                 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1622  0000              
1623  0000                 INCLUDE "crt_memory_model_dotx.inc"
1624  0000              
1625  0000              
1626  0000                 SECTION BANK_0
1627  0000                 org CRT_ORG_BANK_0
1628  0000              
1629  0000                 SECTION BANK_1
1630  0000                 org CRT_ORG_BANK_1
1631  0000              
1632  0000                 SECTION BANK_2
1633  0000                 org CRT_ORG_BANK_2
1634  0000              
1635  0000                 SECTION BANK_3
1636  0000                 org CRT_ORG_BANK_3
1637  0000              
1638  0000                 SECTION BANK_4
1639  0000                 org CRT_ORG_BANK_4
1640  0000              
1641  0000                 SECTION BANK_5
1642  0000                 org CRT_ORG_BANK_5
1643  0000              
1644  0000                 SECTION BANK_6
1645  0000                 org CRT_ORG_BANK_6
1646  0000              
1647  0000                 SECTION BANK_7
1648  0000                 org CRT_ORG_BANK_7
1649  0000              
1650  0000              
1651  0000              
1652  0000                 SECTION DIV_0
1653  0000                 org CRT_ORG_DIV_0
1654  0000              
1655  0000                 SECTION DIV_1
1656  0000                 org CRT_ORG_DIV_1
1657  0000              
1658  0000                 SECTION DIV_2
1659  0000                 org CRT_ORG_DIV_2
1660  0000              
1661  0000                 SECTION DIV_3
1662  0000                 org CRT_ORG_DIV_3
1663  0000              
1664  0000                 SECTION DIV_4
1665  0000                 org CRT_ORG_DIV_4
1666  0000              
1667  0000                 SECTION DIV_5
1668  0000                 org CRT_ORG_DIV_5
1669  0000              
1670  0000                 SECTION DIV_6
1671  0000                 org CRT_ORG_DIV_6
1672  0000              
1673  0000                 SECTION DIV_7
1674  0000                 org CRT_ORG_DIV_7
1675  0000              
1676  0000                 SECTION DIV_8
1677  0000                 org CRT_ORG_DIV_8
1678  0000              
1679  0000                 SECTION DIV_9
1680  0000                 org CRT_ORG_DIV_9
1681  0000              
1682  0000                 SECTION DIV_10
1683  0000                 org CRT_ORG_DIV_10
1684  0000              
1685  0000                 SECTION DIV_11
1686  0000                 org CRT_ORG_DIV_11
1687  0000              
1688  0000                 SECTION DIV_12
1689  0000                 org CRT_ORG_DIV_12
1690  0000              
1691  0000                 SECTION DIV_13
1692  0000                 org CRT_ORG_DIV_13
1693  0000              
1694  0000                 SECTION DIV_14
1695  0000                 org CRT_ORG_DIV_14
1696  0000              
1697  0000                 SECTION DIV_15
1698  0000                 org CRT_ORG_DIV_15
1699  0000              
1700  0000                 SECTION DIV_16
1701  0000                 org CRT_ORG_DIV_16
1702  0000              
1703  0000                 SECTION DIV_17
1704  0000                 org CRT_ORG_DIV_17
1705  0000              
1706  0000                 SECTION DIV_18
1707  0000                 org CRT_ORG_DIV_18
1708  0000              
1709  0000                 SECTION DIV_19
1710  0000                 org CRT_ORG_DIV_19
1711  0000              
1712  0000                 SECTION DIV_20
1713  0000                 org CRT_ORG_DIV_20
1714  0000              
1715  0000                 SECTION DIV_21
1716  0000                 org CRT_ORG_DIV_21
1717  0000              
1718  0000                 SECTION DIV_22
1719  0000                 org CRT_ORG_DIV_22
1720  0000              
1721  0000                 SECTION DIV_23
1722  0000                 org CRT_ORG_DIV_23
1723  0000              
1724  0000                 SECTION DIV_24
1725  0000                 org CRT_ORG_DIV_24
1726  0000              
1727  0000                 SECTION DIV_25
1728  0000                 org CRT_ORG_DIV_25
1729  0000              
1730  0000                 SECTION DIV_26
1731  0000                 org CRT_ORG_DIV_26
1732  0000              
1733  0000                 SECTION DIV_27
1734  0000                 org CRT_ORG_DIV_27
1735  0000              
1736  0000                 SECTION DIV_28
1737  0000                 org CRT_ORG_DIV_28
1738  0000              
1739  0000                 SECTION DIV_29
1740  0000                 org CRT_ORG_DIV_29
1741  0000              
1742  0000                 SECTION DIV_30
1743  0000                 org CRT_ORG_DIV_30
1744  0000              
1745  0000                 SECTION DIV_31
1746  0000                 org CRT_ORG_DIV_31
1747  0000              
1748  0000                 SECTION DIV_32
1749  0000                 org CRT_ORG_DIV_32
1750  0000              
1751  0000                 SECTION DIV_33
1752  0000                 org CRT_ORG_DIV_33
1753  0000              
1754  0000                 SECTION DIV_34
1755  0000                 org CRT_ORG_DIV_34
1756  0000              
1757  0000                 SECTION DIV_35
1758  0000                 org CRT_ORG_DIV_35
1759  0000              
1760  0000                 SECTION DIV_36
1761  0000                 org CRT_ORG_DIV_36
1762  0000              
1763  0000                 SECTION DIV_37
1764  0000                 org CRT_ORG_DIV_37
1765  0000              
1766  0000                 SECTION DIV_38
1767  0000                 org CRT_ORG_DIV_38
1768  0000              
1769  0000                 SECTION DIV_39
1770  0000                 org CRT_ORG_DIV_39
1771  0000              
1772  0000                 SECTION DIV_40
1773  0000                 org CRT_ORG_DIV_40
1774  0000              
1775  0000                 SECTION DIV_41
1776  0000                 org CRT_ORG_DIV_41
1777  0000              
1778  0000                 SECTION DIV_42
1779  0000                 org CRT_ORG_DIV_42
1780  0000              
1781  0000                 SECTION DIV_43
1782  0000                 org CRT_ORG_DIV_43
1783  0000              
1784  0000                 SECTION DIV_44
1785  0000                 org CRT_ORG_DIV_44
1786  0000              
1787  0000                 SECTION DIV_45
1788  0000                 org CRT_ORG_DIV_45
1789  0000              
1790  0000                 SECTION DIV_46
1791  0000                 org CRT_ORG_DIV_46
1792  0000              
1793  0000                 SECTION DIV_47
1794  0000                 org CRT_ORG_DIV_47
1795  0000              
1796  0000                 SECTION DIV_48
1797  0000                 org CRT_ORG_DIV_48
1798  0000              
1799  0000                 SECTION DIV_49
1800  0000                 org CRT_ORG_DIV_49
1801  0000              
1802  0000                 SECTION DIV_50
1803  0000                 org CRT_ORG_DIV_50
1804  0000              
1805  0000                 SECTION DIV_51
1806  0000                 org CRT_ORG_DIV_51
1807  0000              
1808  0000                 SECTION DIV_52
1809  0000                 org CRT_ORG_DIV_52
1810  0000              
1811  0000                 SECTION DIV_53
1812  0000                 org CRT_ORG_DIV_53
1813  0000              
1814  0000                 SECTION DIV_54
1815  0000                 org CRT_ORG_DIV_54
1816  0000              
1817  0000                 SECTION DIV_55
1818  0000                 org CRT_ORG_DIV_55
1819  0000              
1820  0000                 SECTION DIV_56
1821  0000                 org CRT_ORG_DIV_56
1822  0000              
1823  0000                 SECTION DIV_57
1824  0000                 org CRT_ORG_DIV_57
1825  0000              
1826  0000                 SECTION DIV_58
1827  0000                 org CRT_ORG_DIV_58
1828  0000              
1829  0000                 SECTION DIV_59
1830  0000                 org CRT_ORG_DIV_59
1831  0000              
1832  0000                 SECTION DIV_60
1833  0000                 org CRT_ORG_DIV_60
1834  0000              
1835  0000                 SECTION DIV_61
1836  0000                 org CRT_ORG_DIV_61
1837  0000              
1838  0000                 SECTION DIV_62
1839  0000                 org CRT_ORG_DIV_62
1840  0000              
1841  0000                 SECTION DIV_63
1842  0000                 org CRT_ORG_DIV_63
1843  0000              
1844  0000              
1845  0000              
1846  0000              
1847  0000                 SECTION UNASSIGNED
1848  0000                 org 0
1849  0000              
1850  0000                 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1851  0000              
1852  0000              ENDIF
1853  0000              
1854  0000              ;; end memory model ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1855  0000              
1856  0000              
1857  0000              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1858  0000              ;; INSTANTIATE DRIVERS ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1859  0000              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1860  0000              
1861  0000              
1862  0000              ; When FILEs and FDSTRUCTs are instantiated labels are assigned
1863  0000              ; to point at created structures.
1864  0000              ;
1865  0000              ; The label formats are:
1866  0000              ;
1867  0000              ; __i_stdio_file_n     = address of static FILE structure #n (0..__I_STDIO_NUM_FILE-1)
1868  0000              ; __i_fcntl_fdstruct_n = address of static FDSTRUCT #n (0..__I_FCNTL_NUM_FD-1)
1869  0000              ; __i_fcntl_heap_n     = address of allocation #n on heap (0..__I_FCNTL_NUM_HEAP-1)
1870  0000              
1871  0000              
1872  0000              
1873  0000              
1874  0000              
1875  0000              
1876  0000                 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1877  0000                 ;; create open and closed FILE lists
1878  0000                 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1879  0000              
1880  0000                 ; __clib_fopen_max   = max number of open FILEs specified by user
1881  0000                 ; 0 = number of static FILEs instantiated in crt
1882  0000                 ; __i_stdio_file_n   = address of static FILE structure #n (0..I_STDIO_FILE_NUM-1)
1883  0000              
1884  0000              	PUBLIC __MAX_FOPEN
1885  0000              
1886  0000                 SECTION data_clib
1887  0000                 SECTION data_stdio
1888  0000              
1889  0000                 IF (__clib_fopen_max > 0) || (0 > 0)
1890  0000              
1891  0000                    ; number of FILEs > 0
1892  0000              
1893  0000                    ; construct list of open files
1894  0000              
1895  0000                    IF 0 > 0
1896  0000              
1897  0000                       ; number of FILEs statically generated > 0
1898  0000              
1899  0000                       SECTION data_clib
1900  0000                       SECTION data_stdio
1901  0000              
1902  0000                       PUBLIC __stdio_open_file_list
1903  0000              
1904  0000                       __stdio_open_file_list:  defw __i_stdio_file_-1
1905  0000              
1906  0000                    ELSE
1907  0000              
1908  0000                       ; number of FILEs statically generated = 0
1909  0000              
1910  0000                       SECTION bss_clib
1911  0000                       SECTION bss_stdio
1912  0000              
1913  0000                       PUBLIC __stdio_open_file_list
1914  0000              
1915  0000                       __stdio_open_file_list:  defw 0
1916  0000              
1917  0000                    ENDIF
1918  0000              
1919  0000                    ; construct list of closed / available FILEs
1920  0000              
1921  0000                    SECTION data_clib
1922  0000                    SECTION data_stdio
1923  0000              
1924  0000                    PUBLIC __stdio_closed_file_list
1925  0000              
1926  0000                    __stdio_closed_file_list:   defw 0, __stdio_closed_file_list
1927  0000              
1928  0000                    IF __clib_fopen_max > 0
1929  0000              
1930  0000              		   defc __MAX_FOPEN = __clib_fopen_max
1931  0000              
1932  0000                       ; create extra FILE structures
1933  0000              
1934  0000                       SECTION bss_clib
1935  0000                       SECTION bss_stdio
1936  0000              
1937  0000                       __stdio_file_extra:      defs (__clib_fopen_max - 0) * 15
1938  0000              
1939  0000                       SECTION code_crt_init
1940  0000              
1941  0000                          ld bc,__stdio_closed_file_list
1942  0000                          ld de,__stdio_file_extra
1943  0000                          ld l,__clib_fopen_max - 0
1944  0000              
1945  0000                       loop:
1946  0000              
1947  0000                          push hl
1948  0000              
1949  0000                          EXTERN asm_p_forward_list_alt_push_front
1950  0000                          call asm_p_forward_list_alt_push_front
1951  0000              
1952  0000                          ld de,15
1953  0000                          add hl,de
1954  0000                          ex de,hl
1955  0000              
1956  0000                          pop hl
1957  0000              
1958  0000                          dec l
1959  0000                          jr nz, loop
1960  0000              
1961  0000                    ELSE
1962  0000              
1963  0000                       defc __MAX_FOPEN = 0
1964  0000              
1965  0000                    ENDIF
1966  0000              
1967  0000                 ENDIF
1968  0000              
1969  0000                 IF (__clib_fopen_max = 0) && (0 = 0)
1970  0000              
1971  0000                    defc __MAX_FOPEN = 0
1972  0000              
1973  0000                    ; create empty file lists
1974  0000              
1975  0000                    SECTION bss_clib
1976  0000                    SECTION bss_stdio
1977  0000              
1978  0000                    PUBLIC __stdio_open_file_list
1979  0000                    __stdio_open_file_list:  defw 0
1980  0000              
1981  0000                    SECTION data_clib
1982  0000                    SECTION data_stdio
1983  0000              
1984  0000                    PUBLIC __stdio_closed_file_list
1985  0000                    __stdio_closed_file_list:   defw 0, __stdio_closed_file_list
1986  0000              
1987  0000                 ENDIF
1988  0000              
1989  0000                 IF (__clib_fopen_max < 0) && (0 = 0)
1990  0000              
1991  0000                    defc __MAX_FOPEN = 0
1992  0000              
1993  0000                 ENDIF
1994  0000              
1995  0000                 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1996  0000                 ;; create fd table
1997  0000                 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1998  0000              
1999  0000                 ; __clib_open_max  = max number of open fds specified by user
2000  0000                 ; 0 = number of static file descriptors created
2001  0000              
2002  0000                 PUBLIC __fcntl_fdtbl
2003  0000                 PUBLIC __fcntl_fdtbl_size
2004  0000              
2005  0000                 IF 0 > 0
2006  0000              
2007  0000                    ; create rest of fd table in data segment
2008  0000              
2009  0000                    SECTION data_fcntl_fdtable_body
2010  0000              
2011  0000                    EXTERN __data_fcntl_fdtable_body_head
2012  0000              
2013  0000                    defc __fcntl_fdtbl = __data_fcntl_fdtable_body_head
2014  0000              
2015  0000                    IF __clib_open_max > 0
2016  0000              
2017  0000                       SECTION data_fcntl_fdtable_body
2018  0000              
2019  0000                       defs (__clib_open_max - 0) * 2
2020  0000                       defc __fcntl_fdtbl_size = __clib_open_max
2021  0000              
2022  0000                    ELSE
2023  0000              
2024  0000                       defc __fcntl_fdtbl_size = 0
2025  0000              
2026  0000                    ENDIF
2027  0000              
2028  0000                 ELSE
2029  0000              
2030  0000                    IF __clib_open_max > 0
2031  0000              
2032  0000                       ; create fd table in bss segment
2033  0000              
2034  0000                       SECTION bss_clib
2035  0000                       SECTION bss_fcntl
2036  0000              
2037  0000                       __fcntl_fdtbl:        defs __clib_open_max * 2
2038  0000              
2039  0000                    ELSE
2040  0000              
2041  0000                       ; no fd table at all
2042  0000              
2043  0000                       defc __fcntl_fdtbl = 0
2044  0000              
2045  0000                    ENDIF
2046  0000              
2047  0000                    defc __fcntl_fdtbl_size = __clib_open_max
2048  0000              
2049  0000                 ENDIF
2050  0000              
2051  0000              	PUBLIC __MAX_OPEN
2052  0000              	defc   __MAX_OPEN = __fcntl_fdtbl_size
2053  0000              
2054  0000                 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
2055  0000                 ;; finalize stdio heap
2056  0000                 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
2057  0000              
2058  0000                 ; __clib_stdio_heap_size  = desired stdio heap size in bytes
2059  0000                 ; 0  = byte size of static FDSTRUCTs
2060  0000                 ; 0   = number of heap allocations
2061  0000                 ; __i_fcntl_heap_n     = address of allocation #n on heap (0..__I_FCNTL_NUM_HEAP-1)
2062  0000              
2063  0000                 IF 0 > 0
2064  0000              
2065  0000                    ; static FDSTRUCTs have been allocated in the heap
2066  0000              
2067  0000                    SECTION data_clib
2068  0000                    SECTION data_fcntl
2069  0000              
2070  0000                    PUBLIC __stdio_heap
2071  0000              
2072  0000                    __stdio_heap:            defw __stdio_block
2073  0000              
2074  0000                    SECTION data_fcntl_stdio_heap_head
2075  0000              
2076  0000                    __stdio_block:
2077  0000              
2078  0000                       defb 0                ; no owner
2079  0000                       defb 0x01             ; mtx_plain
2080  0000                       defb 0                ; number of lock acquisitions
2081  0000                       defb 0xfe             ; spinlock (unlocked)
2082  0000                       defw 0                ; list of threads blocked on mutex
2083  0000              
2084  0000                    IF __clib_stdio_heap_size > (0 + 14)
2085  0000              
2086  0000                       ; expand stdio heap to desired size
2087  0000              
2088  0000                       SECTION data_fcntl_stdio_heap_body
2089  0000              
2090  0000                       __i_fcntl_heap_0:
2091  0000              
2092  0000                          defw __i_fcntl_heap_1
2093  0000                          defw 0
2094  0000                          defw __i_fcntl_heap_-1
2095  0000                          defs __clib_stdio_heap_size - 0 - 14
2096  0000              
2097  0000                       ; terminate stdio heap
2098  0000              
2099  0000                       SECTION data_fcntl_stdio_heap_tail
2100  0000              
2101  0000                       __i_fcntl_heap_1:   defw 0
2102  0000              
2103  0000                    ELSE
2104  0000              
2105  0000                       ; terminate stdio heap
2106  0000              
2107  0000                       SECTION data_fcntl_stdio_heap_tail
2108  0000              
2109  0000                       __i_fcntl_heap_0:   defw 0
2110  0000              
2111  0000                    ENDIF
2112  0000              
2113  0000                 ELSE
2114  0000              
2115  0000                    ; no FDSTRUCTs statically created
2116  0000              
2117  0000                    IF __clib_stdio_heap_size > 14
2118  0000              
2119  0000                       SECTION data_clib
2120  0000                       SECTION data_fcntl
2121  0000              
2122  0000                       PUBLIC __stdio_heap
2123  0000              
2124  0000                       __stdio_heap:         defw __stdio_block
2125  0000              
2126  0000                       SECTION bss_clib
2127  0000                       SECTION bss_fcntl
2128  0000              
2129  0000                       PUBLIC __stdio_block
2130  0000              
2131  0000                       __stdio_block:         defs __clib_stdio_heap_size
2132  0000              
2133  0000                       SECTION code_crt_init
2134  0000              
2135  0000                       ld hl,__stdio_block
2136  0000                       ld bc,__clib_stdio_heap_size
2137  0000              
2138  0000                       EXTERN asm_heap_init
2139  0000                       call asm_heap_init
2140  0000              
2141  0000                    ENDIF
2142  0000              
2143  0000                 ENDIF
2144  0000              
2145  0000              
2146  0000              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
2147  0000              ;; STARTUP ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
2148  0000              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
2149  0000              
2150  0000              SECTION CODE
2151  0000              
2152  0000              PUBLIC __Start, __Exit
2153  0000              
2154  0000              EXTERN _main
2155  0000              
2156  0000              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
2157  0000              ;; USER PREAMBLE ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
2158  0000              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
2159  0000              
2160  0000              IF __crt_include_preamble
2161  0000              
2162  0000                 include "crt_preamble.asm"
2163  0000                 SECTION CODE
2164  0000              
2165  0000              ENDIF
2166  0000              
2167  0000              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
2168  0000              ;; PAGE ZERO ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
2169  0000              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
2170  0000              
2171  0000              IF (ASMPC = 0) && (__crt_org_code = 0)
2172  0000              
2173  0000                 include "../crt_page_zero_z80.inc"
2174  0000              
2175  0000              ENDIF
2176  0000              
2177  0000              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
2178  0000              ;; CRT INIT ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
2179  0000              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
2180  0000              
2181  0000              __Start:
2182  0000              
2183  0000                 include "../crt_start_di.inc"
1     0000                 IF (__crt_enable_eidi & 0x01)
2     0000              
3     0000  F3                di
4     0001              
5     0001                 ENDIF
6     0001              
2184  0001              
2185  0001                 IF (__crt_on_exit & 0x10000) && (__crt_on_exit & 0x20000) && (!(__crt_on_exit & 0x8)) && (__crt_on_exit & 0x2)
2186  0001              
2187  0001                    ; returning to basic
2188  0001              
2189  0001                    push iy
2190  0001                    exx
2191  0001                    push hl
2192  0001              
2193  0001                    IF __crt_enable_commandline = 2
2194  0001              
2195  0001                       exx
2196  0001              
2197  0001                    ENDIF
2198  0001              
2199  0001                 ENDIF
2200  0001              
2201  0001                 include "../crt_save_sp.inc"
1     0001              
2     0001                 ; do not save sp if
3     0001                 ; * program jumps to address on exit
4     0001                 ; * program halts on exit
5     0001              
6     0001                 IF (__crt_on_exit & 0x10000)
7     0001              
8     0001                    IF (__crt_on_exit & 0x8)
9     0001              
10    0001                       ; program restarts on exit
11    0001              
12    0001                       IF (__register_sp = -1)
13    0001              
14    0001                          ld (__sp_or_ret),sp
15    0001              
16    0001                       ENDIF
17    0001              
18    0001                    ELSE
19    0001              
20    0001                       IF (__crt_on_exit & 0x2)
21    0001              
22    0001                          ; program returns to caller on exit
23    0001              
24    0001                          ld (__sp_or_ret),sp
25    0001              
26    0001                       ELSE
27    0001              
28    0001                          IF (__crt_on_exit & 0x4)
29    0001              
30    0001                             ; program jumps to caller on exit
31    0001              
32    0001                             IF (__crt_enable_commandline != 2)
33    0001              
34    0001                                pop hl
35    0001                                ld (__sp_or_ret),hl
36    0001              
37    0001                             ELSE
38    0001              
39    0001                                pop de
40    0001                                ld (__sp_or_ret),de
41    0001              
42    0001                             ENDIF
43    0001              
44    0001                          ENDIF
45    0001              
46    0001                       ENDIF
47    0001              
48    0001                    ENDIF
49    0001              
50    0001                 ENDIF
51    0001              
2202  0001              
2203  0001              __Restart:
2204  0001              
2205  0001                 include "../crt_init_sp.inc"
1     0001              IF __register_sp < -1
2     0001              
3     0001                 ld sp,(-__register_sp)      ; stack location is stored at memory address
4     0001              
5     0001              ELSE
6     0001              
7     0001                 IF __register_sp != -1
8     0001              
9     0001  31 00 D0          ld sp,__register_sp      ; stack is at fixed address
10    0004              
11    0004                 ENDIF
12    0004              
13    0004              ENDIF
14    0004              
2206  0004              
2207  0004                 ; command line
2208  0004              
2209  0004                 IF (__crt_enable_commandline = 1) || (__crt_enable_commandline >= 3)
2210  0004              
2211  0004                    include "../crt_cmdline_empty.inc"
2212  0004              
2213  0004                 ENDIF
2214  0004              
2215  0004              __Restart_2:
2216  0004              
2217  0004                 IF __crt_enable_commandline >= 1
2218  0004              
2219  0004                    push hl                  ; argv
2220  0004                    push bc                  ; argc
2221  0004              
2222  0004                 ENDIF
2223  0004              
2224  0004                 ; initialize data section
2225  0004              
2226  0004                 include "../clib_init_data.inc"
1     0004              
2     0004                 ; initialize data section
3     0004              
4     0004                 IF (__crt_model = 1)
5     0004              
6     0004                    ; rom model + data section is not compressed
7     0004              
8     0004                    EXTERN __CODE_END_tail
9     0004                    EXTERN __DATA_head, __DATA_END_tail
10    0004              
11    0004                    ld hl,__CODE_END_tail
12    0004                    ld de,__DATA_head
13    0004                    ld bc,__DATA_END_tail - __DATA_head
14    0004              
15    0004                    EXTERN asm_memcpy
16    0004                    call   asm_memcpy
17    0004              
18    0004                 ENDIF
19    0004              
20    0004                 IF (__crt_model >= 2)
21    0004              
22    0004                    ; rom model + data section is compressed
23    0004              
24    0004                    EXTERN __CODE_END_tail
25    0004              		EXTERN __DATA_head, __DATA_END_tail
26    0004              
27    0004                    ld hl,__CODE_END_tail
28    0004                    ld de,__DATA_head
29    0004                    ld bc,__DATA_END_tail - __DATA_head
30    0004              
31    0004                    ld a,b
32    0004                    or c
33    0004              
34    0004                    EXTERN   asm_dzx7_standard
35    0004                    call nz, asm_dzx7_standard
36    0004              
37    0004                 ENDIF
38    0004              
2227  0004              
2228  0004                 ; initialize bss section
2229  0004              
2230  0004                 include "../clib_init_bss.inc"
1     0004              
2     0004                 ; initialize bss section
3     0004              
4     0004                 IF __crt_initialize_bss
5     0004              
6     0004                       EXTERN asm_memset
7     0004                       EXTERN __BSS_head, __BSS_UNINITIALIZED_head
8     0004              
9     0004                       ld hl,__BSS_head
10    0004                       ld bc,__BSS_UNINITIALIZED_head - __BSS_head
11    0004              
12    0004                       ld e,0
13    0004                       call asm_memset
14    0004              
15    0004                 ENDIF
16    0004              
2231  0004              
2232  0004                 ; interrupt mode
2233  0004              
2234  0004                 include "../crt_set_interrupt_mode.inc"
1     0004                 IF (__crt_org_vector_table > 0)
2     0004              
3     0004                    ; copy interrupt vector table to final destination
4     0004              
5     0004                    EXTERN __interrupt_vectors_head
6     0004                    EXTERN __interrupt_vectors_size
7     0004              
8     0004                    ld hl,__interrupt_vectors_head
9     0004                    ld de,__crt_org_vector_table
10    0004                    ld bc,__interrupt_vectors_size
11    0004              
12    0004                    EXTERN asm_memcpy
13    0004                    call   asm_memcpy
14    0004              
15    0004                 ENDIF
16    0004              
17    0004                 IF (__crt_org_vector_table != 0)
18    0004              
19    0004                    IF (__crt_org_vector_table < 0)
20    0004              
21    0004                       ld a,-__crt_org_vector_table/$100
22    0004              
23    0004                    ELSE
24    0004              
25    0004                       ld a,__crt_org_vector_table/$100
26    0004              
27    0004                    ENDIF
28    0004              
29    0004                    ld i,a
30    0004              
31    0004                    IF (__Z180)
32    0004              
33    0004                      ; Set the z180 internal interrupt vector low byte
34    0004              
35    0004                      IF (__crt_org_vector_table < 0)
36    0004              
37    0004                         ld a,+(-__crt_org_vector_table+__IO_VECTOR_BASE)&$E0
38    0004              
39    0004                      ELSE
40    0004              
41    0004                         ld a,+(__crt_org_vector_table+__IO_VECTOR_BASE)&$E0
42    0004              
43    0004                      ENDIF
44    0004              
45    0004                      out0 (IL),a
46    0004              
47    0004                    ENDIF
48    0004              
49    0004                 ENDIF
50    0004              
51    0004                 IF (__crt_interrupt_mode >= 0) && (__crt_interrupt_mode <= 2)
52    0004              
53    0004                    ; set interrupt mode
54    0004              
55    0004                    im __crt_interrupt_mode
56    0004              
57    0004                 ENDIF
58    0004              
2235  0004              
2236  0004              SECTION code_crt_init          ; user and library initialization
2237  0000              SECTION code_crt_main
2238  0000              
2239  0000                 include "../crt_start_ei.inc"
1     0000                 IF (__crt_enable_eidi & 0x02)
2     0000              
3     0000                    ei
4     0000              
5     0000                 ENDIF
6     0000              
2240  0000              
2241  0000                 ; call user program
2242  0000              
2243  0000  CD 00 00       call _main                  ; hl = return status
2244  0003              
2245  0003                 ; run exit stack
2246  0003              
2247  0003                 IF __clib_exit_stack_size > 0
2248  0003              
2249  0003                    EXTERN asm_exit
2250  0003                    jp asm_exit              ; exit function jumps to __Exit
2251  0003              
2252  0003                 ENDIF
2253  0003              
2254  0003              __Exit:
2255  0003              
2256  0003                 IF !((__crt_on_exit & 0x10000) && (__crt_on_exit & 0x8))
2257  0003              
2258  0003                    ; not restarting
2259  0003              
2260  0003                    push hl                  ; save return status
2261  0003              
2262  0003                 ENDIF
2263  0003              
2264  0003              SECTION code_crt_exit          ; user and library cleanup
2265  0000              SECTION code_crt_return
2266  0000              
2267  0000                 ; close files
2268  0000              
2269  0000                 include "../clib_close.inc"
1     0000                 IF __crt_enable_close
2     0000              
3     0000                    ; TODO
4     0000                    ; close open files
5     0000              
6     0000                 ENDIF
7     0000              
2270  0000              
2271  0000                 ; terminate
2272  0000              
2273  0000                 IF (__crt_on_exit & 0x10000) && (__crt_on_exit & 0x20000) && (!(__crt_on_exit & 0x8)) && (__crt_on_exit & 0x2)
2274  0000              
2275  0000                    ; returning to basic
2276  0000              
2277  0000                    include "crt_exit_basic.inc"
2278  0000              
2279  0000                 ELSE
2280  0000              
2281  0000                    include "../crt_exit_eidi.inc"
1     0000                 IF (__crt_enable_eidi & 0x10)
2     0000              
3     0000                    di
4     0000              
5     0000                 ENDIF
6     0000              
7     0000                 IF (__crt_interrupt_mode_exit >= 0) && (__crt_interrupt_mode_exit <= 2)
8     0000              
9     0000  ED 56                im __crt_interrupt_mode_exit
10    0002              
11    0002                 ENDIF
12    0002              
13    0002                 IF (__crt_enable_eidi & 0x20)
14    0002              
15    0002                    ei
16    0002              
17    0002                 ENDIF
18    0002              
2282  0002                    include "../crt_restore_sp.inc"
1     0002              
2     0002                 IF (__crt_on_exit & 0x10000)
3     0002              
4     0002                    IF (__crt_on_exit & 0x8)
5     0002              
6     0002                       ; program restarts
7     0002              
8     0002                       IF (__crt_enable_commandline < 2)
9     0002              
10    0002                          IF (__register_sp = -1)
11    0002              
12    0002                             ld sp,(__sp_or_ret)
13    0002              
14    0002                          ENDIF
15    0002              
16    0002                       ELSE
17    0002              
18    0002                          IF (__register_sp = -1)
19    0002              
20    0002                             ld sp,(__sp_or_ret)
21    0002              
22    0002                          ENDIF
23    0002              
24    0002                       ENDIF
25    0002              
26    0002                    ELSE
27    0002              
28    0002                       pop hl                ; hl = return status
29    0002              
30    0002                       IF (__crt_on_exit & 0x2)
31    0002              
32    0002                          ; program returns to caller
33    0002              
34    0002                          ld sp,(__sp_or_ret)
35    0002              
36    0002                       ENDIF
37    0002              
38    0002                    ENDIF
39    0002              
40    0002                 ELSE
41    0002              
42    0002                    ; program jumps to absolute address
43    0002              
44    0002                    pop hl                   ; hl = return status
45    0002              
46    0002                 ENDIF
47    0002              
2283  0002                    include "../crt_program_exit.inc"
1     0002              
2     0002                 IF (__crt_on_exit & 0x10000)
3     0002              
4     0002                    IF (__crt_on_exit & 0x8)
5     0002              
6     0002                       ; program restarts
7     0002              
8     0002                       IF (__crt_enable_commandline < 2)
9     0002              
10    0002  C3 01 00                jp __Restart
11    0005              
12    0005                       ELSE
13    0005              
14    0005                          IF (__register_sp != -1)
15    0005              
16    0005                             include "../crt_init_sp.inc"
17    0005              
18    0005                          ENDIF
19    0005              
20    0005                          include "../crt_cmdline_empty.inc"
21    0005              
22    0005                          jp __Restart_2
23    0005              
24    0005                       ENDIF
25    0005              
26    0005                    ELSE
27    0005              
28    0005                       IF (__crt_on_exit & 0x2)
29    0005              
30    0005                          ; program returns to caller
31    0005              
32    0005                          ret
33    0005              
34    0005                       ELSE
35    0005              
36    0005                          IF (__crt_on_exit & 0x4)
37    0005              
38    0005                             ; program jumps to caller
39    0005              
40    0005                             ld de,(__sp_or_ret)
41    0005                             push de
42    0005                             ret
43    0005              
44    0005                          ELSE
45    0005              
46    0005                             ; program halts
47    0005              
48    0005                             halt
49    0005                             jr ASMPC
50    0005              
51    0005                          ENDIF
52    0005              
53    0005                       ENDIF
54    0005              
55    0005                    ENDIF
56    0005              
57    0005                 ELSE
58    0005              
59    0005                    ; program jumps to absolute address
60    0005              
61    0005                    IF (__crt_on_exit & 0xffff)
62    0005              
63    0005                       jp __crt_on_exit & 0xffff
64    0005              
65    0005                    ELSE
66    0005              
67    0005                       rst 0
68    0005              
69    0005                    ENDIF
70    0005              
71    0005                 ENDIF
72    0005              
2284  0005              
2285  0005                 ENDIF
2286  0005              
2287  0005              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
2288  0005              ;; RUNTIME VARS ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
2289  0005              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
2290  0005              
2291  0005              include "../crt_jump_vectors_z80.inc"
1     0005              IF __page_zero_present
2     0005              
3     0005              SECTION smc_jump_vectors
4     0005              
5     0005              IF ((__crt_enable_rst & 0x0202) = 0x0202)
6     0005              
7     0005                 PUBLIC _z80_rst_08h_vector
8     0005              
9     0005                 defc _z80_rst_08h_vector = __z80_rst_08h + 1
10    0005              
11    0005                 EXTERN _z80_rst_08h
12    0005              
13    0005                 __z80_rst_08h:
14    0005              
15    0005                    jp _z80_rst_08h
16    0005              
17    0005              ENDIF
18    0005              
19    0005              IF ((__crt_enable_rst & 0x0404) = 0x0404)
20    0005              
21    0005                 PUBLIC _z80_rst_10h_vector
22    0005              
23    0005                 defc _z80_rst_10h_vector = __z80_rst_10h + 1
24    0005              
25    0005                 EXTERN _z80_rst_10h
26    0005              
27    0005                 __z80_rst_10h:
28    0005              
29    0005                    jp _z80_rst_10h
30    0005              
31    0005              ENDIF
32    0005              
33    0005              IF ((__crt_enable_rst & 0x0808) = 0x0808)
34    0005              
35    0005                 PUBLIC _z80_rst_18h_vector
36    0005              
37    0005                 defc _z80_rst_18h_vector = __z80_rst_18h + 1
38    0005              
39    0005                 EXTERN _z80_rst_18h
40    0005              
41    0005                 __z80_rst_18h:
42    0005              
43    0005                    jp _z80_rst_18h
44    0005              
45    0005              ENDIF
46    0005              
47    0005              IF ((__crt_enable_rst & 0x1010) = 0x1010)
48    0005              
49    0005                 PUBLIC _z80_rst_20h_vector
50    0005              
51    0005                 defc _z80_rst_20h_vector = __z80_rst_20h + 1
52    0005              
53    0005                 EXTERN _z80_rst_20h
54    0005              
55    0005                 __z80_rst_20h:
56    0005              
57    0005                    jp _z80_rst_20h
58    0005              
59    0005              ENDIF
60    0005              
61    0005              IF ((__crt_enable_rst & 0x2020) = 0x2020)
62    0005              
63    0005                 PUBLIC _z80_rst_28h_vector
64    0005              
65    0005                 defc _z80_rst_28h_vector = __z80_rst_28h + 1
66    0005              
67    0005                 EXTERN _z80_rst_28h
68    0005              
69    0005                 __z80_rst_28h:
70    0005              
71    0005                    jp _z80_rst_28h
72    0005              
73    0005              ENDIF
74    0005              
75    0005              IF ((__crt_enable_rst & 0x4040) = 0x4040)
76    0005              
77    0005                 PUBLIC _z80_rst_30h_vector
78    0005              
79    0005                 defc _z80_rst_30h_vector = __z80_rst_30h + 1
80    0005              
81    0005                 EXTERN _z80_rst_30h
82    0005              
83    0005                 __z80_rst_30h:
84    0005              
85    0005                    jp _z80_rst_30h
86    0005              
87    0005              ENDIF
88    0005              
89    0005              IF ((__crt_enable_rst & 0x8080) = 0x8080)
90    0005              
91    0005                 PUBLIC _z80_rst_38h_vector
92    0005              
93    0005                 defc _z80_rst_38h_vector = __z80_rst_38h + 1
94    0005              
95    0005                 EXTERN _z80_rst_38h
96    0005              
97    0005                 __z80_rst_38h:
98    0005              
99    0005                    jp _z80_rst_38h
100   0005              
101   0005              ENDIF
102   0005              
103   0005              IF (__crt_enable_nmi > 1)
104   0005              
105   0005                 PUBLIC _z80_nmi_vector
106   0005              
107   0005                 defc _z80_nmi_vector = __z80_nmi + 1
108   0005              
109   0005                 EXTERN _z80_nmi
110   0005              
111   0005                 __z80_nmi:
112   0005              
113   0005                    jp _z80_nmi
114   0005              
115   0005              ENDIF
116   0005              
117   0005              ENDIF
118   0005              
2292  0005              
2293  0005              IF (__crt_on_exit & 0x10000) && ((__crt_on_exit & 0x6) || ((__crt_on_exit & 0x8) && (__register_sp = -1)))
2294  0005              
2295  0005                 SECTION BSS_UNINITIALIZED
2296  0005                 __sp_or_ret:  defw 0
2297  0005              
2298  0005              ENDIF
2299  0005              
2300  0005              include "../clib_variables.inc"
1     0005              
2     0005              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
3     0005              ;; library variables ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
4     0005              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
5     0005              
6     0005              IF __clib_balloc_table_size > 0
7     0005              
8     0005                 ; create balloc table
9     0005              
10    0005                 SECTION data_clib
11    0005                 SECTION data_alloc_balloc
12    0005              
13    0005                 PUBLIC __balloc_array
14    0005              
15    0005                 __balloc_array:             defw __balloc_table
16    0005              
17    0005                 SECTION bss_clib
18    0005                 SECTION bss_alloc_balloc
19    0005              
20    0005                 __balloc_table:             defs __clib_balloc_table_size * 2
21    0005              
22    0005              ENDIF
23    0005              
24    0005              IF __clib_malloc_heap_size = -1
25    0005              
26    0005                 ; place malloc heap between bss section and bottom of the stack
27    0005              
28    0005                 SECTION data_clib
29    0005                 SECTION data_alloc_malloc
30    0005              
31    0005                 PUBLIC __malloc_heap
32    0005              
33    0005                 EXTERN __BSS_END_tail
34    0005              
35    0005                 __malloc_heap:              defw __BSS_END_tail
36    0005              
37    0005                 SECTION code_crt_init
38    0005              
39    0005                 ld hl,-1                    ; ensure sp == 0 is accepted
40    0005                 add hl,sp                   ; hl = top of the stack
41    0005              
42    0005                 ld de,__BSS_END_tail
43    0005              
44    0005                 xor a
45    0005                 sbc hl,de                   ; hl = space between top of stack and end of bss - 1
46    0005              
47    0005                 jp c, __Exit                ; if stack overlaps bss, this is a fatal error
48    0005              
49    0005                 ld bc,__crt_stack_size + 14 ; amount of space reserved by stack + minimum heap size - 1
50    0005                 sbc hl,bc                   ; hl = max heap size - 15
51    0005              
52    0005                 jp c, __Exit                ; if no room for heap, this is a fatal error
53    0005              
54    0005                 ld bc,15
55    0005                 add hl,bc
56    0005              
57    0005                 ld c,l
58    0005                 ld b,h                      ; bc = available heap size
59    0005              
60    0005                 ex de,hl                    ; hl = __BSS_END_tail = start of heap
61    0005              
62    0005                 EXTERN asm_heap_init
63    0005                 call asm_heap_init
64    0005              
65    0005              ENDIF
66    0005              
67    0005              IF __clib_malloc_heap_size < -1
68    0005              
69    0005                 ; place malloc heap between bss section and including address abs(CLIB_MALLOC_HEAP_SIZE)
70    0005              
71    0005                 SECTION data_clib
72    0005                 SECTION data_alloc_malloc
73    0005              
74    0005                 PUBLIC __malloc_heap
75    0005              
76    0005                 EXTERN __BSS_END_tail
77    0005              
78    0005                 __malloc_heap:              defw __BSS_END_tail
79    0005              
80    0005                 SECTION code_crt_init
81    0005              
82    0005                 ld hl,-__clib_malloc_heap_size - 13
83    0005                 ld de,__BSS_END_tail
84    0005              
85    0005                 xor a
86    0005                 sbc hl,de
87    0005              
88    0005                 jp c, __Exit                ; if no room for minimum size heap, fatal error
89    0005              
90    0005                 ld bc,14
91    0005                 add hl,bc
92    0005              
93    0005                 ld c,l
94    0005                 ld b,h                      ; bc = available heap size
95    0005              
96    0005                 ex de,hl                    ; hl = __BSS_END_tail = start of heap
97    0005              
98    0005                 EXTERN asm_heap_init
99    0005                 call asm_heap_init
100   0005              
101   0005              ENDIF
102   0005              
103   0005              IF __clib_malloc_heap_size > 14
104   0005              
105   0005                 ; create malloc heap in bss section
106   0005              
107   0005                 SECTION data_clib
108   0000                 SECTION data_alloc_malloc
109   0000              
110   0000                 PUBLIC __malloc_heap
111   0000              
112   0000  00 00          __malloc_heap:              defw __malloc_block
113   0002              
114   0002                 SECTION bss_clib
115   0000                 SECTION bss_alloc_malloc
116   0000              
117   0000  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0020  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0040  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0060  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0080  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      00A0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      00C0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      00E0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0100  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0120  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0140  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0160  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0180  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      01A0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      01C0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      01E0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0200  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0220  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0240  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0260  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0280  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      02A0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      02C0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      02E0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0300  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0320  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0340  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0360  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0380  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      03A0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      03C0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      03E0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0400  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0420  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0440  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0460  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0480  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      04A0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      04C0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      04E0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0500  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0520  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0540  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0560  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0580  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      05A0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      05C0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      05E0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0600  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0620  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0640  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0660  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0680  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      06A0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      06C0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      06E0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0700  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0720  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0740  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0760  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0780  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      07A0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      07C0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      07E0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0800  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0820  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0840  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0860  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0880  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      08A0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      08C0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      08E0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0900  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0920  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0940  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0960  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0980  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      09A0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      09C0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      09E0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0A00  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0A20  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0A40  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0A60  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0A80  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0AA0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0AC0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0AE0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0B00  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0B20  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0B40  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0B60  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0B80  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0BA0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0BC0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0BE0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0C00  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0C20  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0C40  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0C60  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0C80  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0CA0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0CC0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0CE0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0D00  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0D20  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0D40  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0D60  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0D80  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0DA0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0DC0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0DE0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0E00  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0E20  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0E40  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0E60  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0E80  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0EA0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0EC0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0EE0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0F00  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0F20  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0F40  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0F60  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0F80  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0FA0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0FC0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      0FE0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      1000  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      1020  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      1040  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      1060  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      1080  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      10A0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      10C0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      10E0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      1100  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      1120  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      1140  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      1160  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      1180  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      11A0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      11C0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      11E0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      1200  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      1220  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      1240  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      1260  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      1280  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      12A0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      12C0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      12E0  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      1300  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      1320  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      1340  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      1360  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
      1380  00 00 00 00 00 00 00 00 
                           __malloc_block:             defs __clib_malloc_heap_size
118   1388              
119   1388                 SECTION code_crt_init
120   0000              
121   0000  21 00 00       ld hl,__malloc_block
122   0003  01 88 13       ld bc,__clib_malloc_heap_size
123   0006              
124   0006                 EXTERN asm_heap_init
125   0006  CD 00 00       call asm_heap_init
126   0009              
127   0009              ENDIF
128   0009              
129   0009                 ; create exit stack
130   0009              
131   0009                 SECTION bss_clib
132   0000                 SECTION bss_stdlib
133   0000              
134   0000                 PUBLIC __exit_stack
135   0000              
136   0000  00             __exit_stack:               defb 0
137   0001                                             defs __exit_stack_size * 2
138   0001              
139   0001                 ; create quickexit stack
140   0001              
141   0001                 SECTION bss_clib
142   0000                 SECTION bss_stdlib
143   0001              
144   0001                 PUBLIC __quickexit_stack
145   0001              
146   0001  00             __quickexit_stack:          defb 0
147   0002                                             defs __quickexit_stack_size * 2
148   0002              
149   0002                 ; assign thread id
150   0002              
151   0002                 SECTION data_clib
152   0000                 SECTION data_threads
153   0000              
154   0000                 PUBLIC __thrd_id
155   0000              
156   0000  01             __thrd_id:                  defb 1
157   0001              
158   0001              ;; end library variables ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
159   0001              
2301  0001              
2302  0001              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
2303  0001              ;; CLIB STUBS ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
2304  0001              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
2305  0001              
2306  0001              include "../clib_stubs.inc"
1     0001              
2     0001                 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
3     0001                 ;; unimplemented
4     0001                 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
5     0001              
6     0001                 ; system()
7     0001              
8     0001                 PUBLIC __ch_system
9     0001              
10    0001                 EXTERN error_zc
11    0001              
12    0001                 defc __ch_system = error_zc
13    0001              
14    0001                 ; threads
15    0001                 ; these functions are preliminary only
16    0001              
17    0001                 PUBLIC __thread_context_switch
18    0001                 PUBLIC __thread_block_timeout
19    0001                 PUBLIC __thread_unblock
20    0001              
21    0001                 EXTERN l_ret
22    0001              
23    0001                 defc __thread_context_switch = l_ret
24    0001                 defc __thread_block_timeout  = l_ret
25    0001                 defc __thread_unblock        = l_ret
26    0001              
27    0001                 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
28    0001                 ;; dynamically generated functions
29    0001                 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
30    0001              
31    0001                 ; dynamic printf
32    0001              
33    0001                 IFNDEF CLIB_OPT_PRINTF
34    0001                    IFDEF CLIB_OPT_PRINTF_2
35    0001                       defc CLIB_OPT_PRINTF = 0
36    0001                    ENDIF
37    0001                 ENDIF
38    0001              
39    0001                 IFNDEF CLIB_OPT_PRINTF_2
40    0001                    IFDEF CLIB_OPT_PRINTF
41    0001                       defc CLIB_OPT_PRINTF_2 = 0
42    0001                    ENDIF
43    0001                 ENDIF
44    0001              
45    0001                 IFDEF CLIB_OPT_PRINTF
46    0001              
47    0001                    IF __SDCC_IY
48    0001              
49    0001                       INCLUDE "../../stdio/z80/asm_vfprintf_unlocked_iy.asm"
50    0001              
51    0001                    ELSE
52    0001              
53    0001                       INCLUDE "../../stdio/z80/asm_vfprintf_unlocked.asm"
54    0001              
55    0001                    ENDIF
56    0001              
57    0001                 ENDIF
58    0001              
59    0001                 ; dynamic scanf
60    0001              
61    0001                 IFNDEF CLIB_OPT_SCANF
62    0001                    IFDEF CLIB_OPT_SCANF_2
63    0001                       defc CLIB_OPT_SCANF = 0
64    0001                    ENDIF
65    0001                 ENDIF
66    0001              
67    0001                 IFNDEF CLIB_OPT_SCANF_2
68    0001                    IFDEF CLIB_OPT_SCANF
69    0001                       defc CLIB_OPT_SCANF_2 = 0
70    0001                    ENDIF
71    0001                 ENDIF
72    0001              
73    0001                 IFDEF CLIB_OPT_SCANF
74    0001              
75    0001                    IF __SDCC_IY
76    0001              
77    0001                       INCLUDE "../../stdio/z80/asm_vfscanf_unlocked_iy.asm"
78    0001              
79    0001                    ELSE
80    0001              
81    0001                       INCLUDE "../../stdio/z80/asm_vfscanf_unlocked.asm"
82    0001              
83    0001                    ENDIF
84    0001              
85    0001                 ENDIF
86    0001              
2307  0001              
2308  0001              
2309  0001              
2310  0001              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
2311  0001              ;; if 2 cartridge ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
2312  0001              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
2313  0001              
2314  0001              
2315  0001              
2316  0001              
2317  0001              
2318  0001              
2319  0001              
2320  0001              
2321  0001              
2322  0001              
2323  0001              
2324  0001              
2325  0001              
2326  0001              
2327  0001              
2328  0001              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
2329  0001              ;; esxdos dot command ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
2330  0001              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
2331  0001              
2332  0001              
2333  0001              
2334  0001              
2335  0001              
2336  0001              
2337  0001              
2338  0001              
2339  0001              
2340  0001              
2341  0001              
2342  0001              
2343  0001              
2344  0001              
2345  0001              
2346  0001              
2347  0001              
2348  0001              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
2349  0001              ;; esxdos extended dot command ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
2350  0001              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
2351  0001              
2352  0001              
2353  0001              
2354  0001              
2355  0001              
2356  0001              
2357  0001              
2358  0001              
2359  0001              
2360  0001              
2361  0001              
2362  0001              
2363  0001              
2364  0001              
2365  0001              
2366  0001              
2367  0001              
